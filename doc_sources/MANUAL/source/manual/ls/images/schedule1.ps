%!PS-Adobe-2.0
%%Creator: dvips(k) 5.991 Copyright 2011 Radical Eye Software
%%Title: job-001.dvi
%%CreationDate: Sun Jan  6 14:09:28 2013
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 157 3096 727 3229
%%DocumentFonts: SFRM1200 SFRM1440
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips job-001.dvi -o job-001.dvips.ps
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2013.01.06:1409
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: cm-super-t1.enc 0 0
% This file is generated from `T1uni.map' and `glyphlist.txt', `gl-other.txt'
%
% LIGKERN hyphen hyphen =: endash ; endash hyphen =: emdash ;
% LIGKERN quoteleft quoteleft =: quotedblleft ;
% LIGKERN quoteright quoteright =: quotedblright ;
% LIGKERN comma comma =: quotedblbase ; less less =: guillemotleft ;
% LIGKERN greater greater =: guillemotright ;
% LIGKERN f f =: ff ; f i =: fi ; f l =: fl ; ff i =: ffi ; ff l =: ffl ;
%
% LIGKERN space {} * ; * {} space ; zero {} * ; * {} zero ;
% LIGKERN one {} * ; * {} one ; two {} * ; * {} two ;
% LIGKERN three {} * ; * {} three ; four {} * ; * {} four ;
% LIGKERN five {} * ; * {} five ; six {} * ; * {} six ;
% LIGKERN seven {} * ; * {} seven ; eight {} * ; * {} eight ;
% LIGKERN nine {} * ; * {} nine ;
%
/T1Encoding [
% 0x00
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
% 0x10
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/afii61664
/perthousandzero % PERTHOUSAND ZERO
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
% 0x20
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
% 0x30
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
% 0x40
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
% 0x50
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
% 0x60
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
% 0x70
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt % HANGING HYPHEN
% 0x80
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
% 0x90
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcommaaccent
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
% 0xA0
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
% 0xB0
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcommaaccent
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
% 0xC0
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
% 0xD0
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/SS % Germandbls
% 0xE0
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
% 0xF0
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls % or /germandbls.alt
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: SFRM1440
%!FontType1-1.0: SFRM1440 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecrm1440, tcrm1440, larm1440, lbrm1440, lcrm1440, rxrm1440.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Roman) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFRM1440 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-178 -319 1370 944}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E4875AA6B96583CD5632BAD9EB3D511DF934CD36447A31
D420FA313B5721C37085F478B27E13191957AD30B8B082BCE733AF8402AA3B7D
EC69807BBAA8142AF1CE151D99F5A59AD18798F94781EFAD48BEC8C62C05C56A
336D71AB584F6DF014C56523108606FADE931125496247870E980A65AB33C0C6
D5B074864D0F58CBE333EFA1201AF335FBDBFB1CC8B1294856C250F222BFB8BE
5DE74F808904F7678552F213C674497F829E96812D340939F73737731D289801
54E5A8F7F5067ACD9D768F4649B51E54513F2F7878141FC719627C23FC5FBBB6
3F663343D902E95C56C559B588088227B22378FAAB29392FA62933283D2FB2EA
FDAEC6C1A94ABA0B5BEFA1E728A2052434BFBF6D9759D02A2C6092D4EF794241
CC28BC939A424AFA193F96530985EE89E2731F6A99BC84C6551A3FEA1342509D
D389F786C8EAF972B8C98B79003B6C71E6696518BE4CAD2A317C5D29621031B4
00A035445D8CFB67D6C136B3F6D82396E11A3679BC82498519C27601236F1FCA
073DA7817B529424CAF49A0AEE8FF7520C0F204A3B1725F46C2C6953C20E93B6
2F3EED0EEDF87A350CB841516107D9571503A3D62A2F81840070D43392160783
D111F3463760EBE634515DA1A1B6C3A5D14FC475F277BAC792FB69B4219E9BF5
E6F8520584096A7B7BFE439A1604C2BBBB85471EB8E1E14B362891DC18525949
E4DF9FD1F089353BD1D79E0E27DD9AB76AC48548BB1CB4FB83132059A4C60AA0
82796A3641E7AB20C71418E5AF3E18E07BAB3A2952D4DBF39EC35FE37A8A7965
CD3A8D040A19FB3855671F07AC12FD84BB3D3C7D257FDCA0864314B9EF98E221
48D27945597DCAACC5C78220CFABDD2F71DF17D2ECB26B273704AF5EFE4A2503
82DCDB836B55F212F19C2A5D23B0F0F91C29DF4D780CDE769503A43B6824DC95
6BEBEF4BD42CE5148E2E8A6FABCC3BDCEDF0C0D6DE52905B69143CFC0E3033EB
AF4F1A66927F0A67BB50B46BFEE44785B812D8B5BD126D2F0B0E155DF8B41150
5C4752C387B9D9597313822A9591068153AD5E1ACF22A8AC8BC6E606A7EDA19F
F235A1B1D92C9048EBA6EE668F1E896F1F9E1E4F6839CF107528644165C4AE6A
9664F798EABE3095AF2CF44C7889A31A4EB49C93B637D314982A922AC80EEDE7
4532E61F0A414824E7D3D3A541F29C163DD4A6FCA9D574718B98242EB54C02A1
C171AF3DCC112DE733003275C7B0CD83B1B29767D18B3817C4BD86E452016C9C
47D191A10F10DFE650760F0CC40799D7FC06D16F028A304E0EEECDF6C5C50274
B4B1C7E6A48D18DE6EE1D7E755F7061E25A1F47DF2767A6BF81F124B923B7814
539E6D297DBD2C462F673051EC33B6D56F5BD022F4EF4B5B2B09A1C9F485D643
F072963A85D4F8227772F4EE8AA7BC73BD23FA168AD5390B54C9574B6D9BED63
F0A8928C0C06829558B665A0255A3696EA7F933FBB8306E5B5A64E5B65CC8020
2F13851A7D82EF814BD296140C6E7B4CEBF2B60B014CDA35ABE1367341E2EF2E
E5B0E394C5C86283EB497AF713ACAAE06FF9882F2D19862612DDA2981AEC782E
66F22E5ECDBE484B0D2370565E1EF1C37C82CD4F44A84198F452D839BD62C601
08BF66812654A976F0690B6855DD4D93B75AF627C0356DDB1615315AF28355D2
6C87EE2BDE151974ED38A0BF7614E76EA86B408D51CB492A28990E43B0D34777
D170971C0E540D53723E90898543833D5EF0EB03A043886A4285269F53D34BBF
58D467514988BEF2B66CFA2083822F2CDBCA87A1533DB0EDA6440BCF74E52DB1
8DC8FCB26B3F8299146C93B4B5610F5F1B69B4BABD13F4515A4D1CB249862DB4
B6DA468475CE4A11679BD279CBDC056EDAE16884CD13FA687EA73B86023CDE55
15FB84E4061B05B22E8BCA468994FA22D64D75C67AB2ED618FF480358FFF3A08
B13E2530BBF0E1B4D899A043C64C860DC33BB123FC9D031B2305F0F5F9F766F2
D67CB10682F8DC836C8D05C11C947FC65350DE088289253B7B34C7410293C807
480F46C21989A09F9F9B36F8E112E69CCC64B6DBD117EA4C4AEBAF0616FD824A
2C1941F1EE7BAB40854B5C485A06EB118283F7907A829EB9B316C2B256EC3C94
C6F7FA2D0AAF03297DD579ACAC7E45DF14F44D1AB2A79192EC0D57D02353236A
1BDCDA9D6D0AAC8815F986DBC340E54000DB9B9C9B512A591D6EC06F66AE52DE
02D2EAD21921F975BFF5F70AC946951D3FBDC435116748EF16F5C652DE4BCFF8
31B9ECB20C9E9896C7615FBFD571194D1220F623191992BADF5FFA28F8467581
A6FB4A16087A0EBC96511BF4FDB4C1F501BE45F4746B6BCFE2EF18DE8E8272C4
B9A21962EBD0E9D5EDAC021CDA82ED6B602214112BAF5E8AA09577EC6C89B429
AFF2077439F378CA63501ACD55AA40B796AFCBC9FAD3E25E00218D05F087180F
CEF26B8C3F9BC4CEF9E178684143BD560FF65327A010425AD427F450946F6F84
386150F02E45DD3BF0F073DCDED0BB512BF7AED3B59A6F1A07D507EC9FD16BB3
6D75396C10B860F00BCD5A7C108A688749134752680446F888A9F1D56AF5D466
0BCDD4369882D4E588043BB5F58F876C6EED19A5987FA54B40DA37378D87A810
EDC6B4E86385F813B452F25CB85317CFD5AA48A8F8DD351882D1A2835504BE0F
327FEEE42B483BAC09DB560AE4A17AC2985AAC4291517EA4B3F4AF9411819EEC
F84153544AB2F2B4BC8FC5EC7081457123A5B05E94ABE9DB2D73219476ACC1A7
912313796ED89F984EBE3650F2640205DE9C3DFA592B81F8CDE170201C4BB053
1D4F530689167B7DCE2E42F32B121C810226CCD80AF416C079A5991AEF9F7955
85D5FBC9E8A17FFA5B88B256ED641AABA269DCDD24DE122BA63CCF51B070DAFC
00C67B49D501CAA5B86CD25FD07D9B8C9600EE03507397E65DAAF0B0B0749E05
027D5493A806A353E32D3378C4A9AB5C9B4A7E2D80539C7C4D26E2757240BD50
608A8314368A21E37A31DB84209BD8885470998982BC0C57E6CAD01C28D09D01
776436E2F07CD4EC408D5FD8E5A7981AEC782E66F22E5ECDBE484B0D219BDDE0
82932182F83C4BDDF163BAF4EB9C09ED733CCE3A613073D28515CE6918CEBA17
4BFF6DA4523F8298CE381D567C22A1B09B5DDC97AC3DCC1FAA14E557CFD01E47
7F5EBAC8CCA2FA32F58781A04B435841F63123528081675B0B825ED15589CE49
2D884C08661B1FC11C9598EAEEB20F7CD996E84D5E0A19757F2241781E960EA0
AEE3CC6E0195274565B5F0CFF08CFE3515DB1B2049FC75A35C4A80904F1CF3C3
30F68205E2650B94BC0C5D4FEBA843AAC818578EB4A5B62F027CF871A10B59DC
915429233706148979A8B0A3F62B37E3020300719140740EDCCE23F9DD1E844F
CEAA98C5CDF301B370A547F41D67DFAADED4D67583CF1842C75922980FB9F0B6
94EB8C7E35258572B07B5E6DA03A1CE6577D120C8C884E733C81679A7636CBD8
9280F31461E586581770F83952F50A94BF6A509F55C87865C661F589080FAE01
224ABD39ED91B4FF6DFD0411727965C758FAEBCB596771F270BA9A71C33D368C
E03E723B8E9661FB1F7B1128990701A7A98C53ABCD4BBE2B76F03AF839F7B3F6
4411CA10D20ABE8524481A9DEAEA23BF38625B87358FB2A6564FE7B35105CFF1
6DCC8B88C78150E60E8853B4E83842417FB91C66ECA1A87669C4B76028C284FF
FE1C626089978C8EBD85D6FDDBD74B6110A081E0D95DEA748A6EDD306601B8FA
5E4FFF3B50336C56A12E941030549DDCFC514DA0699643267D78C262F7C24D57
B438BF66A2820E6AFFF1E130BB2EA6A8D35E94282B3929BCBA0D2CDC7BD0022C
3378B8399D207AF72F5A50B37FD8E11130240E5483E01637152BA948E1EC459B
EECDDDB17DB2FE123382320756156ACF6FEF2A3D7690B054DBA04D4354E1D423
DF13C522797B7D71DAE6A6EF1D23B50C2B33937E2C3A6F4F920DE2FAD383A2C4
705A21F6F12752ACDEDB217369EFA3348F9E2976659A76AD3F388B2FFC563024
205C9F1796FCD03122D50F769BE27D0EE36E4EF950D6C0B07CEAA48BCFE3525B
3AD83CA1303AFD84F39355EC3E5C1F343AC2F6071317CC36E9BDA5CB7D93FC42
992345B8793F48CA8C26F80F4824DBE03BBC46DF88DDB70D0535D1BC8D88BBC2
46E1FDC16AD0B3F60BA1D57833E97CA9643D7EEE4365D5C807298D66CA7B0EB7
875A1B125267D985B621FC39F609F98956035877BC04A2A6CCC73F7D8B394382
46610693BD95F7E93B09B7EB900C02C76A1D58AD90A5482C2E444BFE08C9D318
30EFE9DC7CD4DE6CEA6D5E8BD5EC5A3637F41FC7458FCE101E307F7BF6AE2927
3EEF30397407B2FF9D23B193235479F0D8437E09AB5ADE38E1160368778A557E
D09C2D35E9B58C7B3BCDF87F6077D8C4423D10F8A736DDB7D2BDFBAAD699C74A
C16305389F1235AA26D3CB39150243AFE6E66913D3A895BDF6980ACD233D8056
EFD67343990A15C4E2BA17E4FE9A3BD773BB09DA0807D0B38C79688D67132768
2733F62F3327589A7E03000DB9EE8E65092A2388B652802A64B2E1FF79F1D3FC
07EF85862F0F31939D505D2881EA65620690C78A3DAC4B7E091DCE521CDE7C86
DD56D65266985B7FB0896667EC7BB2856E1E9905D4982CF6D2B765E134491338
C808E35FAA43757866ED2CAB51089E2814241A9C997D4E73D4B3B36ECAF512EE
A86DB1E7737DF4D0CAF7AA3D1C010A40A2D678DDC82E586EA67A010AC6052A54
548AC762C452DA8F2278C22CCBA69C407138837F1D2F109C2D67621B6EF21D2D
BDE76CEAF3DC21E1B0442B568ABECB2594EB11331C72926796BBC93615F1F3E6
8BF3AA81126A7F5F089E6AE8D58C4E9AC13F1B1DD5E631CD2E8CF306CBF79B11
A249E1B9C1772CA11C732E14898337FDD1FE54B5EA44570B7FFEF7C5F0618795
B1B3CB792E49FB9596AB5013806B0051A3DB0EE2F9EFD7EFA3F6906950E1BB75
A02588E5222A07160D28C438219956AE18C510C3EC9DADBECAF085D96D393D94
914A40B179135893F2CCE85D4D2DFD6A1599FDADF3C21F161FAA1E28EC28D50F
A1022C3205A1255A9EDBEE23A55FBF610BCD24ACEFA5ED22CD6E28CF38D37645
0FA9C7C73E2AEAEF83ACC988D73B4C61697016CA5E90658D85A60C9F9385BBAA
F9A808FBECB3E306B060F9DB899852D635506D3978DA797648968C095F790AA8
8F335B390108BEC571BCEDBF4CA710C8A46B6C45605681AEA11F9DCAC1831DEE
40BBCE64AF9477454205ABF69816E654ABE4CFCD3ED8A1A2F2A4C2CF19F51A76
E58BDAA87993D2CDE42063AB5FF7FC0EB2EAB05393FA10EA4B6F42F1C29703D8
0121801D6FCE3BB17ADC8597F0BC87F7605CB4338A6294FDFF0A4DF05BFDF958
2F5BCED7CEB37EBAFD8206E691FDF7C14714E5677F893E2EA3A50A3520295B06
FE4C76529E02A585AA57E38AFBB5932AF73944BD875E62BEB43BCF34678484A1
6ED06FF297082A90A2D14B53245AA757A208C68F61D37B1C1C5C719DDD7E59A7
58BD72A27F6E8217C72FB291858CA3A619BAF5F735397407B2FF9D23B1932354
79F0D8437D5EBB49BBF294D1BDD3546C87C041F4CB91165343A525E6038A71F0
0234920B956EA143394657CC787466CB6229130061A6581B77B91328BDC9D872
F9879644D6D06B280D928B87B671EFFBDA6FC60D592261A181AF102402A341EC
5660888068E3818EEE8F77F2D24418F03F2D9F06194229D2F9F2FC88CB2B4709
034E24DB6553A025F760169CBA1E4334D72374D4E8DAE4717F17B86B4C6DDE24
623FB950B5AD36C5461FEC830E7075AC75B812BE81BAE0196AA209D1CFA5C825
4E03AA3BD8E5624366E6540FE896E01C68371202ACFCEDA895E30FA0CF17E0FD
80252AD76EA35541881381768E12BD428B67BC897D8F00B2F80D65C960AC4D52
164DEA4A010969B14DB7E2FF7B2215C3A82BFDB44DA4E54A8F84C92FC373B022
84F9060C62A29DD19F7E425F4A71E0ABC51FCBA6005E7862DB9018BA8D8C8C77
1F3B74C0ACC8DDEA1982F0A6F59B670986C6A81009D3C81A0BC8EC91091CB575
ECBB38CBDCF48A1E0924E284DC8B48AC15D0DA08BC6040842D63C7D876713261
67A34CB960C26B64702F3F95C202C75FA9D37FB26EB5EE5DD2EFAFC07E0370E3
FAA1860073F3CCA3F0C3D790FC1982DAC76418CC75C59DB674B8684AA0C7CDD8
A552F815906BAF60486820AD219033A8F7C8DA92708053B92836CF854B1BBF8B
A8C015686FABF7B8BB808537ECD6F22EAE49EE6A3987451CC34E6B862E07570D
513B0250645AE721572B7DFF5632B9F43E42D7228A61CF7A97DA2D98DA493604
037C11199B5ACEFB28FA9E324FDA701FD91D90392861A8291CD0D3A0BB041ACB
65B9E6E655AFE53D20E4E73AD17C60343A0D6983DF61299D256A7A727DA6AFDF
0DC109E63E154A5957CD998D2E9B7F145511E28D768768D62E369E54EF876C67
F7EA5B47910425E1C1A5524BDFE7207889B1A7F1D86D759BBC27CBA2DF59907E
26E783A7E139E8F89A5F4E07FC12A45A73B44A62602FC06D7C37FFED36B3A124
9A06109FE8002E8949FF0CFACD9BD0534FA02847A4341F88CFC7672BDB5BA9A1
05C98F893A69874A3F0293D687F8117DA25D3C66FCB01DDF556244251C0A6701
288589CFACE23E946F6907604A4AE4955F76168F341065F40286D62E664D818D
CDDD6A2AC22E259166D219A2ED688710B6F9F83C58113EB16454B8827E91B67A
AA0AE2654BA6F85AB2A27E9187C3BE89CFCB303E06CB7548EB7573C1A40E6A47
417D718C37C2FAA6792874076538200DDDF125E9DF1C22D1E15A4F0ED8E1FF88
240480E405FC436052C1BC4373DFC80D55B6F8AF17DBBF27066BF090199C2BFC
C7ED2059053B7D4B10EFC838870904016187EC0A2FA93CF65FE0F14DA80E080A
417E78F9D6A10A365985F7D9A1C4B124F8B04E98EE2D8B349142CD1675A9D31E
01E1DBD900A74CBE104E972C5181D183CE74AA89474AC1D8ABBA08627423F0B7
F088438FD286E3584BB89F9F25253FEEE5F0E6080027618E020AC137250A1D33
0CC17528FC0840FF2DFB499611EE3DBCA777AC4DDFEFB23F41C7C91EEC8A9EB1
36AD0292B6F005AA6D9F56CBD6D1C649691C3E5A6DD38F336613794A1D78A2ED
8FA6043E519AD508D6DC2F24AF327E4998BDB3FB2C085ECACECCE0234229DB7C
8BFD0309F63FC3832F740B09344274B026E8C2A0F1A167444F3504EDAC2FA6BB
214F06522DE8967A14F6F01C22B7C557E8007B09B95103753BA53A7807453B92
7361362849D408D6DE27B03FFBEC9976DFC6B634B92086ED9CD83DE07CB476D3
72ACCD1DBB20192400C26EF0ECDD2D390A27EB60E7C1EB7763E21679120CC4D5
9A2F64954FA8D1AD3C72744D2618007F4203D2B195A6336D129F42FCE5085DA4
6C3062464093D1B68FBC0D53C386A53E3314FEBEE945A4EFE90E2781D4F23835
9C63DB264A067F32CA82E80393FC1442B0C5AEEFECBCC8E27512B968ACC608BB
0F79650251C8A2DD4293CF49F2DEC55106D803396574D71B9319F39812EAFC09
51F619BBCCF098E188CB2C756C52F8D060AB9C758ACA2BDB1D1DCB1B3FBE79BD
B97D80CF1EF32324EF6A0238572C562073E76C8071C8CEDCEDEDDFFC255D8B77
CD9080AA75954C0EF4261DB3ADC40E2C3DC6A9B40417E361F92C48D35F258462
1E0F0E0B70C942F47A9C58BE16CB37F2472B9D0C606D4FB431093136DF6989DB
8CA2E6505611869FAB0C30EB99616DC4FDB29F0B0DD69370170825BD6123AEDC
3799E89B06F5B2166CBD8AF8B8B9DBDF932B5C621FF490AFD5F86DB88FC6C460
E46A1BA13020FB2234565E56B1C92DC63DA85B3C80DC07348D5C04F3C3D62F90
C72C60AB4C127E1C112A68C48548BB1CB4F936E8F60D7D07C5D332DC47307876
77BDB9746B18A2D28468839253B8A4619D3A9361D94EE0245719924B4BD62E67
1BE7D9FC2DCF7CE8AF18CF12DFF060D3D2786B1D52814E6F2FF720FD9815ABD5
998D98A2F330B4E18D9C7F1323D614F1125CFC5B5B822740215786C777E3721D
85508E159F2B9C8553338EC823E677D85F6F9C4D0F5D7F76C2051BFB3C16115E
D8A79C83C7A90AE3391FA0CC1A12EF7EFEE399E838013770FC07531D32BDA5C8
859118DCE36A4C67AD7E76C129C3294562FC859031DB7F4B6A74DD81E8E884C3
8B3316C879BB1C3E6A9CF7937893E3588D75BBE78CB32E0133765517039417C8
46890B52607CFA345ADF9F91A5D2DF077819CED21AAA820DB3B093224999A373
A0AF2FD7C07A7C308A814BF892AD5EC136764861075988AC44FEF4946A1C8EA4
40CD6712DE9C6E45EDFA194B4744286F89E913D02064A355FD03B84B01C485C9
DFD480060642F8B337D2E4EEFD5AF3706980A3B9650D6DDA13C722B233136F99
89303481B529E3E7B2F24A5649FA3A644F4EDECDD7998FBCF28FFF07614B28AF
0A498A752C2CDEC3322E728DF55AD33EF84FD46C2E9243D6F681B688B14D7AC0
36C0571DCC990C60FBA08F6624D2321F5DEE1B6AE6BB25DC094980FE38AC1700
8A6E53CAAC70B716695D5AB39E02B9FBAC24764750FB3C48325C552F14CEBE7A
978718CD9810FE2ED0CFD642876388578EE91DBED994237A2556BEBDA358B1A8
68581D4EC0051F70FA13C410FAFAC56DCBE1159D37C681626A87E271F7CFCFB6
2238DC3E583643ABCBFE6A18BB2AA38617882995AAA741F1C47C6E7DDC8F276C
19D8F511D712FB892735BF37ACF18799E003D704FC6D134C5DBC0EDFCB0326CB
F528015F2C12AEB430143E9C3CF13C7DE5CAAC3B2E33AFBC11EEC371FFC22BAA
0AFEBD61E874EB2B8B198960599E26190D689772ED3BB2A04E4DA2B8C0B8B39E
48183783344DCB96E253D462D80487319E7372E4665FE59E91D2B4E4DE5CEF51
E9EE02C0314E434723BB02264DF18A1F6FFEA6D759F92C93D885DC2D0893A36C
EBAB3545F646F0E2901322D1F2C581CA109B317AE028A280BCDDB45D9AA70DDC
5179C63AC96C5CBFD103EA294F2D41197982598382DBDFDB229F242848E74475
5965E111885E6E4AC9477347E3E6D9AFB6B926AADB6049C003A5C68B90CBB2EE
7D3880C873DE9C6A371FD36C80FCBE83B62DCCC0ABB0B5B8BFCDF9657C416A2F
BC84FDECDC85258A2B8FA01E81013AECD56AE90725D1E1E1361904F370ED0F10
05FB16A244008381D5EE67E9568E3C962B72147F8C338AA7CD1BDE5FBE444EB8
4F20B11A143840EC16F66F07529829F39B0E7DF2794BEFDC96EA878064AEFF8F
7B2E65D54B50D198E97C75921C40B5A186252584DF6EA1EF675A72FA6F1158A1
EDCF0CDF39CA406FDF46DBBA605CD6BC94F2409B92D2D5D264F20DDDC33466DF
2998327F8E4A4271963979A62B5E34FFAB7B05C459649AB45977E51B59C58B51
B358F5C52A2BCDA0DC6B0969D391FA8209DE5C7F1728BB722A1A0309DC2C1CFA
6831E6FED5C439C72171B0F1851CFD7055E9ABA4F88130A7E3BD3171492D58D2
52E3FA2075BF3DB52067CB19E72026C3B53E75B02B5F601A79562E67613F274E
E63C0FE9FB37A32D8B3CFC0D6EBE884BA6DB391153F939FA69BDD8DD1CE033B2
96B5E70EFB065D71A8FB0962424AB04CC61C17CCAE0177D2B99D728EA89D23B1
EF0149DC9724B738DEB7E6AA1B7F38FEEB2FFE370EFE6F9BB7E8DE0E1DF4B0E2
EE3B94B5475966580222B2733094AFCBCB5CB509F2B57DDBDA18159F64A29AE9
DE94F18E7C5E64EA9F87278769BB6CB77A01D844FAEA2BA7D35B7B16C0F388D1
EB4DE4C6AE71D5C2D8E9983CE00941BF16164C409199DFF5EF7D8D7D998C3ED8
862207495B6682A37AD3E8F63804DC599682227A2D178B06F65F0070E913833E
87535CCFBDE0A55314FD4581A011D932C4004E60AD978B9746742A32C733F2EB
7D92FC02BC0D028233068555D035D92DDEAE6DC31CAB040CCE6F375FBBCCE74F
D9811F7D05D239E23F5206269C920CF3D64F952CF68A50A7502E66461C1D7861
EB94BE51B345F9EE10B0F405F8D3AAB829FFE2307DBE7FF107E4C6CB4B6971DF
C9BBBA66F227109095DB0ADDD1514C4BE607F5FD988BFE8744296B82E135123A
22836D454D9B36B6D210E2B4D770A7E46951D4FDB05FC3B18B33E6C393F4819A
9A972A8B9FC2FEB59CDED7502E91FD75EA41973DB0C63ABDE3F9E88F8E503BD8
B2F8B8317E563103514C6CA5940C6CF164F701E2D31E6534D90F0DD3E77FCD02
521785F4D0B006EE1A20C3D3B0FD14719BD5B35E657F2C3E78DF65418DB36D6A
3AA282631543D33DC4EB54EC3AFBBDA443DF49C84B161A7FDFBC26151D66893E
312892B18CC51D80CEDA91BAE681225C8C9E67D05506A96A0C51EC2564692188
660FCE71B68EE25C4EBCD075C0EF1A271A0EF326BB95E0C51F54302C5A28982F
DB7DB0D3B03E54FF994668338EF0742EB8512B21855566D70C09BE1765F2AAA1
DA0C332A9DDCD0E175E01B99D06006D81D1FA0A3F62237B7F86F24F23F6F70B2
0DE94E55913B7576A2A462E9C8ADE639113D52C3EEFAB12A4B320D5971206D73
32A50F8AD7CEA83C99BA6831E2C5647895A3B9DED31D11CA00F079268D4E29B7
FAAB71F13605808EDEF57A0221FED4D966B2FB42DD21E1B57EFD8F249AE3B858
51360290831B0103E86A4492DC06444069FFF2FDE1CFD45148506D5648E4BDA0
9B53912E217B52902671B49BD3039434DD3DE61F3DBA32BE0EFC91C23B8FE6B9
93CDE3133136F8BB5C37A84327B703B9E085C7AB14FB9BBB34F3C37987F2379C
22947D8C4B57F2471D36E70B54BCA110E3A914752E4C96457559901506916F88
518FB841260995D44011BB4E7176FAF6EE950215BE50DC846374B50FF8320692
F903BAC08032A3DD099DA1BF5D66E3A0E887BDEE616AFF4A66FCF41D02C7EF23
FB6EB840D55CA5374CC67000F63CA5B9427BB4236ED902D12E69AD562A4D800E
27847CC38B4024C04AAD3E7D1B6A9D5A0C7840E7858411DB81442BABB4C4E94B
5A824F3F879FAF06F8D889AF6148B60BCC727F9013D3601BF5C4572D69A22EAC
5A3F9D96289950C298A71A88052B3E05FA9E962DC65C8652B081CC0D5BA5C1AA
9B63C354E8017B2AC7CD97101C8379A9285E125D6388D077A65D777B776B9254
6D2FBE93A5DD581A3162E4438261AFC191284C14774FB9454F337A111CBA1DEB
B862E345E09059F1AFF60D1BBB6E2F39D6C0E0B81608421B58D7A535E0C44939
9EB698038549EB507B2C2269BEB4C247E0131E487FAF073414332B622EB2AFB0
4512AFF4C02B740DAE78B9D00EA80AF70D240B0CE86EDE45315A4A849D815324
0D813786A8059A30A4B7538AA37698ED19B3A2A4A7C4DA6C428A89423F08D608
58AA3E10F7FA6245A0E56F2937AFDECE2AE38E0421186F1380C2AF96889076A9
D088FE9824C719409642215831D6C561D3005B0F8BA4E409451349B093864FCD
01CC46231B54B333D2AFD3151406EED1B806A329E053627F86239F5637C3FF1D
19DF0002A2745AEFABBEFCE833D15CF8059E0D08915362F2AAFA8C9025F840B8
287B6E7E70E01717BF963137034625915AFF5C642071F721A8D5521ED78C73F3
DFE214428A0F88C056FDB8493729F24F6D4CB296636B448A3B6632E85C7B4953
F3E61BBA7B2315A12E2020EFF5707D9ACE98B690BBB181E2FE79158DB0724660
C37596CC9C029261FA368331F49142353C99B6E332DE769FF0A96D4A38D79A19
E711B8FA32DC8CF92036B5D4CE20C4D65F5C406A44B7AD0E298061B884E002B4
77E87E0539A36AEFF80448552F28AD8584A6FE6051F93D77213669D50E2A4F80
BE2BCD34C41960ABDEFBD1E3317215F557B79A0632EF6508A84EC7049A7A8CBD
BB257C936D41F731889A9392E709430EB39F2834D145633421B40C83E9A42CFC
56C428FE57FD48F8C7524FC5E99C9A86796A7F609CBF43C8FB3E4E1145C49B86
F016F64B4DE2633C2DEC569110FF4D35460D2FBF0C1271505F22039A6C729A31
F616F50021509BA77C61BD91A65223C281529E82B94C290D37141A0654D8098B
52D29122EDB45960FFBCDFA826F88873FE92B15DA0715D36F1DF047415A87BED
5360B4CC228428D59F362CF7C4A6BFBBC5A0CF9D895A3D9DDDCCF573D349E0ED
264E200B4EDC70A6F418C496C5E2A8CA277F99337F0085FF65195C2AFC9BA3AB
8566B089DF9FB02186035CCDDA9BC206F685612FA1F6AAE914DFC2390B8810D6
63EE43A65D8486B5407765A74007AB87C211E2858B7624A196E17918A4638E8E
CEAAEA3F70AFDCA51D3B9AEF76FDF408D3F7779999E90CB8C54EA493D99F8013
2DFC3E70AAFF58C6E0189A8147F3ABD840E2B9F8499478A93F425F299A63BEC9
218DCD771FF5153341F7D3B04DACE977E9C1C6FEB5E795C329DB5EB9D98F3E59
517EF96315B33039B9C9994188891EA552E78A49FA9B0EDDD4CB45E848189326
1472074372DF06EF4CAE89F532E6B81F8263694CD3CBFF2C7A0DDBF0E6EBA736
5F8673524C71F814E5F5BC9C997C1C07FC53A01DDEBF9C33F8BFEA1679F36030
906762048EFDD17A77B56CD34CF47191FD1514AAA9C14CD6991D0C4C60F4496A
F88F0E64BEA87F25FD5A7BCD4CA9604FB9438FD1483642D629859CD098E37538
92F6D94C40EBB2CCEDF15B3942111D5CF74CCE113B69C19E11C81F08D8E5ACEB
71A4C28C2600C6EF522A59EE26ED55DC77A82E11E8716702D62208B2788B766B
4D5F9DB3D291AC37B1D1E8445E11B473753B0AA93A64F732EE8E6B74F78FE60D
677AA82A2402C2B3124CD33226D0F938671FF87F2DC907B4134B3C74598E0698
1BEFB9707B04F95585D2C9AF501B5CAC21599A680CA0BF25A53E5005C2A71683
DEEBC4DFEB2977D1F87F76E3C236DC5E22B801AA95E331C5176F9E36ED58F830
04D70227ADD2A5C75AC382C88BC9ABCED7C83571BE63002CCFC50358094BAD34
FB8BFCF7FAAE5471676510C294549F7054F8EE61E0547058C7FF7795C1B895E7
215D620716ADF4CB91EFA42FB772A4A7F63148CB7381A5C98355CDEFEADED90F
B6A5B0205531D903700ED4B4644E7D97980FCE998C0F6D05C74C34B18700AB33
486DF7BD38990D8807223E49229C1BA184421DAF14BC99D88F58573CDEBA3B49
05C4C6A1EC435B40EF0BF4A85D57F3F6223AD5EDD1563E8FC5360408BF87DB17
A9A78466592DD99E9838BF144021761F8A817710940881D73EE05B9DD2EC694E
881E738195A370BBE24D4D12BE6425852B97F3AC3758F54C35A177F32ED9DC56
FE67CB02041F811F7E422ADDE911B363C533D475FB21AA68FED382F05DFD04E9
B2657FC316BE39FFD46B9B3DF7B9B12686BB0E7BE6D366941D18EEC73222CE23
08147DFFE2433566A852CE1152B46FFD696AAF7610C3423C41316006C10CEE94
D78C7994EAEFEF2E4B7224087F3651C269E8501D12D99C787B8BE9702C25BDD5
3C8990BC99434E87B66806C5510864DF4AA0AD3F47D7841DB7AF183C475ECE02
40892F53D775343ABC9FBAB8833A79AD6837349305C33A9C1728DF696C7DB049
8AED193B4ADB70E1D2A695368218F7E1D815FA6998DF9CEFDF7A81091155B5FF
A3E6858A393D9B0752CDC3525E11FB229A46119062A96973856BADB5B9DE3B4A
D850AF6CCE4CD1F89BC598935FE29BC919EC257CEEBC0B7B9592AB8133C82E1F
916DD40060AE10C87BBE4C7EE4C2CB903AC4B731C406D9403F0CC68BFEB8F270
C75DF8D3B2ACA3CDFD3CECA927B838DAA7C0972437ECE5035746FB30014AC3D4
211B17FEB69DCEA513A9554695707B114370C93A4AFD18907CA2FC22E04CEB53
267DE54278AE95BACD58C3F785E0A3B9B6AC89368AE78B140940C4A5D6877704
D41DF7D92EA656D6A109C99B682F70236AF4ED2ED5EF584BEF460A6AB309F321
3A8F15671146FE23485DC55674384ED57584EDAB823A19C9593AF57D223BC268
CCDEB7F17890C1BDE309E56C20B86F7C89028F9CEA5971581EC68D24D3AC29F7
0B1B9B1F15ACA7E9B2A27109AA5BB61D6A4DD15A35C7D3FE3426E0E8E9B5304C
61808761A815A2A28095AC8264DB243A0C43064A7AFBFDB97B613250D2F66EC7
A8E10AEF7E4ACF82F7BD3452EA9106A4D4DAE88AA0D655ED21F1749DA9DDA84A
FB3F0899B14C55D903F0616BD34804C4337D341E52F55A0076418D8E229D4DCF
7BF865A61B874A3EDC70C58858D418BE76A19A7E7A3ED6F13508A09F8C5387AE
55AB91F775247F69822DA3396C49FEC3F0E84480B8162049429BE4A278A7D54C
89A7FCA9E30DD0EF1EEC8003ACEB6DC99EDB7C2787ABB845726F02315AA3722B
A1837F22D583CD8245FB82EAF7E162CD383C4A93F701976DA389B57BFC8B6254
B112A7DC25EAA97509C8858D404AE4963D9811175D65A165
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFRM1200
%!FontType1-1.0: SFRM1200 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecrm1200, tcrm1200, larm1200, lbrm1200, lcrm1200, rxrm1200.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Roman) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFRM1200 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-185 -320 1420 942}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E48759F33528B839DFD4B92DF049F26DBA77FA20B6513D
285BE588908C3BAD6A1BF20F213E587F1372774EF31D66B237AD60712D60BCFA
83574CC5F88A6B4676356ABC2DCCBA498F4272476923789659CA8836F2FDA94D
38271FA2CA8B77D7099705602FEB41085F6674B7AA0DC588C9ABCCBD9115601F
CDFBCD7A8E3CFC8B1E718E576254F5F05FAB25DC253CB561EC3604749243AED5
76898EC99BDB1760B0CA75CEAE3FE6FFF1700F64F585BE9267ACBD5F155F3122
732792E17022F23B1F46FEFB0696E5C2B78DE0479F09B6512035B9C488042B62
98525003ACCAB6C8F36BBDDBF6E82F5CFCCB418706BBEC1D4E42086E70847405
3ADD1383ADD34574F2C6C64907B0561F107A259A649BB525F0B74CC3B1F42412
C4F81A7ACDC6A3F37DE7FC06DEF21B9821DD39D75432AE3881E431569A012092
38FCECF1BE90B0B199DC4D56EE18658B2818B69FB6836486BA302CE7F6EB18CD
7AC5AC6648097F65C8AB851E9BD1696B9703230711F68FD82E1DF92936A4B1A2
CCE51645573EB0E762D68A417AB6C0A2EC8756FC9BFE5972DFC4C794E948A970
918BBB1BD7B31F9B1B323EB2AF8D41A153CB1B1511F43560825DB6ECE30C16E4
902BFD1EFF59F06984F36F284553AB3F2C7901B37ECE058F5E477EC9C629847E
1C7A3628DB7C47C099A0DF53F05ABEF94A760232985AEDEEB7AA05C95273179F
8A1AEA30BE626653D22F7725C28498D776493AF6DEBC59D44A2F6F26E5DA1A77
7B9EB9D897130FB3F6017F80AF21E4FDB73CD96834152BA948E1EC4765B253A6
565F51A1ED2AC8374CF4DB767E7F3FAF13F0A1198110F554CB6735D3C2DABCF4
0C0A431D263F22D091D0F560ABF5968868126430A293C6E8A6A87593E580B110
E15A84AE30E4846980EC5C1FB6D4037D7E1DE8CF57B6A60DD4DDF422075F85BB
0B1411164E99A03A3591915372454A70C8CC75EEE08AF87D35032DFBFD61A4E9
F968D1F514A69D62B30B89F47FCD45A41B423664A7862A1246B6D7C5E2B352E3
D5428D2B6677D38729C5752DF835EAA366A11F6C7564C80EB1E0A3EE9990ED0F
520EB2AC073E63DD9C935504D14BAB14A4305B3D64638B6D952333CFB7CC93CA
D84B6DE80B35AC82623BE64BB6C1DF9165E00D29054A5911CEBE09A2054EB39A
7894F49184B672F4AA1143A2633647BCF502A77F12506C02F1A78AE9061F1497
CABDF651CF5ECC83877724A90D67D660CD4C54EFB79F9A6C1DC8EBDB66E8D709
D4C0A81E7C7EDB6CF1E266B753AF6BD100261A6CDA280902D3F0D15EF4042F54
5586901E870F2A99727E9B64147EC20330C3E54FE01AEA9875DFAEC86A0B6F39
D89E035185C3A6B25CBE093FA5C7BDCF99E5C68A9EBBABB3D61A6AB4F30B4D7F
94F4B4DD1AAB6C22FC9A18BF46B81CB362B87BB87E9552402C35490285FB83C5
EA4825225DCC23DF406DC5CE8E67FFB64DAFA43E89D6C65BA6C0F41AA44EECFB
DB8B9ACF11B6ADE903B6EB177A00E2B22593F7EDADA3A7DD72A3BE1D488E5BEA
BB9327D8B0187CC87BFD35F4591D3F63B87490338692E1E8CBC869CA13C68761
6276CF2A654946B67B1885F915E2D53E923D1A7B9D373539E8AD0C47731B05B1
7E627B68C4C1C9FBEDD4234643720D3A7EE90502081339CDBD455004D38302E0
FA91517F04289EEB213EA283590D0EEA039CA3BA5694C0DB35F68EDDE43F0CC9
DE58D2EFEF8E3D81853BFAA0BFB73296E70ABAEB606ADCCEFE9AC3EC7736215C
B144B249E1FCF4A66590502254335D9505C9A962FF3A7D45FF770DB07AB439DA
BBF81F0F47330560107A6101A5C76F54C285DDAD4E7817C6B93392DF83CF924E
00DCD4DD8BEF1136AFB87E24A20883FF87DD69789556A974B8807C5F8030CA58
5301124D8A96D5B23FFD181D66140874153114B81A52D69164014ABE126D1E47
6752720C0CEDC0AAE2EAE314CF25CA05C3D569CE8871B49AAF2F371CE632A913
4E4735863644E0B7B8CCDD82F1709F81DBA6440AD57B94A928E1F15D948C7EA4
105A252E3AFCEB539773BDCC8FE919D55E1351579EC5C3EBD311A8EE9A9373EF
934E4C61DED60F0FB051231ACAE4E12B03013D7B9BFE305B9AA54B0AEC8BDADA
C3FBFD3A4ABFA43D98F2991894B0E1EA7FCEA4843CB86FC4DABEE41F24ADD548
82C163617B77D65D423C565647491E885469725CF356762F01753FE97CA9643D
7EEE4365D5C807298D61C1250921C4F14BDBF39D08F3896967A5C9BF25113779
7C1909EAD87BF0D60C43F1AE79FFB1A23620EF2C324D5E6F6D00CBB22BE70E0B
AF849544750046F6031B872CEA4F6843BC35E05C73313978F2D74A52F2D52095
25947CFBD1D90A82EEFAF5750631A17DB096B594B6C033ADC43EB9328B5366C0
A8B7DAA7048C0028AFD0E17D3A435C530ADF039B402213DF9BB13372632469D8
568F819DF9554C1930B7B3C6FAC84650AD5454E5C0DBDF10DAF451A8D99640A3
00550839FB6356827BBB65B73F31051792CDE85D8598F0825CDC92D8957797F6
0CA60789EF683AD4C7D307304177D48E8515FD26575A917C9E7333337E070509
2783D66F0F50B55270EC8C75BBE78CB32E0133765517039417C35C57DE3B0D45
97863BDB6F0216EC699AB82DA5AE17C56E64998CBEA5DA56916984CAD87625ED
98355974A608CB758F2FB28EE42A76F11607C84F944D3FE51263A8DBA84E93A7
BF7BB6DF9EA825E6DD1B38F09E0010533BC14E56C291413C50141070B380466E
377DE82A00329C607B7DB839267F83EC08B4819411F01130BCD93B9C2448D878
FA41518DBFB8817CEBBB0FA2A3A4A0341C5BC4571A31096F341A0800454E7455
74255A02CD28BA9E87AC9AFC2A7EBD517C7E93896335DCACBC34A1743D4F7B9A
1E4E1F8C807026C3BDFDE6C13DD2FEACE5C946797E396157CD8F40EB6056314E
6503A77F6FBC914A6FF8445F219F490174186824FF78EC89C3CD3BE36E139A70
90FBEE0FC555A7BA87D34A14F14F7498F7B89126FB6FCBEEC037C664763CCF6A
F25C1047871E270F4981DA75C1A2BA410A1C7F82D2835B56773E7A78C4B95F5E
7D606A1F0603F07948097F65C8B5368BB7019DCE6AF86660244D6ED879306C23
EE84ADC874DD7355176468330F7D9D1E087F6078B553AD3DF63996C18B87248F
EE36D224F255519FE4D8E47122B4C4DCA0E9042E1FB2E48D2E7E4B4DF54D7EE9
B48626D24E09F5B4A158DF3084CEA25DED422E0D2C379C5559EA83A9291C956E
D1A9AC8C22E7D3F9B8C5720C426D94C5720350560CAD8D4F8F72F4F8A14CBF91
57447AE6C7E5FB826CA964E7CDC3795E04A7B420DEC645001D841708B061C4AD
9E74CCA331DE6080DE4F3E732C3045A69FB8A49BB082707B2B06C926D2B5450D
E3F1BCBA05137300C8FCF6FC5F39257C7019D49BCB8F6E053894012875912436
C6892CF7C9E0D025E59B029C021785AF3697A076A9C657C74B15F2817F78CD3D
655520CFC9B06F37462C3DC344DD33CF99E2FED0BE18B9EF74532ED4CB1E9D60
28C2410293C807480F46C21989A09F9F9F753C0B1BEA33070791A9CB5904A2D3
7200E0F5C9EA9AE6CF553AB03FF7315679AB272244301F5FD7200671D9289C2B
647126314023A1F4F53B35FF87209201C5454E0323B6DC796B0A0A9D5B6E1EF7
67946562D76B3A080D55D70DAE344243FBDDFED8FA29EBC006D3CE3720E27DE5
53C9CE9750886C848F1297A5E9FFDDEBA82336E53B00A20CE65A66B5EBE3D704
01501849722036D41DB0BC4AE4C5F8560ECEF1EA18AC2F079A5A88B8FAFAAC54
82663311CE656EA3127675947BB2790BDE37884CE1332894BBFED0BA285DCBA9
0237E25D1EDD0C054762580CF95AC372FAF6EE950215BE50DC846374B50FFD3B
4CE163F05839279C5C601E03704152983AAB3AA0DB11368DE7D088B666C54EDC
A21E0288F8D524DC50EA94E931CF4859A76FCCD01B375452E6FE5D58889A4104
BC29A36D095985710E8159B28FDF9638287969412101ED2E5119487E834CF4D5
4F988704223641C232E10BED50531760A1463EC3CF8F4E9EFB3367A7365549E1
93B3D601BC9A41A6D6076B3AFE4977270D6C2F70F4C2B403773725A9BC8F0F4D
25A2EDE83A892B9734A34F5911C4596399D648F19909A74AD69315F681AECD02
C97BCAEBB9512A4C1F23D182A7737EC11E1102125E50ED736D9EE1FEC532A43D
A135E97C2E465AD8C50485E42CB8B5B387FDC96D5431816E2F77FEDF4EF98CE9
FAC6C5012DE7F873C55C9B1336AE15CDC3E8EA728F26CDDEC6449AEB726986BE
FC1320178C57EE7176B8F9194B302D289A440971C63217EC8C53D322F73FA305
264C691F5A16765A2EDB99C4EA62A0B19CE4410A3F5FA4A94E563C5DC706F504
B1BCEFB2734DC1A8474F38B234B38FA876EDBE856AF5561040F921CCAF47EA53
5BEBEEDC09E0F080FE60F05B827AD4622A3F7BD3D2F8337F4E6C0C77C42C60EC
89057F26F5E4F6116039BAAAA332EEFD654E792BC98F10E2561D43DB0BACBD43
22A8E3EAB8EAD46FE7E36A5A903313697FDA85250BDDE99E77670B9262398849
B04D2120E528DFEA7D363CCEFE740B0BBE9B209C321C4097C3459D8EC37F1453
2AAF06343BF9BA4BDA9A001251638D2F0FA2ABB6A93EA230341F8034395A1BA4
E4757008CA513F8C87AEE31D493DA7F5329413E30AB286E1625B2B054965BD22
07482DD21FE703AD75FFE8029ACFC032BA99961B8A97E55DAEFCD4394E9E2B66
49661FBBCF0D6474B221EEF13385DF7E6A9A94D66824541A42214BBB0C604567
136E64075A8DB0CC8FE919D55E1351579EC5C3EBD315FDF4999978F9940AB138
1865B3C1540A28C601BB29CFF35076683AA718EE09AF09D0AD841DBB9FA3C257
1FCE16D3094F5C09C984658FBDE06E3EEA3C2EA172AABB37E70737F8E76D0DEB
67A47A2DFC20F2318C9F69292A008FAC34BCE17434973DFF998629C4F8897CD9
82EF32EAC93508D544A070C12F7341DC65E571CAF6CD0F5B24F400933CEF3FF6
33A49CB71BC72B43ABE9874EA7668E84DA6AB250C6ECB7CB293E503F892E2AD3
A370335D4762259F6598A92982A084E9C43E87D0ED4E0472920DEB9D5FE526F0
C62A333E9A1F9ABFABD57EB4677ED06EBFC5F90ACEEEFB404925367E6A824FFC
83A933DDCF04EE08E0E61EB405766B7B739EAAF078F06F90C55F115D2B95AC7B
57137873AE88DD4C62BE88A0800B05A6EA496DE182F8FB8613BC46BA4523B34A
DA1B5D31E27DE29063E4E37FB3DAE116DFA181E014DD1136229C65EC39FE39C2
6D084E957EC059AB78D2097E565E1EF1C37C82CD4F44A84198F4507C82515541
4CF3492137013492BE918865C62CD9A15904C6305C28DD86D8E92293DB7668E1
C13E92EE9A7F78CA2CE534576ECCDF40F3FC336D78D23E54FF96C260CF35297F
95EDD8BE8C10F306648DA877C1E3EADF241951A30ACB1C432E3451392FDDDE2A
C43D7981248E7B2F40234C6BC28D01A91B6A39C9EC7081457123A5B05E94ABE9
DB2D79DFB25E62C4A9208C21A104A218DA7B66FDC9092DFA6D5DDB0939D8AD42
C0B9108FB8E07AC8A0BD3D7641F6A3993CE7A124D7F78B9042054A1D417A9239
6BBF26987017335E4F0F35B258F6314A0362DDAF6793DADA30DC3CBB29F7E395
2CF89A1C96A427B9A5C8CE33617F9795AC6119CCA9A7F95C1D6759241D7DA7E8
AB252E8389048B28F82A71F7136AD375DC1F42D013F82FEB4CAAC799DC919FA4
632C5A92771BF7647B11B57053E8C900374D5D219C339D49478C5A8B6C54F665
494FA418C33FD16A623156C97F8C11EAF10B21DAD678A9FAC80990BD7BAD0514
C5C2BABCC654EB2358D072F920CCEF8C963C3A6AEC41F4D52AE253C4FBB48515
1A4676DB3DC56DFE390B237E3421C23E4DE1D7906A2F396AA1706D329D490A76
7F2497968B6B2007EE15DDCBB38C2DAA5D9E3288451BA711C2801A8095B1BC80
DE989B3FD5A381E7AA0876FD92D93156CBF3050BC32098BF986570EDE5C0912F
7EE4A96379C955E2EDDAE976B79A51E1276AE7E1D39D168818B56E88B1B1AFAE
169EFF765AA406400387F60C11E1D5442E711A6C1EB0741C67B0A57E2EB462CE
1EB6FD26A10AEE723E78F3CE4AEE8AEBEEE9BC6821404C7D41C30290324E7A1B
E76620814EC44E5B91BA04C1F0D41E3286B671229C776CF57C844F5300D7FEFA
755B76EEBF53FF8F503A7EADCF5EA73F5BAD64FCB1B430C376EBD840E91D043F
80086166D96BDC78FCC41A97E3E5F0B879978224F5D17512BE8ACF3EC5428C47
AE87089AADDD101911C412D933E9559C5E7E303FDC96442B47A487A6F9489925
EA09AD8585A954673DE56F0E0F1C719564F5889ADE60E75850D4507751BBA398
9C995738A25BFE94C3CD968F8873D65B5BE4A329939DB539602A830CEDE6C36F
526DE4432AAAB19E4DCCA6BE1860BE053D6302C8E8A25320223C406DA0225404
76497FB1B5EF93041C02385B6763A7F24EEC30FF8DA0E7F024251BB0E9830212
0459F0F51112AABDB6CD26559D18F816E57FBD50608A8314368A21E37A328D51
31AD9678345E82828679388C90BF6F807A646743A436E48F97BF351E69279150
E84EC34CD5DC430436E9C815EA54E08AF6BD79C38C36ABDF19DD5DD945D5FC78
AE8440D147F92BE1BCD66C924FD42E603DF5AF05965F42065E8409F2285306D4
C04ED9C0C301DD3064C65218664476D32E6D8DE72FC3AD0C28D081F1DD6DC2C8
2D88B0BF013C4CBEDFCF64C1BDE8D1A6ADC0AFC088A13EAB34D548B37521947F
7C0F0EEEA74FEDFB2134E1B7F93AB953EC4BEC7A100C7CCF0152569C050CD4ED
2FD3D131CB5104577F64C852B1FA03B8F8670E10823478C68B4F7AC16DAC7505
D5189800ED6A8B30AB81F6743C6FA3554E9DB7010A2F93DAF2A51516343ADE92
513111286F60DC32825F6C50AE8D3EBE3B7CBEEC99D11D36DCC723D2F44765FE
8D2F1CE751D69461BD7A961AFC377DBA3AF3AC25F74E3C69669E6A2CC10A9928
1DB7E077FBC77DEECEBBED97168337708E79FC6FD9CBF9BFA71D95BC8A7159F5
E757607A4AAAF81E7D74B636B259C0207CDCD62C0FA39979619F9261254E37D3
D20775C5BB9981835DBB0BA3985FE9C1C680AF5AEFC75AA3FF8787FACF011320
139D158B9CA2F8EAD8B3E47091E3907BD068F41569DAEB21896C105991421BF3
3B16E082352A5F5D47FDBC558EEE26BC446F968D159872E9A32DE003C35205D1
D0BE29B470F140514D7DEE3D6C5DE7DF3908C0654DE042864A1D5AA259C8DDD4
D3A7F8BB35E147C0FF6BE13589151D70E2410086D876F6133E6FC8ACD527AA6C
BE5B9420B60AE9371EA684AE896F3ABD4F1C30929438757B5DFA7CE49B563FDB
E80067ADE3123DDFF87F90FDFD8EF644842A9B972D44CA969A3C93FB95D880A4
1CF7EFEE6CCF2D72FA9ED9B79C21B1667E274B61B7A7B5C4B9371E3235973D29
C2241E10780908D832F3E8A21C36E32F2D603D0260BF2C16DC0A74717A3038F6
94FB2648B845F65D667224C5C327AA555F0BB0E0DF3AA51878AE4499BC639FDB
6CD58D5BDA3E3E0345FD3F17912E04A1FD559F1C974FC3B57F0A2AF5BC839AAB
88BC160C473D6FAEBE71930E38A6D0F96BB81512FB73170B7EF67917FBC9E75F
A8C7BE959E0CD9476D3BBCB9E6EA62CE0D7ECDE6F146722A5A006C333B084FD5
C21065327393CDA41BCECA4E7836FADFB646BE09DAD66B0DAD5C6CA4DE4EFB9A
37FA9A312A9F69118ED61BF32D8F4B0FFFDC7AF688617314A6039036132D39A4
46657B2280C8499C3CC4D56EE0ACBEBFF0ADD3578F091D2C0B0797676C26ED1D
06839DC16EB360978B090F1E73124B3F8196C3A830BABAF279DB1DFAD63D9326
B73B17B661E1C4BB9B053AA1053D249E3AA85A3232604A964390C909C288842B
157CAD1E44C4FE3AA17675375B1A38E16E97FF2A12FDAEBF6979A8EFF5FD6943
06E67ABB1C140022F7FC5D4481AB8C6F61BEED947184BF2902838DEDD5574FE7
61D83A482E959895287ECD28780D8F1573C5943868279FA9CDD72AC827EBC91E
B83A25202D522579A9764FFEE7085EEF6EFEA750B2C3CA30FDDFB75E15EEC215
DFEDEA2AB4D75AD98C64950DC5A7D296630E07C03D09DECC7F3DBFC0ED3E34B1
77C91B8E314D87507F1FE502A7D952D8E2351583DB74B361CBB7652EC6EA6D7D
4B9C7EEA0FFBF6B36E59E2B264F8D2CFCEF233A2B12822BBDDAFC0DC98D82839
9231D81B774C61920391C5C4EAFAB84F0F2310DCBE8C10F3AB7C45451A203A02
6028DBF393FFA02692ECB8564958B9A248FAE0D36C328BE4815E7B28EA4396BE
F05A32846334F0D295E6949E690DC70A57BCABDCCE4DEF92F7EBB72D912D0075
472B441EE9E9C3B29B919A78176F13818AD5A522B6EA61C8CDD9758100ADD9CB
BB97E32BD4C20074C1B3F92AA5FB35DAC9E46666CBCB883A5C8BC421D922F69E
75A764E02B0DCB5740D40667784B9E7E03CB5C00D650A616D3CB0A2EDF34E170
0C0DC10ED188D42504172004E03B215E42BAADB222FE215345284950565A74DB
72388463669EF26D6546C535B882B3DBA9A73A3E6DF53A0A776BA2363CA39217
636961A27C1CC846D0058BD7C7E5096766260A3C12F300700FD189302A1B038B
EE23F6D2B534D97555C8FF1B0CD74EB1E0B60DCCBA6F56FF9135CC8D76275461
D415EA0F8A7195870F17B34E09C2817E28072954F4C9C3913E92C96B4FCA84D5
DBF29CC84563A05C8F6F498A8BAFF9218334B482DE5CC1FC54EDCB110D97ABBE
2E28E1BD4FFE0A8FD56B98581FE0F47E8AEA8CC5FA1F8CAACFF479239ED03A6F
CA1100147129E639107ED3222AC9DB5ECCD01FF0484EBC1018E1A1443CB8897E
BB1FC1C2767B89F996852DD5275F405DAAC5369650A0668305EA4D4E2BF50906
2926B55E7F75E7F8A02EC39B1F984FAF2F894A1A6578FA0C8EF9ABB572EC73E7
64D05C45D77C3D7439723DD7A91CD143287F7197D2B32246F16C08B7F88C87B8
B206C51F9B36DEA2BCE9E7790CB1448566753A4B4389E00FDE715A12BF00FC12
5CBD712ED3430F83A266D0935A39356C4B9E6EFE8AA872BC3FA2095C2217FBA3
5FE22109DF7B5CEE3A7CF276290101AE4FF1F4CD7D5D7ED35867D5D2DA9E68A4
50220D916BBFA5479FDD72E4F3399F07B6C92E640BD23DD4499D88E9AF66587D
0F331911AB2CE2D7C1D54354319E8720EF13D11D1F376AEF3A87A3AF742352FE
FADB83DB6D1168ED4E024FA630517EDE66BA674CC7FE3CAE9A53D62B21CDD855
53D0BB8F00C312FA117F38FEEB2FFE370EFE6F9BB7E8DE0E1CC284C23C144B8E
106C733EFF4972173316F0D7A3DF8759F3AE025F314BDC5623F5217104ECDC5D
EE84CB467AD76C2C39A36BC467952E960143C1C3922AB95ADD734EBE59B8DDF5
5F0712FEFDB965955A3AC5F7C1397DD2721EE5FB89E06DB22679B720C1000A53
23B0F0F91C29DF4D780CDE769503AE1D066529599D553774F7AA483EA284E78E
CCD3B16099F01B71423F846E75B44ABB25F8AB2FF968C5549BAA7E0F5B9D9F26
A5094268FDF12D8E0CEDC184965A6E2F7097ECFEBD5A76EF8372A74DF7FD8C17
AE5C26265C78D728C10B343E99B8A0EBF1B460D768DD44E64BCC4DE956235668
8D6B0B9DE5B810ED67E8D53B310731AACC60AD7BF22132E89D644779F2079A40
1A69392660EF00A0A54D358061AE4098710C7BE793A424D9CE1B669DA9A1C41A
B40046101C1ECC1076061E7F691A200EFFF5469250FF6C1483C4520BAA7B2AA6
B55D5E2F6FB93875C469C271F026DD7BC2B29CABA9386D3C81B051C44776B840
C9532BFADCB7E3E6F13DD4617C9FB356C9877459E17F98A36A628FFCB7CDA00C
5D976F77B272FED8EB14E77DCACD3AC7D4CAC2B9E6AA26C6AC580EE5745FE8EF
46FA2C798BAE8DEE238F048DE6E7CE34EEA7859F5900A44677D054C233968191
E7B7F8BA59B39C0DA0F9952B72C904E621B5887D0588EB3EBE790F85FC879B2B
91DCC5B8AC9B5508CD504E139862EFC2E9BF2B469EC8C7E3499502E5FD0A9026
FA43973C6C9197E097F7A72480199C921C23396AE8952445699522B5E1D2F2FE
872176B234D6994EE0F0D7236A12B00D191F133FD28889AEC6BEA300011E7884
E8541A21A0B89314E8AE0B1D92A251DFCAB5897C5A9D8417A0B5EDAD0B5579E2
2E3565E73F678EB667B9A1A64C24C905ED5D82BBFA84EE747BDF985BD7512C5F
1355868A9B010C36D1C8E3D582A3A79C116A73A371375FA8CC621CD50860AD7C
7B7886DF8E89EDB706A8B3B284F38140FDD4A60E60B8E13F999A8DC745DF4D00
71324533FBF72141059A468B6257E5748001F01C20404FF7C89D7D721A0E3E6E
213C54D3B7BF7E3F722D7FB1412B31C3A26BD62E832B4FCB75B6B03870275FD8
383FED9887D37997F4C84ECCB6E989D587ABB9715C492EB2F39968B4933C9D25
B72B1E1637F543AFFC82E82D9ED9806A35DACF823E3587184416905E39367C5F
BAEBB73C523B30CCA640B5BB064DB45F3A05EC8217D74CE95045343072BA96C8
2887909DA8E28C1C8A169189D9F6D616EC7AAB18A1B66B21F1AE91968BFE0C35
7354164DC008CDD674A19F38BB8B24523D2F28DD67BAED71F2AFA8DF7BB618F6
A097F3C06A8FF7B6AE3FF4E0C9A5C6D42A397F304648FBA9A2FE827D7116F771
F61D0664CC882063C82AC153A2702D5777EBE6A775E27E054821F0CF01D3A2B3
52DF18D5ED2CA377805615FB770B94233D669F54EB583E09294CB02100C76490
03F84951DAD7325354FF7951BF6F5268DD7B41DF8BA3850C5312CCB07440C8E6
E3573DB6FB5CF8FB2710CF75DA4C7AC443738182865520409D19CB1FEB15DF03
FF2687A54C49F6F0B09A533E0B61247A3DB556F13637B868EC7DE60CD6930183
AAB365764699C3F1DE84BCF14A82C24BBF73BC0726C6A282DF62042D7808B827
9A16E5786CF498EB271C57922A0345ED09D5A583EF8F35C5E340BFB3CA764E86
97F4C2E4EE46833AF2EF5E1A8ABDD4316B9483F7D978FB6D0DFCEB462DA12B4D
95253444AFB26697824028BF99275B3715799E91E9658E53CD785654FB2BF0C8
A53A9C0BB1272CD354E43706244A8CF09712165F55C29B60419B443D50BB15FE
BDC8CF5920FD94015566110B87395F84BB45DC7B10A0751995E31706E5143109
F7D6A8D961E1E2A5022BDCF275C7A5AA9DE3B1D2770A54C56B256ECD5881ACC8
069F0A2F939E9170E45B328797E849DAB5E11EED406DE854CBE6B7132AF5A073
CDB6B84368DFE42F76B7E1B814057875DCA5493CD69B4380D32A7FF3D2348490
4792FA4A3533A6B0A5A39B0D5B507ADFB60B533130DEC2FF5F93E3AD146FC61C
4A1342F161D41A3F8D450960AE502509366F5B7DB836FD86B0172832EA2CE125
8B7BFD3B95EA262945710FE2D708B721A3BE3C5A7CFEDC8FED89069B72F3C264
E1E4A6F92E3CB7AB82AE31CFD5E8082CD99E80979E4927BB4A249102BCB1F9A1
2B73D178673045329D24E5413AAF8B8D797205EE5680775579FF5F530091D954
53A1FA4D738C8607CBCCABF1B704F37A5639CBD91D4A2F9C13E186589FE981A6
0E465827E8A0B4ADCA97EE45B95F25568382B0594FBD382CB6AFC70E9B251834
964D8427F84025A2AE5277FA2684744B44F5201B0D9352AF457339B3A74E9910
22E9DE121129ADD3AE03969567FAFED90B2DEB845255567566BA4050C88F03DA
BAC9DB85EDDC04D80C5DA6F1532A003277126B478177C190C5CE732427D66388
52012AE2B8CF02AF5157B9EEB3ABCE413076212EF960A9F1D789D9C8BDB55146
5F74004011A1789D990913F04EFEC96FAF457FB78576D7D76559AFEC2EB64DB7
060C15AFE5F41F96830CF1A5172E08420CA5ABFFDA2D872832CA3B7AABA4E586
0851EA45F47DD39CBD3BF68002E758650E4B06609E2B8E75EDAE791A42D216A4
727A80869623B2CB8B9F1C3F5C60FD2930A58B99CBD64E81CF0A82F0C9C806C4
74584A42B0FD92093CCF75C9E8A41699FE952F8E074F0F034A24202A2696522F
E45A17112A068A7F375CF1C9345FBE5AC52A4F911FFFA39DB14BFB397368F2B3
0986B8135929D306960B844E9422565175347CD8723A536D53F76F3053BE0853
134D0420A61F6AA0C1F7D36D1F05F8DE1E64DCB6E3DA66D58D86E0352A985B09
D492513111286F60DC32825F6C50AE8B537481284A04229D58A68077CE35CF57
37C36E6062563712167DA00C6CECC87590068DC544054ACE2D7FA1DA4B4B2A47
C068A60AD9FA6277DE9A3DECD483E00BB9D027990609AFD11AB0633C816C3FEA
2F97D671F24CAB01CC6160138ED1EC4E762B7F6031132281FB9C67EB5FE8F7F5
06F893BBDA2151CEA7BF76A2DD39113095C0AFBA6BDEA59BA555332C83C19926
E053CB436030382F9B48E0C468D67481A68829A8C530D25FB79AE2E750804794
A3CB0C283E511286D8C3D424115105E62227A9BE1575A17235FED8AA10281E54
F0E3FB7805BA884F8808F069DDF61D557AFAEF26769D3359FA51F69D5442893F
C45BF053F2262C802828C1F79C796D4074E8C06BB34D6EB06A1B1513272676E2
7C06DFB86A9F324F146E8AB89BFED476AB53C46929098D0F4F6EC00177E79AD3
7BF0A51301B3610E93FB7771756E08D144D087F4D3C37A7ACB0D80454F16B84A
CCE6EC16D79C85C23B30F6BBC6A4DA134FDE8B54155E4B57ABA8ED175A502EFB
76FC82BE65614200B93D32198A62C435BDEF2823CFA9F5578C4C13832494194B
1E7D2C8DC0CA1835DC45B834D2D9ED84958D4254D3AF6EA94740F2CA7055019E
8F6D3230138080C35FB3B9FACC0FF70CBDDA74D046A770EF7EC00AD69003D22F
4C3B6E6ABC000C44FBCE076CC97917BBB13D84813A719D39E01696AA641B5691
783C3703395D0555B823DC272EE58DB0684D3A8599CFC5DDCCB2F97469D7F41D
6CCD350861C16A438C978F3B1D2C1D6D15FB9F913C7155DC99B571FDA5F0401E
8017EFE626F85F4BDEC1BF25DDBCD4755FE60A92F4D520AC5501BA5354980AC2
E7C67FE88AC7ABF854463A5E9730AB9AAD66B4629E960422D8E243557F3E7AFA
17168CFE210573D0240C65DC14FCC40A5E6CE8F7CA3244800D8116AA014E2F80
EDFA75FDA974527461234D7C930B45AF11227108687435EF38A9BA564639D949
6ED3215C71C6E84B4BE9A5BBB515AD000EC2E6CFAFB4E4F5E0F7F78FC4F415DC
EC483B5E3FA9648F6BF167AEBA189DAC564FF1FD5CBB8AFBD9A0C71B1FACB653
06BECEDC543CBAE87020DFD79CE33627822BF115F46C12A99CE561FCCD7BCF9A
028276A3D979012BC162BC367467BA47CDBA5309D8B46ECAB0A6D19F8BD821E1
8FCEA975B2E58DE0596266D309128A2DEB3BE7D9781089E95B6A113385B0C5B6
9EFCB075C086E430B84C513F32BFB0858C825ACB89A7E715E3FEF9FC37FC98AC
2F12F2E5BF8442B3C915AB45612115EF7ABC7C1CFDE84BC964C96B4BD817E2F6
4FC3FBAEA7182C1330825EC9A00681DBCE13564F92302A9B3C47290466975FC2
15D23EF0AA55BC90FA903936305D13FB0F816FBE8B65A8FF8BAE67315CCC4885
1742741A1E50CA1EA8D675285F192E012919E0CD0A468A3DB02B197A153739B1
C3332C286BC570C3340B4DA207DC5F576F45ED81748169B66C366DA372E3993F
67EDE59818441E0AA2A35FF3B3C12910F197C9875383FF659D49BA271B1FF708
66AC8DA6CC5BF08F6EEF06905976C568A99D74D8DA2F2996DEB60E8726D1ECAA
72E67BC3DE95ADC483B3457F7E0186C1B5A0900A1785FE70272DB58AB5C0DC94
3319E9297CB7D9C8692D27F2CB5EDC04855F6D65B906AD2B797973F804B77833
832069F78B5EBD7BAAF84E00587766E4890D571E659C34987E4CAEECC5D7A60C
F9609AA7516228335C1F4AE10CA6413A14BE6F0E7EDCA59692091723FA2A9B27
32BCC1BE7CB2E19FE167C15314C5E30CFD009DA4A01508FE82375F9E28FF6808
90798BCC3759F9276E76B20A54393069D463E58CFC98E98145260297A7C1D577
77B9E19CF0B56DB6F4F7CCB81CC4CAB53F09482C8B0E7200675A9479DFFCEB7C
FC47820A431B17DA6E864EDAC94DC717AD72E17B20A54554F5DAA2CCE714CAFA
47F5D7F9281C5A2B01206BD719D3252D16D68FF1469EABD5747698BDB48435C8
9F7A0E0A988BC7894D683520CFE2458D666115C8C6FBDD6580D17224B2242D59
C09E41246A29C57FE8397044B32C179AB1BD329FC216FA67B6458A1E589DBDF4
3A7DCF8D034FF35E4383BB23551B289690FE0C9786D216FFE068309A4BE332B8
C3DB653CAF366AF954A02DA7B4CA249DBEE24A710E601A3B9B11084581587C51
A6CDA6366F63F7E49BD4DC914CFF3057478AD3FF4238106A014AC5601756F731
6C0051C03C7D9B76FD628BB74DFE524B2C36EB28356D23151D0E81
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 156819571 221710428 1000 600 600 (job-001.dvi)
@start /Fa 144[57 63 95 2[35 32 63 2[51 1[51 63 57 46[57
57 57 48[{ T1Encoding ReEncodeFont }13 119.552 /SFRM1440
rf /Fb 199[49 1[49 1[49 1[49 49 49 48[{ T1Encoding ReEncodeFont }6
99.6264 /SFRM1200 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop Black Black 706 1680 a @beginspecial
0 @llx 0 @lly 577 @urx 132 @ury 5770 @rwi @setspecial
%%BeginDocument: job-001.fig2dev.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: job-001.fig
%%Creator: fig2dev Version 3.2 Patchlevel 5c
%%CreationDate: Sun Jan  6 14:09:28 2013
%%BoundingBox: 157 3096 727 3229
%Magnification: 1.0000
%%EndComments
%%BeginProlog
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proc char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% right45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 20 20 true [ 20 0 0 -20 0 20 ]
	{<0040100080200100400200800401000802001004
	0020080040100080200000401000802001004002
	0080040100080200100400200800401000802000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P5 exch def

% left-shingles
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 48 48 true [ 48 0 0 -48 0 48 ]
	{<000000000001000000000001000000000002000000000002
	000000000004000000000004000000000008000000000008
	000000000010000000000010000000000020000000000020
	000000000040000000000040000000000080ffffffffffff
	000000010000000000010000000000020000000000020000
	000000040000000000040000000000080000000000080000
	000000100000000000100000000000200000000000200000
	000000400000000000400000000000800000ffffffffffff
	000100000000000100000000000200000000000200000000
	000400000000000400000000000800000000000800000000
	001000000000001000000000002000000000002000000000
	004000000000004000000000008000000000ffffffffffff>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P12 exch def

% circles
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 48 48 true [ 48 0 0 -48 0 48 ]
	{<000007f000000000780f000000038000e000000c00001800
	001000000400006000000300008000000080010000000040
	020000000020040000000010040000000010080000000008
	100000000004100000000004200000000002200000000002
	200000000002400000000001400000000001400000000001
	400000000001800000000000800000000000800000000000
	800000000000800000000000800000000000800000000000
	400000000001400000000001400000000001400000000001
	200000000002200000000002200000000002100000000004
	100000000004080000000008040000000010040000000010
	020000000020010000000040008000000080006000000300
	001000000400000c0000180000038000e0000000780f0000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P18 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

/pageheader {
save
newpath 0 132 moveto 0 0 lineto 577 0 lineto 577 132 lineto closepath clip newpath
-33.1 159.5 translate
1 -1 scale
$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06299 0.06299 sc
} bind def
/pagefooter {
$F2psEnd
restore
} bind def
%%EndProlog
pageheader
%
% Fig objects follow
%
% 
% here starts figure with depth 50
% Polyline
0 slj
0 slc
7.500 slw
gs  clippath
1830 587 m 1830 435 l 1770 435 l 1770 587 l 1770 587 l 1800 467 l 1830 587 l cp
eoclip
n 1800 450 m
 1800 2520 l gs col0 s gr gr

% arrowhead
n 1830 587 m 1800 467 l 1770 587 l  col0 s
% Polyline
n 2250 2160 m
 2250 2340 l gs col0 s gr 
% Polyline
n 4050 2160 m
 4050 2340 l gs col0 s gr 
% Polyline
n 4500 2160 m
 4500 2340 l gs col0 s gr 
% Polyline
n 5400 2160 m
 5400 2340 l gs col0 s gr 
% Polyline
n 5850 2160 m
 5850 2340 l gs col0 s gr 
% Polyline
n 6750 2160 m
 6750 2340 l gs col0 s gr 
% Polyline
n 7650 2160 m
 7650 2340 l gs col0 s gr 
% Polyline
n 1800 900 m 2700 900 l 2700 1350 l 1800 1350 l
 cp gs /PC [[0.53 0.81 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P18 [16 0 0 -16 120.00 60.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 3600 1350 m 5400 1350 l 5400 1800 l 3600 1800 l
 cp gs /PC [[0.53 0.81 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P18 [16 0 0 -16 240.00 90.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2700 1800 m 3150 1800 l 3150 2250 l 2700 2250 l
 cp gs /PC [[0.53 0.81 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P18 [16 0 0 -16 180.00 120.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2700 900 m 4050 900 l 4050 1350 l 2700 1350 l
 cp gs /PC [[1.00 0.75 0.75] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 180.00 60.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 5400 1350 m 6300 1350 l 6300 1800 l 5400 1800 l
 cp gs /PC [[1.00 0.75 0.75] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 360.00 90.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 6300 1800 m 7200 1800 l 7200 2250 l 6300 2250 l
 cp gs /PC [[1.00 0.75 0.75] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 420.00 120.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1800 1350 m 3600 1350 l 3600 1800 l 1800 1800 l
 cp gs /PC [[1.00 0.84 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P12 [24 0 0 -24 120.00 90.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
gs  clippath
7963 2280 m 8115 2280 l 8115 2220 l 7963 2220 l 7963 2220 l 8083 2250 l 7963 2280 l cp
eoclip
n 1575 2250 m
 8100 2250 l gs col0 s gr gr

% arrowhead
n 7963 2280 m 8083 2250 l 7963 2220 l  col0 s
% Polyline
n 3600 1800 m 4950 1800 l 4950 2250 l 3600 2250 l
 cp gs /PC [[1.00 0.84 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P12 [24 0 0 -24 240.00 120.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 8550 1350 m 8775 1350 l 8775 1800 l 8550 1800 l
 cp gs /PC [[0.53 0.81 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P18 [16 0 0 -16 570.00 90.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 8550 900 m 8775 900 l 8775 1350 l 8550 1350 l
 cp gs /PC [[1.00 0.75 0.75] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 570.00 60.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 8550 1800 m 8775 1800 l 8775 2250 l 8550 2250 l
 cp gs /PC [[1.00 0.84 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P12 [24 0 0 -24 570.00 120.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% here ends figure;
pagefooter
showpage
%%Trailer
end
%EOF

%%EndDocument
 @endspecial 0 0 0 TeXcolorrgb 1847 1650 a Fb(2)p Black
0 0 0 TeXcolorrgb 424 w(4)p Black 0 0 0 TeXcolorrgb 423
w(6)p Black 0 0 0 TeXcolorrgb 424 w(8)p Black 0 0 0 TeXcolorrgb
423 w(10)p Black 0 0 0 TeXcolorrgb 375 w(12)p Black 0 0 0
TeXcolorrgb 5202 1013 a Fa(job)38 b(0)p Black 0 0 0 TeXcolorrgb
5202 1249 a(job)g(1)p Black 0 0 0 TeXcolorrgb 5202 1485
a(job)g(2)p Black 0 0 0 TeXcolorrgb 714 1036 a(mac)m(hine)e(0)p
Black 0 0 0 TeXcolorrgb 714 1249 a(mac)m(hine)g(1)p Black
0 0 0 TeXcolorrgb 714 1461 a(mac)m(hine)g(2)p Black Black
Black eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
