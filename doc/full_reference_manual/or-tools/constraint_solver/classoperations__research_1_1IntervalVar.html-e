<!-- Good morning, Mr. Phelps. -->
<html>
  <head>
    <meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
    <title>google3/constraint_solver/: operations_research::IntervalVar Class Reference - Doxy</title>
    <link rel="shortcut icon" href="../../favicon.ico">
    <!-- Both stylesheets are supplied by Doxygen, with maybe minor tweaks from Google. -->
    <link href="../../doxygen.css" rel="stylesheet" type="text/css">
    <link href="../../tabs.css" rel="stylesheet" type="text/css">
  </head>

  <body topmargin=0 leftmargin=20 bottommargin=0 rightmargin=20 marginwidth=20 marginheight=0>
  <!-- Second part of the secret behind Doxy logo always having the word "Doxy" with the color of the day. -->
  <style>
    a.doxy_logo:hover {
      background-color: #389613
    }
  </style>

  <table width=100% cellpadding=0 cellspacing=0 border=0>
    <!-- Top horizontal line with the color of the day. -->
    <tr valign=top>
      <td colspan=3 bgcolor=#389613 height=3></td>
    </tr>

    <!-- Header row with the links at the right. -->
    <tr valign=top>
      <td colspan=3 align=right>
        <font size=-1>
          Generated on: <font color=#389613><b>Fri Apr  1 14:13:18 PDT 2011</b></font>
            for <b>custom file set</b>
        </font>
      </td>
    </tr>

    <!-- Header row with the logo and the search form. -->
    <tr valign=top>
      <!-- Logo. -->
      <td align=left width=150>
        <table width=150 height=54 cellpadding=0 cellspacing=0 border=0>
          <tr valign=top>
            <!-- First part of the secret behind Doxy logo always having the word "Doxy" with the color of the day. -->
            <td bgcolor=#389613>
              <a class="doxy_logo" href="../../index.html"><img src="../../doxy_logo.png" alt="Doxy" border=0></a>
            </td>
          </tr>
        </table>
      </td>
    </tr>

    <!-- Tiny vertical space below the form. -->
    <tr valign=top>
      <td colspan=3 height=3></td>
    </tr>
  </table>

  <!-- Header navigation row. -->
  <div class="memproto">
    <table width=100% cellpadding=0 cellspacing=0 border=0>
      <tr>
        <td align=left style="padding-left: 20px"><font size=+1><b><tt><font color=#333333>//
            <a href="../../index.html"><font color=#389613>doxy</font></a>/</font>
            <a href="../../google3/index.html">google3</a>/
            <a href="../../google3/constraint_solver/index.html">constraint_solver</a>/
            </tt></b></font>
        </td>
      </tr>
    </table>
  </div>
  <br />
    <!-- No subdirs found. -->
  <!-- End of header. -->
<!-- Generated by Doxygen 1.5.6 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.html"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.html"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="namespaces.html"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.html"><span>Classes</span></a></li>
      <li><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="annotated.html"><span>Class&nbsp;List</span></a></li>
      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.html"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
  <div class="navpath"><a class="el" href="namespaceoperations__research.html">operations_research</a>::<a class="el" href="classoperations__research_1_1IntervalVar.html">IntervalVar</a>
  </div>
</div>
<div class="contents">
<h1>operations_research::IntervalVar Class Reference</h1><!-- doxytag: class="operations_research::IntervalVar" --><!-- doxytag: inherits="operations_research::PropagationBaseObject" -->Interval Var.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="constraint__solver_8h-source.html">constraint_solver.h</a>&gt;</code>
<p>
<div class="dynheader">
Inheritance diagram for operations_research::IntervalVar:</div>
<div class="dynsection">

<p><center><img src="classoperations__research_1_1IntervalVar.png" usemap="#operations_research::IntervalVar_map" border="0" alt=""></center>
<map name="operations_research::IntervalVar_map">
<area href="classoperations__research_1_1PropagationBaseObject.html" alt="operations_research::PropagationBaseObject" shape="rect" coords="714,56,1061,80">
<area href="classoperations__research_1_1BaseObject.html" alt="operations_research::BaseObject" shape="rect" coords="714,0,1061,24">
<area href="classoperations__research_1_1AlwaysPerformedIntervalVarWrapper.html" alt="operations_research::AlwaysPerformedIntervalVarWrapper" shape="rect" coords="178,168,525,192">
<area href="classoperations__research_1_1FixedDurationIntervalVar.html" alt="operations_research::FixedDurationIntervalVar" shape="rect" coords="535,168,882,192">
<area href="classoperations__research_1_1FixedInterval.html" alt="operations_research::FixedInterval" shape="rect" coords="892,168,1239,192">
<area href="classoperations__research_1_1MirrorIntervalVar.html" alt="operations_research::MirrorIntervalVar" shape="rect" coords="1249,168,1596,192">
<area href="classoperations__research_1_1IntervalVarRelaxedMax.html" alt="operations_research::IntervalVarRelaxedMax" shape="rect" coords="0,224,347,248">
<area href="classoperations__research_1_1IntervalVarRelaxedMin.html" alt="operations_research::IntervalVarRelaxedMin" shape="rect" coords="357,224,704,248">
</map>
</div>

<p>
<a href="classoperations__research_1_1IntervalVar-members.html">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntervalVar.html#4bf10e698c3f864178b44dc2d4ce275f">IntervalVar</a> (<a class="el" href="classoperations__research_1_1Solver.html">Solver</a> *const solver, const string &amp;name)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntervalVar.html#cb6e5d4d95d742591846c6f7f830b3a3">~IntervalVar</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual int64&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntervalVar.html#cf6f5c6a44c14d6197701c450457d5bf">StartMin</a> () const =0</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">These methods query, set and watch the start position of the interval var.  <a href="#cf6f5c6a44c14d6197701c450457d5bf"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual int64&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntervalVar.html#627e898b1125c5dd6a2fb41551d2af5f">StartMax</a> () const =0</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntervalVar.html#ee80fc5cd33bc3ea9d99ec892ad9d610">SetStartMin</a> (int64 m)=0</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntervalVar.html#9b5eb53cf394f0ba2c29332b7f9d60d4">SetStartMax</a> (int64 m)=0</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntervalVar.html#a4372845801e7c83acbdfc7fa59d2fb2">SetStartRange</a> (int64 mi, int64 ma)=0</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntervalVar.html#a109772cea3713098a40a645509f7566">WhenStartRange</a> (<a class="el" href="classoperations__research_1_1Demon.html">Demon</a> *const d)=0</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntervalVar.html#b5842069b663df27c9b6b86dd2033025">WhenStartBound</a> (<a class="el" href="classoperations__research_1_1Demon.html">Demon</a> *const d)=0</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual int64&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntervalVar.html#23709f68a0b309e7ba3329c0e4775d07">DurationMin</a> () const =0</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">These methods query, set and watch the duration of the interval var.  <a href="#23709f68a0b309e7ba3329c0e4775d07"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual int64&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntervalVar.html#11247af5621b85588f22a7948ad25ed0">DurationMax</a> () const =0</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntervalVar.html#c074bf0a3f7086df10faa9bca6a42004">SetDurationMin</a> (int64 m)=0</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntervalVar.html#34c44801edcbe3195f161f7769d1cb0a">SetDurationMax</a> (int64 m)=0</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntervalVar.html#9bfcdbd186adf792ef57bac57a3809b0">SetDurationRange</a> (int64 mi, int64 ma)=0</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntervalVar.html#f95b1b5fb7a1ff5818d7eabaafdf8408">WhenDurationRange</a> (<a class="el" href="classoperations__research_1_1Demon.html">Demon</a> *const d)=0</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntervalVar.html#6f2f9c44d5e8efa05a0c142310fbcd71">WhenDurationBound</a> (<a class="el" href="classoperations__research_1_1Demon.html">Demon</a> *const d)=0</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual int64&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntervalVar.html#337babca836e2eff4e67adb0e141f82d">EndMin</a> () const =0</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">These methods query, set and watch the end position of the interval var.  <a href="#337babca836e2eff4e67adb0e141f82d"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual int64&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntervalVar.html#f5257fef12cc50e0551dfcddf1ce1b67">EndMax</a> () const =0</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntervalVar.html#ab465f88252c7db74615834bfe9c95fb">SetEndMin</a> (int64 m)=0</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntervalVar.html#dd69e5d253a42a328478f6797711abda">SetEndMax</a> (int64 m)=0</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntervalVar.html#0020fd38cc76fc9c2ad20ef40e2ab182">SetEndRange</a> (int64 mi, int64 ma)=0</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntervalVar.html#46f1c758e6201e2606cb3561c16c9e3d">WhenEndRange</a> (<a class="el" href="classoperations__research_1_1Demon.html">Demon</a> *const d)=0</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntervalVar.html#51aa4ca92209f593a3b458247642987d">WhenEndBound</a> (<a class="el" href="classoperations__research_1_1Demon.html">Demon</a> *const d)=0</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntervalVar.html#ef9101d29cf50c67521b105947f8fdcd">MustBePerformed</a> () const =0</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">These methods query, set and watches the performed status of the interval var.  <a href="#ef9101d29cf50c67521b105947f8fdcd"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntervalVar.html#8e2f5e7fed94b846d1f53c1ca8e9fa9f">MayBePerformed</a> () const =0</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntervalVar.html#6c83d488ea16e4043277574cb8bf0825">CannotBePerformed</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntervalVar.html#5adda6f4db6fe2fd865d26538736a898">IsPerformedBound</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntervalVar.html#4c1f66539cdb6258a67e4543a08d8a76">SetPerformed</a> (bool val)=0</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntervalVar.html#216609be9e8d0b595ce401ca5c2d86b0">WhenPerformedBound</a> (<a class="el" href="classoperations__research_1_1Demon.html">Demon</a> *const d)=0</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntervalVar.html#031d97f0c0940a75d32debe1e7c16c43">WhenAnything</a> (<a class="el" href="classoperations__research_1_1Demon.html">Demon</a> *const d)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Attaches a demon awakened when anything about this interval changes.  <a href="#031d97f0c0940a75d32debe1e7c16c43"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classoperations__research_1_1IntExpr.html">IntExpr</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntervalVar.html#3de2720b9c832d3fce64011a9b7d373b">StartExpr</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">These methods create expressions encapsulating the start, end and duration of the interval var.  <a href="#3de2720b9c832d3fce64011a9b7d373b"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classoperations__research_1_1IntExpr.html">IntExpr</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntervalVar.html#108a5c77b42c98a1678771f2d8c0ecd0">DurationExpr</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classoperations__research_1_1IntExpr.html">IntExpr</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntervalVar.html#e204c9497ac12ff850b7c7a321e90b25">EndExpr</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classoperations__research_1_1IntExpr.html">IntExpr</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntervalVar.html#23ae360262fe84f29f4055d2393c61c1">PerformedExpr</a> ()</td></tr>

<tr><td colspan="2"><br><h2>Static Public Attributes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">static const int64&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntervalVar.html#052180d41b28201b81b1c1695f65bcca">kMinValidValue</a> = -<a class="el" href="classoperations__research_1_1IntervalVar.html#081aea5d03ea8531476f5e51174b3d55">kMaxValidValue</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The smallest acceptable value to be returned by <a class="el" href="classoperations__research_1_1IntervalVar.html#cf6f5c6a44c14d6197701c450457d5bf" title="These methods query, set and watch the start position of the interval var.">StartMin()</a>.  <a href="#052180d41b28201b81b1c1695f65bcca"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">static const int64&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntervalVar.html#081aea5d03ea8531476f5e51174b3d55">kMaxValidValue</a> = kint64max &gt;&gt; 2</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The largest acceptable value to be returned by <a class="el" href="classoperations__research_1_1IntervalVar.html#f5257fef12cc50e0551dfcddf1ce1b67">EndMax()</a>.  <a href="#081aea5d03ea8531476f5e51174b3d55"></a><br></td></tr>
<tr><td colspan="2"><br><h2>Private Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntervalVar.html#c84eedd15274f465b20435804c41483b">DISALLOW_COPY_AND_ASSIGN</a> (<a class="el" href="classoperations__research_1_1IntervalVar.html">IntervalVar</a>)</td></tr>

<tr><td colspan="2"><br><h2>Private Attributes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classoperations__research_1_1IntExpr.html">IntExpr</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntervalVar.html#d6a6007c2bc8d24237f78480c64b79de">start_expr_</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classoperations__research_1_1IntExpr.html">IntExpr</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntervalVar.html#d5b69739aa905eed39328d81b1ef1293">duration_expr_</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classoperations__research_1_1IntExpr.html">IntExpr</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntervalVar.html#8dfc4c0ef857035cdc3939e3a10741cd">end_expr_</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classoperations__research_1_1IntExpr.html">IntExpr</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntervalVar.html#569681a3eba038e52c267a8f3e92f24f">performed_expr_</a></td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
Interval Var. 
<p>
An interval var is often used in scheduling. Its main characteristics are its start position, its duration and its end date. All these characteristics can be queried, set and demons can be posted on their modifications. An important aspect is optionality. An interval var can be performed or not. If unperformed, then it simply does not exist. Its characteristics cannot be accessed anymore. An interval var is automatically marked as unperformed when it is not consistent anymore (start greater than end, duration &lt; 0...) 
<p>Definition at line <a class="el" href="constraint__solver_8h-source.html#l02789">2789</a> of file <a class="el" href="constraint__solver_8h-source.html">constraint_solver.h</a>.</p>
<hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="4bf10e698c3f864178b44dc2d4ce275f"></a><!-- doxytag: member="operations_research::IntervalVar::IntervalVar" ref="4bf10e698c3f864178b44dc2d4ce275f" args="(Solver *const solver, const string &amp;name)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">operations_research::IntervalVar::IntervalVar           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classoperations__research_1_1Solver.html">Solver</a> *const &nbsp;</td>
          <td class="paramname"> <em>solver</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const string &amp;&nbsp;</td>
          <td class="paramname"> <em>name</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="constraint__solver_8h-source.html#l02795">2795</a> of file <a class="el" href="constraint__solver_8h-source.html">constraint_solver.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="cb6e5d4d95d742591846c6f7f830b3a3"></a><!-- doxytag: member="operations_research::IntervalVar::~IntervalVar" ref="cb6e5d4d95d742591846c6f7f830b3a3" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual operations_research::IntervalVar::~IntervalVar           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="constraint__solver_8h-source.html#l02801">2801</a> of file <a class="el" href="constraint__solver_8h-source.html">constraint_solver.h</a>.</p>

</div>
</div><p>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="cf6f5c6a44c14d6197701c450457d5bf"></a><!-- doxytag: member="operations_research::IntervalVar::StartMin" ref="cf6f5c6a44c14d6197701c450457d5bf" args="() const =0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual int64 operations_research::IntervalVar::StartMin           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
These methods query, set and watch the start position of the interval var. 
<p>

<p>Implemented in <a class="el" href="classoperations__research_1_1MirrorIntervalVar.html#a3bf6aca5b3f801f33503d7e9ccae043">operations_research::MirrorIntervalVar</a>, <a class="el" href="classoperations__research_1_1AlwaysPerformedIntervalVarWrapper.html#d0c4b7fccaefddd779430a3eeebaba5b">operations_research::AlwaysPerformedIntervalVarWrapper</a>, <a class="el" href="classoperations__research_1_1IntervalVarRelaxedMin.html#f57e139d40a6e00b2d75bec8322620aa">operations_research::IntervalVarRelaxedMin</a>, <a class="el" href="classoperations__research_1_1FixedDurationIntervalVar.html#497c12790ca1d86fb08df00db2ed643e">operations_research::FixedDurationIntervalVar</a>, and <a class="el" href="classoperations__research_1_1FixedInterval.html#ef1e0ba9e360e29738876c4aa6753bbe">operations_research::FixedInterval</a>.</p>

</div>
</div><p>
<a class="anchor" name="627e898b1125c5dd6a2fb41551d2af5f"></a><!-- doxytag: member="operations_research::IntervalVar::StartMax" ref="627e898b1125c5dd6a2fb41551d2af5f" args="() const =0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual int64 operations_research::IntervalVar::StartMax           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Implemented in <a class="el" href="classoperations__research_1_1MirrorIntervalVar.html#a5e21cc570ef30bc8a161a504c640d89">operations_research::MirrorIntervalVar</a>, <a class="el" href="classoperations__research_1_1AlwaysPerformedIntervalVarWrapper.html#30d75414a509693d53713e2a99756842">operations_research::AlwaysPerformedIntervalVarWrapper</a>, <a class="el" href="classoperations__research_1_1IntervalVarRelaxedMax.html#ea6ed867bed3b716eb40c5b2a44a866e">operations_research::IntervalVarRelaxedMax</a>, <a class="el" href="classoperations__research_1_1FixedDurationIntervalVar.html#d18305b3908361198ce602ee20d2c333">operations_research::FixedDurationIntervalVar</a>, and <a class="el" href="classoperations__research_1_1FixedInterval.html#ac56ace4c62a0b1133f4b4acf4547548">operations_research::FixedInterval</a>.</p>

</div>
</div><p>
<a class="anchor" name="ee80fc5cd33bc3ea9d99ec892ad9d610"></a><!-- doxytag: member="operations_research::IntervalVar::SetStartMin" ref="ee80fc5cd33bc3ea9d99ec892ad9d610" args="(int64 m)=0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void operations_research::IntervalVar::SetStartMin           </td>
          <td>(</td>
          <td class="paramtype">int64&nbsp;</td>
          <td class="paramname"> <em>m</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Implemented in <a class="el" href="classoperations__research_1_1MirrorIntervalVar.html#1794aac7f6cbdb9450fc3f59ab2be096">operations_research::MirrorIntervalVar</a>, <a class="el" href="classoperations__research_1_1AlwaysPerformedIntervalVarWrapper.html#c749dcec23327ac2bd479b1f0672c655">operations_research::AlwaysPerformedIntervalVarWrapper</a>, <a class="el" href="classoperations__research_1_1IntervalVarRelaxedMin.html#e85b82778e7206cb0e73b692c4bc1d15">operations_research::IntervalVarRelaxedMin</a>, <a class="el" href="classoperations__research_1_1FixedDurationIntervalVar.html#cde74e5d83c96766d87b39ec0869981b">operations_research::FixedDurationIntervalVar</a>, and <a class="el" href="classoperations__research_1_1FixedInterval.html#2ed7c409ca3d404a71da3d2da8989cfb">operations_research::FixedInterval</a>.</p>

</div>
</div><p>
<a class="anchor" name="9b5eb53cf394f0ba2c29332b7f9d60d4"></a><!-- doxytag: member="operations_research::IntervalVar::SetStartMax" ref="9b5eb53cf394f0ba2c29332b7f9d60d4" args="(int64 m)=0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void operations_research::IntervalVar::SetStartMax           </td>
          <td>(</td>
          <td class="paramtype">int64&nbsp;</td>
          <td class="paramname"> <em>m</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Implemented in <a class="el" href="classoperations__research_1_1MirrorIntervalVar.html#66e76f21ad7f03b0ab81eda5473b8539">operations_research::MirrorIntervalVar</a>, <a class="el" href="classoperations__research_1_1AlwaysPerformedIntervalVarWrapper.html#4a22c7d77b132d00c310e4c94a47f6cb">operations_research::AlwaysPerformedIntervalVarWrapper</a>, <a class="el" href="classoperations__research_1_1IntervalVarRelaxedMax.html#a6d7caa271366de8e7abf678b2c809a7">operations_research::IntervalVarRelaxedMax</a>, <a class="el" href="classoperations__research_1_1FixedDurationIntervalVar.html#859e46fcd5ca435bed5d4d704e249399">operations_research::FixedDurationIntervalVar</a>, and <a class="el" href="classoperations__research_1_1FixedInterval.html#25e297075922db9a7b46cfa5c26be24f">operations_research::FixedInterval</a>.</p>

</div>
</div><p>
<a class="anchor" name="a4372845801e7c83acbdfc7fa59d2fb2"></a><!-- doxytag: member="operations_research::IntervalVar::SetStartRange" ref="a4372845801e7c83acbdfc7fa59d2fb2" args="(int64 mi, int64 ma)=0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void operations_research::IntervalVar::SetStartRange           </td>
          <td>(</td>
          <td class="paramtype">int64&nbsp;</td>
          <td class="paramname"> <em>mi</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int64&nbsp;</td>
          <td class="paramname"> <em>ma</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Implemented in <a class="el" href="classoperations__research_1_1MirrorIntervalVar.html#5086d1c5eed2b93aaaf3e92db766367f">operations_research::MirrorIntervalVar</a>, <a class="el" href="classoperations__research_1_1AlwaysPerformedIntervalVarWrapper.html#1a609df76900a334c3c74273f3885142">operations_research::AlwaysPerformedIntervalVarWrapper</a>, <a class="el" href="classoperations__research_1_1FixedDurationIntervalVar.html#b66cfe6e0b236e72067641a231658751">operations_research::FixedDurationIntervalVar</a>, and <a class="el" href="classoperations__research_1_1FixedInterval.html#039e021ec5af17f3596d48932604f437">operations_research::FixedInterval</a>.</p>

</div>
</div><p>
<a class="anchor" name="a109772cea3713098a40a645509f7566"></a><!-- doxytag: member="operations_research::IntervalVar::WhenStartRange" ref="a109772cea3713098a40a645509f7566" args="(Demon *const d)=0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void operations_research::IntervalVar::WhenStartRange           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classoperations__research_1_1Demon.html">Demon</a> *const &nbsp;</td>
          <td class="paramname"> <em>d</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Implemented in <a class="el" href="classoperations__research_1_1MirrorIntervalVar.html#693a266e4442da05187be3ce6653c6e9">operations_research::MirrorIntervalVar</a>, <a class="el" href="classoperations__research_1_1AlwaysPerformedIntervalVarWrapper.html#583ae0dae816129d53b4f3a0323276a6">operations_research::AlwaysPerformedIntervalVarWrapper</a>, <a class="el" href="classoperations__research_1_1FixedDurationIntervalVar.html#1b5612cdeb3b39037de9ff0648dd885e">operations_research::FixedDurationIntervalVar</a>, and <a class="el" href="classoperations__research_1_1FixedInterval.html#7aa916e27abd13941d63794ae37eef85">operations_research::FixedInterval</a>.</p>

</div>
</div><p>
<a class="anchor" name="b5842069b663df27c9b6b86dd2033025"></a><!-- doxytag: member="operations_research::IntervalVar::WhenStartBound" ref="b5842069b663df27c9b6b86dd2033025" args="(Demon *const d)=0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void operations_research::IntervalVar::WhenStartBound           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classoperations__research_1_1Demon.html">Demon</a> *const &nbsp;</td>
          <td class="paramname"> <em>d</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Implemented in <a class="el" href="classoperations__research_1_1MirrorIntervalVar.html#a5e5ac65245a28cac8aff8ff2c4b9b01">operations_research::MirrorIntervalVar</a>, <a class="el" href="classoperations__research_1_1AlwaysPerformedIntervalVarWrapper.html#621b96dfae839e23a290fc901354c794">operations_research::AlwaysPerformedIntervalVarWrapper</a>, <a class="el" href="classoperations__research_1_1FixedDurationIntervalVar.html#baa80244c7c2220e001dfb5256338348">operations_research::FixedDurationIntervalVar</a>, and <a class="el" href="classoperations__research_1_1FixedInterval.html#f4c22d8e79e3b822aee3dc77673b2aff">operations_research::FixedInterval</a>.</p>

</div>
</div><p>
<a class="anchor" name="23709f68a0b309e7ba3329c0e4775d07"></a><!-- doxytag: member="operations_research::IntervalVar::DurationMin" ref="23709f68a0b309e7ba3329c0e4775d07" args="() const =0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual int64 operations_research::IntervalVar::DurationMin           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
These methods query, set and watch the duration of the interval var. 
<p>

<p>Implemented in <a class="el" href="classoperations__research_1_1MirrorIntervalVar.html#f2c7a8bd7a8a0f73464cf7d50d2002f7">operations_research::MirrorIntervalVar</a>, <a class="el" href="classoperations__research_1_1AlwaysPerformedIntervalVarWrapper.html#c8346c16c983d1db571791ce32220bc8">operations_research::AlwaysPerformedIntervalVarWrapper</a>, <a class="el" href="classoperations__research_1_1FixedDurationIntervalVar.html#ff096c3ceb415ba9cada38a128eb8666">operations_research::FixedDurationIntervalVar</a>, and <a class="el" href="classoperations__research_1_1FixedInterval.html#2e56e4d27b184e9d16012646d9ac66b1">operations_research::FixedInterval</a>.</p>

</div>
</div><p>
<a class="anchor" name="11247af5621b85588f22a7948ad25ed0"></a><!-- doxytag: member="operations_research::IntervalVar::DurationMax" ref="11247af5621b85588f22a7948ad25ed0" args="() const =0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual int64 operations_research::IntervalVar::DurationMax           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Implemented in <a class="el" href="classoperations__research_1_1MirrorIntervalVar.html#75b53e819dafc59e8b4f418d47c492f4">operations_research::MirrorIntervalVar</a>, <a class="el" href="classoperations__research_1_1AlwaysPerformedIntervalVarWrapper.html#4d6c3b1e4f00b1389a586a9f726008ea">operations_research::AlwaysPerformedIntervalVarWrapper</a>, <a class="el" href="classoperations__research_1_1FixedDurationIntervalVar.html#e69b5e7eb0064bcc888413d295b525e5">operations_research::FixedDurationIntervalVar</a>, and <a class="el" href="classoperations__research_1_1FixedInterval.html#66e49a1c195fe2515dccce63d317cdfc">operations_research::FixedInterval</a>.</p>

</div>
</div><p>
<a class="anchor" name="c074bf0a3f7086df10faa9bca6a42004"></a><!-- doxytag: member="operations_research::IntervalVar::SetDurationMin" ref="c074bf0a3f7086df10faa9bca6a42004" args="(int64 m)=0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void operations_research::IntervalVar::SetDurationMin           </td>
          <td>(</td>
          <td class="paramtype">int64&nbsp;</td>
          <td class="paramname"> <em>m</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Implemented in <a class="el" href="classoperations__research_1_1MirrorIntervalVar.html#2faaf4bbf802caa3475d63c2df6a4cde">operations_research::MirrorIntervalVar</a>, <a class="el" href="classoperations__research_1_1AlwaysPerformedIntervalVarWrapper.html#ee567a05408a6f763f932d5f942db2d9">operations_research::AlwaysPerformedIntervalVarWrapper</a>, <a class="el" href="classoperations__research_1_1FixedDurationIntervalVar.html#de4a216a6d012bc7c68bc198d861d4e9">operations_research::FixedDurationIntervalVar</a>, and <a class="el" href="classoperations__research_1_1FixedInterval.html#48b1f3804d876028f75ce6306049906c">operations_research::FixedInterval</a>.</p>

</div>
</div><p>
<a class="anchor" name="34c44801edcbe3195f161f7769d1cb0a"></a><!-- doxytag: member="operations_research::IntervalVar::SetDurationMax" ref="34c44801edcbe3195f161f7769d1cb0a" args="(int64 m)=0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void operations_research::IntervalVar::SetDurationMax           </td>
          <td>(</td>
          <td class="paramtype">int64&nbsp;</td>
          <td class="paramname"> <em>m</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Implemented in <a class="el" href="classoperations__research_1_1MirrorIntervalVar.html#2b55cdc4c4fa83243fa92177d2b32a0b">operations_research::MirrorIntervalVar</a>, <a class="el" href="classoperations__research_1_1AlwaysPerformedIntervalVarWrapper.html#8e212b8c5b98505a78c89972a79f3c8f">operations_research::AlwaysPerformedIntervalVarWrapper</a>, <a class="el" href="classoperations__research_1_1FixedDurationIntervalVar.html#456ee7956c6cb1f95b111a4e9cbaa165">operations_research::FixedDurationIntervalVar</a>, and <a class="el" href="classoperations__research_1_1FixedInterval.html#5c4df0dfe5199b542644f59bfda119d7">operations_research::FixedInterval</a>.</p>

</div>
</div><p>
<a class="anchor" name="9bfcdbd186adf792ef57bac57a3809b0"></a><!-- doxytag: member="operations_research::IntervalVar::SetDurationRange" ref="9bfcdbd186adf792ef57bac57a3809b0" args="(int64 mi, int64 ma)=0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void operations_research::IntervalVar::SetDurationRange           </td>
          <td>(</td>
          <td class="paramtype">int64&nbsp;</td>
          <td class="paramname"> <em>mi</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int64&nbsp;</td>
          <td class="paramname"> <em>ma</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Implemented in <a class="el" href="classoperations__research_1_1MirrorIntervalVar.html#1f03e2e010d7a907f2b1e6f6bfc7a357">operations_research::MirrorIntervalVar</a>, <a class="el" href="classoperations__research_1_1AlwaysPerformedIntervalVarWrapper.html#ac2fe7cacb71963b8916b8c95f7eddf7">operations_research::AlwaysPerformedIntervalVarWrapper</a>, <a class="el" href="classoperations__research_1_1FixedDurationIntervalVar.html#c62d8ddbe581cb017346b098ad1b4e13">operations_research::FixedDurationIntervalVar</a>, and <a class="el" href="classoperations__research_1_1FixedInterval.html#59805b100edfda1ec6fe66a5cdf210f4">operations_research::FixedInterval</a>.</p>

</div>
</div><p>
<a class="anchor" name="f95b1b5fb7a1ff5818d7eabaafdf8408"></a><!-- doxytag: member="operations_research::IntervalVar::WhenDurationRange" ref="f95b1b5fb7a1ff5818d7eabaafdf8408" args="(Demon *const d)=0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void operations_research::IntervalVar::WhenDurationRange           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classoperations__research_1_1Demon.html">Demon</a> *const &nbsp;</td>
          <td class="paramname"> <em>d</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Implemented in <a class="el" href="classoperations__research_1_1MirrorIntervalVar.html#30e5a2714584ee62f5200913ca8ba3d7">operations_research::MirrorIntervalVar</a>, <a class="el" href="classoperations__research_1_1AlwaysPerformedIntervalVarWrapper.html#6cd37f517daf51f9e899c2b61e4470a0">operations_research::AlwaysPerformedIntervalVarWrapper</a>, <a class="el" href="classoperations__research_1_1FixedDurationIntervalVar.html#d5cb8d70ff382d770ecfb836e43863cc">operations_research::FixedDurationIntervalVar</a>, and <a class="el" href="classoperations__research_1_1FixedInterval.html#0b9b5ddd2ddc76dabf110f7a1ac48e8b">operations_research::FixedInterval</a>.</p>

</div>
</div><p>
<a class="anchor" name="6f2f9c44d5e8efa05a0c142310fbcd71"></a><!-- doxytag: member="operations_research::IntervalVar::WhenDurationBound" ref="6f2f9c44d5e8efa05a0c142310fbcd71" args="(Demon *const d)=0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void operations_research::IntervalVar::WhenDurationBound           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classoperations__research_1_1Demon.html">Demon</a> *const &nbsp;</td>
          <td class="paramname"> <em>d</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Implemented in <a class="el" href="classoperations__research_1_1MirrorIntervalVar.html#f06a4b9d9d51176e2305e3a7e2834086">operations_research::MirrorIntervalVar</a>, <a class="el" href="classoperations__research_1_1AlwaysPerformedIntervalVarWrapper.html#4db11cf6624da965736fd02ecd7197db">operations_research::AlwaysPerformedIntervalVarWrapper</a>, <a class="el" href="classoperations__research_1_1FixedDurationIntervalVar.html#b6480c8a3eaf7a334ba23243f43fda5e">operations_research::FixedDurationIntervalVar</a>, and <a class="el" href="classoperations__research_1_1FixedInterval.html#1f0469ff477c696d661d978b7ce2a3fd">operations_research::FixedInterval</a>.</p>

</div>
</div><p>
<a class="anchor" name="337babca836e2eff4e67adb0e141f82d"></a><!-- doxytag: member="operations_research::IntervalVar::EndMin" ref="337babca836e2eff4e67adb0e141f82d" args="() const =0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual int64 operations_research::IntervalVar::EndMin           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
These methods query, set and watch the end position of the interval var. 
<p>

<p>Implemented in <a class="el" href="classoperations__research_1_1MirrorIntervalVar.html#14ccc8b5def84c49d12d7457abfc630b">operations_research::MirrorIntervalVar</a>, <a class="el" href="classoperations__research_1_1AlwaysPerformedIntervalVarWrapper.html#46b0d5a62a368f8544e9a52e64e0abfa">operations_research::AlwaysPerformedIntervalVarWrapper</a>, <a class="el" href="classoperations__research_1_1IntervalVarRelaxedMin.html#b283676cb0901ff09fd5f679fc24e115">operations_research::IntervalVarRelaxedMin</a>, <a class="el" href="classoperations__research_1_1FixedDurationIntervalVar.html#642184f04d53016855e82ca0e25e708a">operations_research::FixedDurationIntervalVar</a>, and <a class="el" href="classoperations__research_1_1FixedInterval.html#bf15d6aa6ae5002431bbe0768cb21655">operations_research::FixedInterval</a>.</p>

</div>
</div><p>
<a class="anchor" name="f5257fef12cc50e0551dfcddf1ce1b67"></a><!-- doxytag: member="operations_research::IntervalVar::EndMax" ref="f5257fef12cc50e0551dfcddf1ce1b67" args="() const =0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual int64 operations_research::IntervalVar::EndMax           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Implemented in <a class="el" href="classoperations__research_1_1MirrorIntervalVar.html#78384aabd338b7e45775a1f2d5cae2fc">operations_research::MirrorIntervalVar</a>, <a class="el" href="classoperations__research_1_1AlwaysPerformedIntervalVarWrapper.html#0831e3a277c381f5d0aa13c02014c932">operations_research::AlwaysPerformedIntervalVarWrapper</a>, <a class="el" href="classoperations__research_1_1IntervalVarRelaxedMax.html#a02de54f1e780a5956c0d14eec718810">operations_research::IntervalVarRelaxedMax</a>, <a class="el" href="classoperations__research_1_1FixedDurationIntervalVar.html#dc9dc802bd6fde9c9270eb9ed3e18d0a">operations_research::FixedDurationIntervalVar</a>, and <a class="el" href="classoperations__research_1_1FixedInterval.html#19761364026bb29f64be6ce62ac1c7ba">operations_research::FixedInterval</a>.</p>

</div>
</div><p>
<a class="anchor" name="ab465f88252c7db74615834bfe9c95fb"></a><!-- doxytag: member="operations_research::IntervalVar::SetEndMin" ref="ab465f88252c7db74615834bfe9c95fb" args="(int64 m)=0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void operations_research::IntervalVar::SetEndMin           </td>
          <td>(</td>
          <td class="paramtype">int64&nbsp;</td>
          <td class="paramname"> <em>m</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Implemented in <a class="el" href="classoperations__research_1_1MirrorIntervalVar.html#31958ff310035a8df94cd361541f7146">operations_research::MirrorIntervalVar</a>, <a class="el" href="classoperations__research_1_1AlwaysPerformedIntervalVarWrapper.html#4c763f4020fb587d122b5b9dd473c73a">operations_research::AlwaysPerformedIntervalVarWrapper</a>, <a class="el" href="classoperations__research_1_1IntervalVarRelaxedMin.html#a78e96b531be1b83cbd31d928847c1ea">operations_research::IntervalVarRelaxedMin</a>, <a class="el" href="classoperations__research_1_1FixedDurationIntervalVar.html#7cf60c2161ac9ce4d9ef133b1d8e4dea">operations_research::FixedDurationIntervalVar</a>, and <a class="el" href="classoperations__research_1_1FixedInterval.html#98ebdc3b6cbca199d9bb9e4c207ee26d">operations_research::FixedInterval</a>.</p>

</div>
</div><p>
<a class="anchor" name="dd69e5d253a42a328478f6797711abda"></a><!-- doxytag: member="operations_research::IntervalVar::SetEndMax" ref="dd69e5d253a42a328478f6797711abda" args="(int64 m)=0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void operations_research::IntervalVar::SetEndMax           </td>
          <td>(</td>
          <td class="paramtype">int64&nbsp;</td>
          <td class="paramname"> <em>m</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Implemented in <a class="el" href="classoperations__research_1_1MirrorIntervalVar.html#e3e2edf8e9ad793a373d1ec494a55690">operations_research::MirrorIntervalVar</a>, <a class="el" href="classoperations__research_1_1AlwaysPerformedIntervalVarWrapper.html#29e9978f759f292263286c178e1546d7">operations_research::AlwaysPerformedIntervalVarWrapper</a>, <a class="el" href="classoperations__research_1_1IntervalVarRelaxedMax.html#1fdc2e128bc3cba526c45d82f196f953">operations_research::IntervalVarRelaxedMax</a>, <a class="el" href="classoperations__research_1_1FixedDurationIntervalVar.html#6cc47b56df2dd4f76f976d39a3ec777d">operations_research::FixedDurationIntervalVar</a>, and <a class="el" href="classoperations__research_1_1FixedInterval.html#7b14a90427d6123cbb22605cebc84e8c">operations_research::FixedInterval</a>.</p>

</div>
</div><p>
<a class="anchor" name="0020fd38cc76fc9c2ad20ef40e2ab182"></a><!-- doxytag: member="operations_research::IntervalVar::SetEndRange" ref="0020fd38cc76fc9c2ad20ef40e2ab182" args="(int64 mi, int64 ma)=0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void operations_research::IntervalVar::SetEndRange           </td>
          <td>(</td>
          <td class="paramtype">int64&nbsp;</td>
          <td class="paramname"> <em>mi</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int64&nbsp;</td>
          <td class="paramname"> <em>ma</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Implemented in <a class="el" href="classoperations__research_1_1MirrorIntervalVar.html#fa916b9215249e1c736bb8991bb7aeda">operations_research::MirrorIntervalVar</a>, <a class="el" href="classoperations__research_1_1AlwaysPerformedIntervalVarWrapper.html#12911c3b0f86eb0ba6d4195d2ccf99c2">operations_research::AlwaysPerformedIntervalVarWrapper</a>, <a class="el" href="classoperations__research_1_1FixedDurationIntervalVar.html#6591527b65a1d9ff9539f42809354e1f">operations_research::FixedDurationIntervalVar</a>, and <a class="el" href="classoperations__research_1_1FixedInterval.html#ad020c9ec2c3814001ec6a8a60d2855a">operations_research::FixedInterval</a>.</p>

</div>
</div><p>
<a class="anchor" name="46f1c758e6201e2606cb3561c16c9e3d"></a><!-- doxytag: member="operations_research::IntervalVar::WhenEndRange" ref="46f1c758e6201e2606cb3561c16c9e3d" args="(Demon *const d)=0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void operations_research::IntervalVar::WhenEndRange           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classoperations__research_1_1Demon.html">Demon</a> *const &nbsp;</td>
          <td class="paramname"> <em>d</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Implemented in <a class="el" href="classoperations__research_1_1MirrorIntervalVar.html#fd5e3893c7edacb6ddb1c47bbb9ab45b">operations_research::MirrorIntervalVar</a>, <a class="el" href="classoperations__research_1_1AlwaysPerformedIntervalVarWrapper.html#9bd29482fd3a241ee2da16a01c85029a">operations_research::AlwaysPerformedIntervalVarWrapper</a>, <a class="el" href="classoperations__research_1_1FixedDurationIntervalVar.html#0b14287d267044b29472f85e94fe53ce">operations_research::FixedDurationIntervalVar</a>, and <a class="el" href="classoperations__research_1_1FixedInterval.html#53ce55c121c259a6218c4dbe79c53c6c">operations_research::FixedInterval</a>.</p>

</div>
</div><p>
<a class="anchor" name="51aa4ca92209f593a3b458247642987d"></a><!-- doxytag: member="operations_research::IntervalVar::WhenEndBound" ref="51aa4ca92209f593a3b458247642987d" args="(Demon *const d)=0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void operations_research::IntervalVar::WhenEndBound           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classoperations__research_1_1Demon.html">Demon</a> *const &nbsp;</td>
          <td class="paramname"> <em>d</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Implemented in <a class="el" href="classoperations__research_1_1MirrorIntervalVar.html#42d2d3599a10fba59468626a90bd7cba">operations_research::MirrorIntervalVar</a>, <a class="el" href="classoperations__research_1_1AlwaysPerformedIntervalVarWrapper.html#b654e9f0445ec21e6e8dfb5c9e32d8c5">operations_research::AlwaysPerformedIntervalVarWrapper</a>, <a class="el" href="classoperations__research_1_1FixedDurationIntervalVar.html#13b3deea67c0fe175b851beb68fbac89">operations_research::FixedDurationIntervalVar</a>, and <a class="el" href="classoperations__research_1_1FixedInterval.html#41c0ac3682777d1bcad6eb15eec2cf34">operations_research::FixedInterval</a>.</p>

</div>
</div><p>
<a class="anchor" name="ef9101d29cf50c67521b105947f8fdcd"></a><!-- doxytag: member="operations_research::IntervalVar::MustBePerformed" ref="ef9101d29cf50c67521b105947f8fdcd" args="() const =0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool operations_research::IntervalVar::MustBePerformed           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
These methods query, set and watches the performed status of the interval var. 
<p>

<p>Implemented in <a class="el" href="classoperations__research_1_1MirrorIntervalVar.html#1bdf5ec806329ab5d0fb1cf8ed31d02e">operations_research::MirrorIntervalVar</a>, <a class="el" href="classoperations__research_1_1AlwaysPerformedIntervalVarWrapper.html#7dc8d6d4b0981c05a162d7fc5145c7e0">operations_research::AlwaysPerformedIntervalVarWrapper</a>, <a class="el" href="classoperations__research_1_1FixedDurationIntervalVar.html#35b1e6a27359f927ad1b9f204f6064eb">operations_research::FixedDurationIntervalVar</a>, and <a class="el" href="classoperations__research_1_1FixedInterval.html#cfdb47b88a2c4f809b14081f0ef31b86">operations_research::FixedInterval</a>.</p>

</div>
</div><p>
<a class="anchor" name="8e2f5e7fed94b846d1f53c1ca8e9fa9f"></a><!-- doxytag: member="operations_research::IntervalVar::MayBePerformed" ref="8e2f5e7fed94b846d1f53c1ca8e9fa9f" args="() const =0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool operations_research::IntervalVar::MayBePerformed           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Implemented in <a class="el" href="classoperations__research_1_1MirrorIntervalVar.html#4581c878a1b609151bc61f0d4710e0a3">operations_research::MirrorIntervalVar</a>, <a class="el" href="classoperations__research_1_1AlwaysPerformedIntervalVarWrapper.html#b98a69606429bb80f36146794386f119">operations_research::AlwaysPerformedIntervalVarWrapper</a>, <a class="el" href="classoperations__research_1_1FixedDurationIntervalVar.html#753443934fa3a000afa1d66ff1101099">operations_research::FixedDurationIntervalVar</a>, and <a class="el" href="classoperations__research_1_1FixedInterval.html#62505262d43dfd0b36e207820c49c3da">operations_research::FixedInterval</a>.</p>

</div>
</div><p>
<a class="anchor" name="6c83d488ea16e4043277574cb8bf0825"></a><!-- doxytag: member="operations_research::IntervalVar::CannotBePerformed" ref="6c83d488ea16e4043277574cb8bf0825" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool operations_research::IntervalVar::CannotBePerformed           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="constraint__solver_8h-source.html#l02835">2835</a> of file <a class="el" href="constraint__solver_8h-source.html">constraint_solver.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="5adda6f4db6fe2fd865d26538736a898"></a><!-- doxytag: member="operations_research::IntervalVar::IsPerformedBound" ref="5adda6f4db6fe2fd865d26538736a898" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool operations_research::IntervalVar::IsPerformedBound           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="constraint__solver_8h-source.html#l02836">2836</a> of file <a class="el" href="constraint__solver_8h-source.html">constraint_solver.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="4c1f66539cdb6258a67e4543a08d8a76"></a><!-- doxytag: member="operations_research::IntervalVar::SetPerformed" ref="4c1f66539cdb6258a67e4543a08d8a76" args="(bool val)=0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void operations_research::IntervalVar::SetPerformed           </td>
          <td>(</td>
          <td class="paramtype">bool&nbsp;</td>
          <td class="paramname"> <em>val</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Implemented in <a class="el" href="classoperations__research_1_1MirrorIntervalVar.html#4a5209419a2778b8f192e99b34a846de">operations_research::MirrorIntervalVar</a>, <a class="el" href="classoperations__research_1_1AlwaysPerformedIntervalVarWrapper.html#f1fed7f9e74339e97a758d266f83bc63">operations_research::AlwaysPerformedIntervalVarWrapper</a>, <a class="el" href="classoperations__research_1_1FixedDurationIntervalVar.html#94aa6acb42497bf241d17e05cc932a22">operations_research::FixedDurationIntervalVar</a>, and <a class="el" href="classoperations__research_1_1FixedInterval.html#861456ef59cebfcb99d627e29918820c">operations_research::FixedInterval</a>.</p>

</div>
</div><p>
<a class="anchor" name="216609be9e8d0b595ce401ca5c2d86b0"></a><!-- doxytag: member="operations_research::IntervalVar::WhenPerformedBound" ref="216609be9e8d0b595ce401ca5c2d86b0" args="(Demon *const d)=0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void operations_research::IntervalVar::WhenPerformedBound           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classoperations__research_1_1Demon.html">Demon</a> *const &nbsp;</td>
          <td class="paramname"> <em>d</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Implemented in <a class="el" href="classoperations__research_1_1MirrorIntervalVar.html#fbf3130a224b0d7ae128fdb39cba8c12">operations_research::MirrorIntervalVar</a>, <a class="el" href="classoperations__research_1_1AlwaysPerformedIntervalVarWrapper.html#d87006b5622b0a94652d4eaaa479e62d">operations_research::AlwaysPerformedIntervalVarWrapper</a>, <a class="el" href="classoperations__research_1_1FixedDurationIntervalVar.html#eabc80dfca9cb4274b64a47e47d86097">operations_research::FixedDurationIntervalVar</a>, and <a class="el" href="classoperations__research_1_1FixedInterval.html#656ac6d84f1deb4a3128a25e32196ed3">operations_research::FixedInterval</a>.</p>

</div>
</div><p>
<a class="anchor" name="031d97f0c0940a75d32debe1e7c16c43"></a><!-- doxytag: member="operations_research::IntervalVar::WhenAnything" ref="031d97f0c0940a75d32debe1e7c16c43" args="(Demon *const d)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void operations_research::IntervalVar::WhenAnything           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classoperations__research_1_1Demon.html">Demon</a> *const &nbsp;</td>
          <td class="paramname"> <em>d</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Attaches a demon awakened when anything about this interval changes. 
<p>

<p>Definition at line <a class="el" href="interval_8cc-source.html#l00447">447</a> of file <a class="el" href="interval_8cc-source.html">interval.cc</a>.</p>

</div>
</div><p>
<a class="anchor" name="3de2720b9c832d3fce64011a9b7d373b"></a><!-- doxytag: member="operations_research::IntervalVar::StartExpr" ref="3de2720b9c832d3fce64011a9b7d373b" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classoperations__research_1_1IntExpr.html">IntExpr</a> * operations_research::IntervalVar::StartExpr           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
These methods create expressions encapsulating the start, end and duration of the interval var. 
<p>
Please note that these must not be used if the interval var is unperformed. 
<p>Definition at line <a class="el" href="interval_8cc-source.html#l00454">454</a> of file <a class="el" href="interval_8cc-source.html">interval.cc</a>.</p>

</div>
</div><p>
<a class="anchor" name="108a5c77b42c98a1678771f2d8c0ecd0"></a><!-- doxytag: member="operations_research::IntervalVar::DurationExpr" ref="108a5c77b42c98a1678771f2d8c0ecd0" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classoperations__research_1_1IntExpr.html">IntExpr</a> * operations_research::IntervalVar::DurationExpr           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="interval_8cc-source.html#l00462">462</a> of file <a class="el" href="interval_8cc-source.html">interval.cc</a>.</p>

</div>
</div><p>
<a class="anchor" name="e204c9497ac12ff850b7c7a321e90b25"></a><!-- doxytag: member="operations_research::IntervalVar::EndExpr" ref="e204c9497ac12ff850b7c7a321e90b25" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classoperations__research_1_1IntExpr.html">IntExpr</a> * operations_research::IntervalVar::EndExpr           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="interval_8cc-source.html#l00470">470</a> of file <a class="el" href="interval_8cc-source.html">interval.cc</a>.</p>

</div>
</div><p>
<a class="anchor" name="23ae360262fe84f29f4055d2393c61c1"></a><!-- doxytag: member="operations_research::IntervalVar::PerformedExpr" ref="23ae360262fe84f29f4055d2393c61c1" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classoperations__research_1_1IntExpr.html">IntExpr</a> * operations_research::IntervalVar::PerformedExpr           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="interval_8cc-source.html#l00478">478</a> of file <a class="el" href="interval_8cc-source.html">interval.cc</a>.</p>

</div>
</div><p>
<a class="anchor" name="c84eedd15274f465b20435804c41483b"></a><!-- doxytag: member="operations_research::IntervalVar::DISALLOW_COPY_AND_ASSIGN" ref="c84eedd15274f465b20435804c41483b" args="(IntervalVar)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">operations_research::IntervalVar::DISALLOW_COPY_AND_ASSIGN           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classoperations__research_1_1IntervalVar.html">IntervalVar</a>&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<hr><h2>Member Data Documentation</h2>
<a class="anchor" name="052180d41b28201b81b1c1695f65bcca"></a><!-- doxytag: member="operations_research::IntervalVar::kMinValidValue" ref="052180d41b28201b81b1c1695f65bcca" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const int64 <a class="el" href="classoperations__research_1_1IntervalVar.html#052180d41b28201b81b1c1695f65bcca">operations_research::IntervalVar::kMinValidValue</a> = -<a class="el" href="classoperations__research_1_1IntervalVar.html#081aea5d03ea8531476f5e51174b3d55">kMaxValidValue</a><code> [static]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
The smallest acceptable value to be returned by <a class="el" href="classoperations__research_1_1IntervalVar.html#cf6f5c6a44c14d6197701c450457d5bf" title="These methods query, set and watch the start position of the interval var.">StartMin()</a>. 
<p>

<p>Definition at line <a class="el" href="constraint__solver_8h-source.html#l02792">2792</a> of file <a class="el" href="constraint__solver_8h-source.html">constraint_solver.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="081aea5d03ea8531476f5e51174b3d55"></a><!-- doxytag: member="operations_research::IntervalVar::kMaxValidValue" ref="081aea5d03ea8531476f5e51174b3d55" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const int64 <a class="el" href="classoperations__research_1_1IntervalVar.html#081aea5d03ea8531476f5e51174b3d55">operations_research::IntervalVar::kMaxValidValue</a> = kint64max &gt;&gt; 2<code> [static]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
The largest acceptable value to be returned by <a class="el" href="classoperations__research_1_1IntervalVar.html#f5257fef12cc50e0551dfcddf1ce1b67">EndMax()</a>. 
<p>
Interval Var.<p>
It's good to have the two extreme values being symmetrical around zero: it makes mirroring easier. 
<p>Definition at line <a class="el" href="constraint__solver_8h-source.html#l02794">2794</a> of file <a class="el" href="constraint__solver_8h-source.html">constraint_solver.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="d6a6007c2bc8d24237f78480c64b79de"></a><!-- doxytag: member="operations_research::IntervalVar::start_expr_" ref="d6a6007c2bc8d24237f78480c64b79de" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classoperations__research_1_1IntExpr.html">IntExpr</a>* <a class="el" href="classoperations__research_1_1IntervalVar.html#d6a6007c2bc8d24237f78480c64b79de">operations_research::IntervalVar::start_expr_</a><code> [private]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="constraint__solver_8h-source.html#l02854">2854</a> of file <a class="el" href="constraint__solver_8h-source.html">constraint_solver.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="d5b69739aa905eed39328d81b1ef1293"></a><!-- doxytag: member="operations_research::IntervalVar::duration_expr_" ref="d5b69739aa905eed39328d81b1ef1293" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classoperations__research_1_1IntExpr.html">IntExpr</a>* <a class="el" href="classoperations__research_1_1IntervalVar.html#d5b69739aa905eed39328d81b1ef1293">operations_research::IntervalVar::duration_expr_</a><code> [private]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="constraint__solver_8h-source.html#l02855">2855</a> of file <a class="el" href="constraint__solver_8h-source.html">constraint_solver.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="8dfc4c0ef857035cdc3939e3a10741cd"></a><!-- doxytag: member="operations_research::IntervalVar::end_expr_" ref="8dfc4c0ef857035cdc3939e3a10741cd" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classoperations__research_1_1IntExpr.html">IntExpr</a>* <a class="el" href="classoperations__research_1_1IntervalVar.html#8dfc4c0ef857035cdc3939e3a10741cd">operations_research::IntervalVar::end_expr_</a><code> [private]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="constraint__solver_8h-source.html#l02856">2856</a> of file <a class="el" href="constraint__solver_8h-source.html">constraint_solver.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="569681a3eba038e52c267a8f3e92f24f"></a><!-- doxytag: member="operations_research::IntervalVar::performed_expr_" ref="569681a3eba038e52c267a8f3e92f24f" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classoperations__research_1_1IntExpr.html">IntExpr</a>* <a class="el" href="classoperations__research_1_1IntervalVar.html#569681a3eba038e52c267a8f3e92f24f">operations_research::IntervalVar::performed_expr_</a><code> [private]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="constraint__solver_8h-source.html#l02857">2857</a> of file <a class="el" href="constraint__solver_8h-source.html">constraint_solver.h</a>.</p>

</div>
</div><p>
<hr>The documentation for this class was generated from the following files:<ul>
<li>google3/constraint_solver/<a class="el" href="constraint__solver_8h-source.html">constraint_solver.h</a><li>google3/constraint_solver/<a class="el" href="interval_8cc-source.html">interval.cc</a></ul>
</div>

  <!-- Start of footer. -->
  <table width=100% cellpadding=0 cellspacing=0 border=0>
    <tr valign=top>
      <td colspan=2 height=10></td>
    </tr>
    <tr valign=top>
      <td colspan=2 bgcolor=#389613 height=3></td>
    </tr>
  </table>

  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br />

  
  </body>
</html>
