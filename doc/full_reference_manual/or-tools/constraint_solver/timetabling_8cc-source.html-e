<!-- Good morning, Mr. Phelps. -->
<html>
  <head>
    <meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
    <title>google3/constraint_solver/timetabling.cc Source File - Doxy</title>
    <link rel="shortcut icon" href="../../favicon.ico">
    <!-- Both stylesheets are supplied by Doxygen, with maybe minor tweaks from Google. -->
    <link href="../../doxygen.css" rel="stylesheet" type="text/css">
    <link href="../../tabs.css" rel="stylesheet" type="text/css">
  </head>

  <body topmargin=0 leftmargin=20 bottommargin=0 rightmargin=20 marginwidth=20 marginheight=0>
  <!-- Second part of the secret behind Doxy logo always having the word "Doxy" with the color of the day. -->
  <style>
    a.doxy_logo:hover {
      background-color: #389613
    }
  </style>

  <table width=100% cellpadding=0 cellspacing=0 border=0>
    <!-- Top horizontal line with the color of the day. -->
    <tr valign=top>
      <td colspan=3 bgcolor=#389613 height=3></td>
    </tr>

    <!-- Header row with the links at the right. -->
    <tr valign=top>
      <td colspan=3 align=right>
        <font size=-1>
          Generated on: <font color=#389613><b>Fri Apr  1 14:13:18 PDT 2011</b></font>
            for <b>custom file set</b>
        </font>
      </td>
    </tr>

    <!-- Header row with the logo and the search form. -->
    <tr valign=top>
      <!-- Logo. -->
      <td align=left width=150>
        <table width=150 height=54 cellpadding=0 cellspacing=0 border=0>
          <tr valign=top>
            <!-- First part of the secret behind Doxy logo always having the word "Doxy" with the color of the day. -->
            <td bgcolor=#389613>
              <a class="doxy_logo" href="../../index.html"><img src="../../doxy_logo.png" alt="Doxy" border=0></a>
            </td>
          </tr>
        </table>
      </td>
    </tr>

    <!-- Tiny vertical space below the form. -->
    <tr valign=top>
      <td colspan=3 height=3></td>
    </tr>
  </table>

  <!-- Header navigation row. -->
  <div class="memproto">
    <table width=100% cellpadding=0 cellspacing=0 border=0>
      <tr>
        <td align=left style="padding-left: 20px"><font size=+1><b><tt><font color=#333333>//
            <a href="../../index.html"><font color=#389613>doxy</font></a>/</font>
            <a href="../../google3/index.html">google3</a>/
            <a href="../../google3/constraint_solver/index.html">constraint_solver</a>/
            </tt></b></font>
        </td>
      </tr>
    </table>
  </div>
  <br />
    <!-- No subdirs found. -->
  <!-- End of header. -->
<!-- Generated by Doxygen 1.5.6 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.html"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.html"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="namespaces.html"><span>Namespaces</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
<h1>google3/constraint_solver/timetabling.cc</h1><a href="timetabling_8cc.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">// Copyright 2010 Google</span>
<a name="l00002"></a>00002 <span class="comment">// Licensed under the Apache License, Version 2.0 (the "License");</span>
<a name="l00003"></a>00003 <span class="comment">// you may not use this file except in compliance with the License.</span>
<a name="l00004"></a>00004 <span class="comment">// You may obtain a copy of the License at</span>
<a name="l00005"></a>00005 <span class="comment">//</span>
<a name="l00006"></a>00006 <span class="comment">//     http://www.apache.org/licenses/LICENSE-2.0</span>
<a name="l00007"></a>00007 <span class="comment">//</span>
<a name="l00008"></a>00008 <span class="comment">// Unless required by applicable law or agreed to in writing, software</span>
<a name="l00009"></a>00009 <span class="comment">// distributed under the License is distributed on an "AS IS" BASIS,</span>
<a name="l00010"></a>00010 <span class="comment">// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span>
<a name="l00011"></a>00011 <span class="comment">// See the License for the specific language governing permissions and</span>
<a name="l00012"></a>00012 <span class="comment">// limitations under the License.</span>
<a name="l00013"></a>00013 
<a name="l00014"></a>00014 <span class="preprocessor">#include "base/integral_types.h"</span>
<a name="l00015"></a>00015 <span class="preprocessor">#include "base/logging.h"</span>
<a name="l00016"></a>00016 <span class="preprocessor">#include "base/macros.h"</span>
<a name="l00017"></a>00017 <span class="preprocessor">#include "base/stringprintf.h"</span>
<a name="l00018"></a>00018 <span class="preprocessor">#include "<a class="code" href="constraint__solveri_8h.html">constraint_solver/constraint_solveri.h</a>"</span>
<a name="l00019"></a>00019 
<a name="l00020"></a>00020 <span class="keyword">namespace </span>operations_research {
<a name="l00021"></a>00021 
<a name="l00022"></a>00022 <span class="comment">// ----- interval &lt;unary relation&gt; date -----</span>
<a name="l00023"></a>00023 
<a name="l00024"></a><a class="code" href="namespaceoperations__research_1_1anonymous__namespace_02timetabling_8cc_03.html">00024</a> <span class="keyword">namespace </span>{
<a name="l00025"></a><a class="code" href="namespaceoperations__research_1_1anonymous__namespace_02timetabling_8cc_03.html#cde0bb83d938e762c05902e0681dfdda">00025</a> <span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="namespaceoperations__research_1_1anonymous__namespace_02timetabling_8cc_03.html#cde0bb83d938e762c05902e0681dfdda">kUnaryNames</a>[] = {
<a name="l00026"></a>00026   <span class="stringliteral">"ENDS_AFTER"</span>,
<a name="l00027"></a>00027   <span class="stringliteral">"ENDS_AT"</span>,
<a name="l00028"></a>00028   <span class="stringliteral">"ENDS_BEFORE"</span>,
<a name="l00029"></a>00029   <span class="stringliteral">"STARTS_AFTER"</span>,
<a name="l00030"></a>00030   <span class="stringliteral">"STARTS_AT"</span>,
<a name="l00031"></a>00031   <span class="stringliteral">"STARTS_BEFORE"</span>,
<a name="l00032"></a>00032   <span class="stringliteral">"CROSS_DATE"</span>,
<a name="l00033"></a>00033   <span class="stringliteral">"AVOID_DATE"</span>,
<a name="l00034"></a>00034 };
<a name="l00035"></a>00035 
<a name="l00036"></a><a class="code" href="namespaceoperations__research_1_1anonymous__namespace_02timetabling_8cc_03.html#69a5eb2859d186979c1dafc1c8e5a2fd">00036</a> <span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="namespaceoperations__research_1_1anonymous__namespace_02timetabling_8cc_03.html#69a5eb2859d186979c1dafc1c8e5a2fd">kBinaryNames</a>[] = {
<a name="l00037"></a>00037   <span class="stringliteral">"ENDS_AFTER_END"</span>,
<a name="l00038"></a>00038   <span class="stringliteral">"ENDS_AFTER_START"</span>,
<a name="l00039"></a>00039   <span class="stringliteral">"ENDS_AT_END"</span>,
<a name="l00040"></a>00040   <span class="stringliteral">"ENDS_AT_START"</span>,
<a name="l00041"></a>00041   <span class="stringliteral">"STARTS_AFTER_END"</span>,
<a name="l00042"></a>00042   <span class="stringliteral">"STARTS_AFTER_START"</span>,
<a name="l00043"></a>00043   <span class="stringliteral">"STARTS_AT_END"</span>,
<a name="l00044"></a>00044   <span class="stringliteral">"STARTS_AT_START"</span>
<a name="l00045"></a>00045 };
<a name="l00046"></a>00046 }  <span class="comment">// namespace</span>
<a name="l00047"></a>00047 
<a name="l00048"></a><a class="code" href="classoperations__research_1_1IntervalUnaryRelation.html">00048</a> <span class="keyword">class </span><a class="code" href="classoperations__research_1_1IntervalUnaryRelation.html" title="namespace">IntervalUnaryRelation</a> : <span class="keyword">public</span> <a class="code" href="classoperations__research_1_1Constraint.html" title="A constraint is the main modeling object.">Constraint</a> {
<a name="l00049"></a>00049  <span class="keyword">public</span>:
<a name="l00050"></a><a class="code" href="classoperations__research_1_1IntervalUnaryRelation.html#81f70cdef05a3a10f0c75870bb9a6512">00050</a>   <a class="code" href="classoperations__research_1_1IntervalUnaryRelation.html#81f70cdef05a3a10f0c75870bb9a6512">IntervalUnaryRelation</a>(<a class="code" href="classoperations__research_1_1Solver.html" title="Solver Class.">Solver</a>* <span class="keyword">const</span> s,
<a name="l00051"></a>00051                         <a class="code" href="classoperations__research_1_1IntervalVar.html" title="Interval Var.">IntervalVar</a>* <span class="keyword">const</span> t,
<a name="l00052"></a>00052                         int64 d,
<a name="l00053"></a>00053                         <a class="code" href="classoperations__research_1_1Solver.html#83e14be9c6bba9abdd1949c25c32a60d">Solver::UnaryIntervalRelation</a> rel)
<a name="l00054"></a>00054       : <a class="code" href="classoperations__research_1_1Constraint.html" title="A constraint is the main modeling object.">Constraint</a>(s), <a class="code" href="classoperations__research_1_1IntervalUnaryRelation.html#9cc511dfe590ddc9bbb637a6f605ce06">t_</a>(t), <a class="code" href="classoperations__research_1_1IntervalUnaryRelation.html#3a80ddb362ed9f502898fa830aa4d895">d_</a>(d), <a class="code" href="classoperations__research_1_1IntervalUnaryRelation.html#9c02c0667954fe723706dbace95a1fde">rel_</a>(rel) {}
<a name="l00055"></a><a class="code" href="classoperations__research_1_1IntervalUnaryRelation.html#f52816cca95a899be715adaee004667c">00055</a>   <span class="keyword">virtual</span> <a class="code" href="classoperations__research_1_1IntervalUnaryRelation.html#f52816cca95a899be715adaee004667c">~IntervalUnaryRelation</a>() {}
<a name="l00056"></a>00056 
<a name="l00057"></a>00057   <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classoperations__research_1_1IntervalUnaryRelation.html#d5e5be42e7eee94bfd80cc41a94ce6cc" title="This method is called when the constraint is processed by the solver.">Post</a>();
<a name="l00058"></a>00058   <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classoperations__research_1_1IntervalUnaryRelation.html#3b1f49aa92203fba29008d03e2768a53" title="This method performs the initial propagation of the constraint.">InitialPropagate</a>();
<a name="l00059"></a>00059 
<a name="l00060"></a><a class="code" href="classoperations__research_1_1IntervalUnaryRelation.html#3377ce9f45ee48de1603177ca0f13c05">00060</a>   <span class="keyword">virtual</span> <span class="keywordtype">string</span> <a class="code" href="classoperations__research_1_1IntervalUnaryRelation.html#3377ce9f45ee48de1603177ca0f13c05" title="Constraint class.">DebugString</a>()<span class="keyword"> const </span>{
<a name="l00061"></a>00061     <span class="keywordflow">return</span> StringPrintf(<span class="stringliteral">"(%s %s %"</span> GG_LL_FORMAT <span class="stringliteral">"d)"</span>,
<a name="l00062"></a>00062                         <a class="code" href="classoperations__research_1_1IntervalUnaryRelation.html#9cc511dfe590ddc9bbb637a6f605ce06">t_</a>-&gt;<a class="code" href="classoperations__research_1_1PropagationBaseObject.html#fc971d7ca0617641f29e7e510e98a767">DebugString</a>().c_str(), <a class="code" href="namespaceoperations__research_1_1anonymous__namespace_02timetabling_8cc_03.html#cde0bb83d938e762c05902e0681dfdda">kUnaryNames</a>[<a class="code" href="classoperations__research_1_1IntervalUnaryRelation.html#9c02c0667954fe723706dbace95a1fde">rel_</a>], <a class="code" href="classoperations__research_1_1IntervalUnaryRelation.html#3a80ddb362ed9f502898fa830aa4d895">d_</a>);
<a name="l00063"></a>00063   }
<a name="l00064"></a>00064  <span class="keyword">private</span>:
<a name="l00065"></a><a class="code" href="classoperations__research_1_1IntervalUnaryRelation.html#9cc511dfe590ddc9bbb637a6f605ce06">00065</a>   <a class="code" href="classoperations__research_1_1IntervalVar.html" title="Interval Var.">IntervalVar</a>* <span class="keyword">const</span> <a class="code" href="classoperations__research_1_1IntervalUnaryRelation.html#9cc511dfe590ddc9bbb637a6f605ce06">t_</a>;
<a name="l00066"></a><a class="code" href="classoperations__research_1_1IntervalUnaryRelation.html#3a80ddb362ed9f502898fa830aa4d895">00066</a>   <span class="keyword">const</span> int64 <a class="code" href="classoperations__research_1_1IntervalUnaryRelation.html#3a80ddb362ed9f502898fa830aa4d895">d_</a>;
<a name="l00067"></a><a class="code" href="classoperations__research_1_1IntervalUnaryRelation.html#9c02c0667954fe723706dbace95a1fde">00067</a>   <span class="keyword">const</span> <a class="code" href="classoperations__research_1_1Solver.html#83e14be9c6bba9abdd1949c25c32a60d">Solver::UnaryIntervalRelation</a> <a class="code" href="classoperations__research_1_1IntervalUnaryRelation.html#9c02c0667954fe723706dbace95a1fde">rel_</a>;
<a name="l00068"></a>00068 };
<a name="l00069"></a>00069 
<a name="l00070"></a><a class="code" href="classoperations__research_1_1IntervalUnaryRelation.html#d5e5be42e7eee94bfd80cc41a94ce6cc">00070</a> <span class="keywordtype">void</span> <a class="code" href="classoperations__research_1_1IntervalUnaryRelation.html#d5e5be42e7eee94bfd80cc41a94ce6cc" title="This method is called when the constraint is processed by the solver.">IntervalUnaryRelation::Post</a>() {
<a name="l00071"></a>00071   <span class="keywordflow">if</span> (<a class="code" href="classoperations__research_1_1IntervalUnaryRelation.html#9cc511dfe590ddc9bbb637a6f605ce06">t_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#8e2f5e7fed94b846d1f53c1ca8e9fa9f">MayBePerformed</a>()) {
<a name="l00072"></a>00072     <a class="code" href="classoperations__research_1_1Demon.html" title="A Demon is the base element of a propagation queue.">Demon</a>* d = <a class="code" href="classoperations__research_1_1PropagationBaseObject.html#2851ada2b74b1f107fb50d84043471dc">solver</a>()-&gt;<a class="code" href="classoperations__research_1_1Solver.html#4055be37b2a2507e29133673804c10d9" title="This method is a specialized case of the MakeConstraintDemon method to call the InitiatePropagate...">MakeConstraintInitialPropagateCallback</a>(<span class="keyword">this</span>);
<a name="l00073"></a>00073     <a class="code" href="classoperations__research_1_1IntervalUnaryRelation.html#9cc511dfe590ddc9bbb637a6f605ce06">t_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#031d97f0c0940a75d32debe1e7c16c43" title="Attaches a demon awakened when anything about this interval changes.">WhenAnything</a>(d);
<a name="l00074"></a>00074   }
<a name="l00075"></a>00075 }
<a name="l00076"></a>00076 
<a name="l00077"></a><a class="code" href="classoperations__research_1_1IntervalUnaryRelation.html#3b1f49aa92203fba29008d03e2768a53">00077</a> <span class="keywordtype">void</span> IntervalUnaryRelation::InitialPropagate() {
<a name="l00078"></a>00078   <span class="keywordflow">if</span> (<a class="code" href="classoperations__research_1_1IntervalUnaryRelation.html#9cc511dfe590ddc9bbb637a6f605ce06">t_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#8e2f5e7fed94b846d1f53c1ca8e9fa9f">MayBePerformed</a>()) {
<a name="l00079"></a>00079     <span class="keywordflow">switch</span> (<a class="code" href="classoperations__research_1_1IntervalUnaryRelation.html#9c02c0667954fe723706dbace95a1fde">rel_</a>) {
<a name="l00080"></a>00080       <span class="keywordflow">case</span> <a class="code" href="classoperations__research_1_1Solver.html#83e14be9c6bba9abdd1949c25c32a60dc88ebc55bfbf4a9ad97391ef97b4d6b9">Solver::ENDS_AFTER</a>:
<a name="l00081"></a>00081         <a class="code" href="classoperations__research_1_1IntervalUnaryRelation.html#9cc511dfe590ddc9bbb637a6f605ce06">t_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#ab465f88252c7db74615834bfe9c95fb">SetEndMin</a>(<a class="code" href="classoperations__research_1_1IntervalUnaryRelation.html#3a80ddb362ed9f502898fa830aa4d895">d_</a>);
<a name="l00082"></a>00082         <span class="keywordflow">break</span>;
<a name="l00083"></a>00083       <span class="keywordflow">case</span> <a class="code" href="classoperations__research_1_1Solver.html#83e14be9c6bba9abdd1949c25c32a60d294a4a33adc6833aa24adfd0d8eb44f5">Solver::ENDS_AT</a>:
<a name="l00084"></a>00084         <a class="code" href="classoperations__research_1_1IntervalUnaryRelation.html#9cc511dfe590ddc9bbb637a6f605ce06">t_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#0020fd38cc76fc9c2ad20ef40e2ab182">SetEndRange</a>(<a class="code" href="classoperations__research_1_1IntervalUnaryRelation.html#3a80ddb362ed9f502898fa830aa4d895">d_</a>, <a class="code" href="classoperations__research_1_1IntervalUnaryRelation.html#3a80ddb362ed9f502898fa830aa4d895">d_</a>);
<a name="l00085"></a>00085         <span class="keywordflow">break</span>;
<a name="l00086"></a>00086       <span class="keywordflow">case</span> <a class="code" href="classoperations__research_1_1Solver.html#83e14be9c6bba9abdd1949c25c32a60d9cc048da4ce5362c5a58866161a219bd">Solver::ENDS_BEFORE</a>:
<a name="l00087"></a>00087         <a class="code" href="classoperations__research_1_1IntervalUnaryRelation.html#9cc511dfe590ddc9bbb637a6f605ce06">t_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#dd69e5d253a42a328478f6797711abda">SetEndMax</a>(<a class="code" href="classoperations__research_1_1IntervalUnaryRelation.html#3a80ddb362ed9f502898fa830aa4d895">d_</a>);
<a name="l00088"></a>00088         <span class="keywordflow">break</span>;
<a name="l00089"></a>00089       <span class="keywordflow">case</span> <a class="code" href="classoperations__research_1_1Solver.html#83e14be9c6bba9abdd1949c25c32a60d5228c64950eccf096f9847d100100b8a">Solver::STARTS_AFTER</a>:
<a name="l00090"></a>00090         <a class="code" href="classoperations__research_1_1IntervalUnaryRelation.html#9cc511dfe590ddc9bbb637a6f605ce06">t_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#ee80fc5cd33bc3ea9d99ec892ad9d610">SetStartMin</a>(<a class="code" href="classoperations__research_1_1IntervalUnaryRelation.html#3a80ddb362ed9f502898fa830aa4d895">d_</a>);
<a name="l00091"></a>00091         <span class="keywordflow">break</span>;
<a name="l00092"></a>00092       <span class="keywordflow">case</span> <a class="code" href="classoperations__research_1_1Solver.html#83e14be9c6bba9abdd1949c25c32a60db88a6a21271bd5f34e12ada996c0bfee">Solver::STARTS_AT</a>:
<a name="l00093"></a>00093         <a class="code" href="classoperations__research_1_1IntervalUnaryRelation.html#9cc511dfe590ddc9bbb637a6f605ce06">t_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#a4372845801e7c83acbdfc7fa59d2fb2">SetStartRange</a>(<a class="code" href="classoperations__research_1_1IntervalUnaryRelation.html#3a80ddb362ed9f502898fa830aa4d895">d_</a>, <a class="code" href="classoperations__research_1_1IntervalUnaryRelation.html#3a80ddb362ed9f502898fa830aa4d895">d_</a>);
<a name="l00094"></a>00094         <span class="keywordflow">break</span>;
<a name="l00095"></a>00095 
<a name="l00096"></a>00096       <span class="keywordflow">case</span> <a class="code" href="classoperations__research_1_1Solver.html#83e14be9c6bba9abdd1949c25c32a60d21ce390ff5a9625cc07569f7629b2a32">Solver::STARTS_BEFORE</a>:
<a name="l00097"></a>00097         <a class="code" href="classoperations__research_1_1IntervalUnaryRelation.html#9cc511dfe590ddc9bbb637a6f605ce06">t_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#9b5eb53cf394f0ba2c29332b7f9d60d4">SetStartMax</a>(<a class="code" href="classoperations__research_1_1IntervalUnaryRelation.html#3a80ddb362ed9f502898fa830aa4d895">d_</a>);
<a name="l00098"></a>00098         <span class="keywordflow">break</span>;
<a name="l00099"></a>00099       <span class="keywordflow">case</span> <a class="code" href="classoperations__research_1_1Solver.html#83e14be9c6bba9abdd1949c25c32a60d79c510d187e0d3ef01df628731231ec1">Solver::CROSS_DATE</a>:
<a name="l00100"></a>00100         <a class="code" href="classoperations__research_1_1IntervalUnaryRelation.html#9cc511dfe590ddc9bbb637a6f605ce06">t_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#9b5eb53cf394f0ba2c29332b7f9d60d4">SetStartMax</a>(<a class="code" href="classoperations__research_1_1IntervalUnaryRelation.html#3a80ddb362ed9f502898fa830aa4d895">d_</a>);
<a name="l00101"></a>00101         <a class="code" href="classoperations__research_1_1IntervalUnaryRelation.html#9cc511dfe590ddc9bbb637a6f605ce06">t_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#ab465f88252c7db74615834bfe9c95fb">SetEndMin</a>(<a class="code" href="classoperations__research_1_1IntervalUnaryRelation.html#3a80ddb362ed9f502898fa830aa4d895">d_</a>);
<a name="l00102"></a>00102         <span class="keywordflow">break</span>;
<a name="l00103"></a>00103       <span class="keywordflow">case</span> <a class="code" href="classoperations__research_1_1Solver.html#83e14be9c6bba9abdd1949c25c32a60d6ea2fea7afd48b130486b2b48b5ae418">Solver::AVOID_DATE</a>:
<a name="l00104"></a>00104         <span class="keywordflow">if</span> (<a class="code" href="classoperations__research_1_1IntervalUnaryRelation.html#9cc511dfe590ddc9bbb637a6f605ce06">t_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#337babca836e2eff4e67adb0e141f82d" title="These methods query, set and watch the end position of the interval var.">EndMin</a>() &gt; <a class="code" href="classoperations__research_1_1IntervalUnaryRelation.html#3a80ddb362ed9f502898fa830aa4d895">d_</a>) {
<a name="l00105"></a>00105           <a class="code" href="classoperations__research_1_1IntervalUnaryRelation.html#9cc511dfe590ddc9bbb637a6f605ce06">t_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#ee80fc5cd33bc3ea9d99ec892ad9d610">SetStartMin</a>(<a class="code" href="classoperations__research_1_1IntervalUnaryRelation.html#3a80ddb362ed9f502898fa830aa4d895">d_</a>);
<a name="l00106"></a>00106         } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="classoperations__research_1_1IntervalUnaryRelation.html#9cc511dfe590ddc9bbb637a6f605ce06">t_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#627e898b1125c5dd6a2fb41551d2af5f">StartMax</a>() &lt; <a class="code" href="classoperations__research_1_1IntervalUnaryRelation.html#3a80ddb362ed9f502898fa830aa4d895">d_</a>) {
<a name="l00107"></a>00107           <a class="code" href="classoperations__research_1_1IntervalUnaryRelation.html#9cc511dfe590ddc9bbb637a6f605ce06">t_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#dd69e5d253a42a328478f6797711abda">SetEndMax</a>(<a class="code" href="classoperations__research_1_1IntervalUnaryRelation.html#3a80ddb362ed9f502898fa830aa4d895">d_</a>);
<a name="l00108"></a>00108         }
<a name="l00109"></a>00109         <span class="keywordflow">break</span>;
<a name="l00110"></a>00110     }
<a name="l00111"></a>00111   }
<a name="l00112"></a>00112 }
<a name="l00113"></a>00113 
<a name="l00114"></a><a class="code" href="classoperations__research_1_1Solver.html#021d45aad0aa4fa6f0f07404efd4159a">00114</a> <a class="code" href="classoperations__research_1_1Constraint.html" title="A constraint is the main modeling object.">Constraint</a>* <a class="code" href="classoperations__research_1_1Solver.html#021d45aad0aa4fa6f0f07404efd4159a" title="scheduling constraints">Solver::MakeIntervalVarRelation</a>(<a class="code" href="classoperations__research_1_1IntervalVar.html" title="Interval Var.">IntervalVar</a>* <span class="keyword">const</span> t,
<a name="l00115"></a>00115                                             <a class="code" href="classoperations__research_1_1Solver.html#83e14be9c6bba9abdd1949c25c32a60d">Solver::UnaryIntervalRelation</a> r,
<a name="l00116"></a>00116                                             int64 d) {
<a name="l00117"></a>00117   <span class="keywordflow">return</span> <a class="code" href="classoperations__research_1_1Solver.html#83ceb54f811483fd1c0444cddba8a600" title="The RevAlloc method stores the corresponding object in a stack.">RevAlloc</a>(<span class="keyword">new</span> <a class="code" href="classoperations__research_1_1IntervalUnaryRelation.html" title="namespace">IntervalUnaryRelation</a>(<span class="keyword">this</span>, t, d, r));
<a name="l00118"></a>00118 }
<a name="l00119"></a>00119 
<a name="l00120"></a>00120 <span class="comment">// ----- interval &lt;binary relation&gt; interval -----</span>
<a name="l00121"></a>00121 
<a name="l00122"></a><a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html">00122</a> <span class="keyword">class </span><a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html" title="interval &amp;lt;binary relation&amp;gt;=&amp;quot;&amp;quot;&amp;gt; interval">IntervalBinaryRelation</a> : <span class="keyword">public</span> <a class="code" href="classoperations__research_1_1Constraint.html" title="A constraint is the main modeling object.">Constraint</a> {
<a name="l00123"></a>00123  <span class="keyword">public</span>:
<a name="l00124"></a><a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#0db1ac2b001ead934b4ca9803f790b4a">00124</a>   <a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html" title="interval &amp;lt;binary relation&amp;gt;=&amp;quot;&amp;quot;&amp;gt; interval">IntervalBinaryRelation</a>(<a class="code" href="classoperations__research_1_1Solver.html" title="Solver Class.">Solver</a>* <span class="keyword">const</span> s,
<a name="l00125"></a>00125                          <a class="code" href="classoperations__research_1_1IntervalVar.html" title="Interval Var.">IntervalVar</a>* <span class="keyword">const</span> t1,
<a name="l00126"></a>00126                          <a class="code" href="classoperations__research_1_1IntervalVar.html" title="Interval Var.">IntervalVar</a>* <span class="keyword">const</span> t2,
<a name="l00127"></a>00127                          <a class="code" href="classoperations__research_1_1Solver.html#b6302978f1de57bdeafa0ffee05c92c9">Solver::BinaryIntervalRelation</a> rel)
<a name="l00128"></a>00128       : <a class="code" href="classoperations__research_1_1Constraint.html" title="A constraint is the main modeling object.">Constraint</a>(s), t1_(t1), t2_(t2), rel_(rel) {}
<a name="l00129"></a><a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#9c2bffc7d1789b41a0743446359d52c7">00129</a>   <span class="keyword">virtual</span> ~<a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html" title="interval &amp;lt;binary relation&amp;gt;=&amp;quot;&amp;quot;&amp;gt; interval">IntervalBinaryRelation</a>() {}
<a name="l00130"></a>00130 
<a name="l00131"></a>00131   <span class="keyword">virtual</span> <span class="keywordtype">void</span> Post();
<a name="l00132"></a>00132   <span class="keyword">virtual</span> <span class="keywordtype">void</span> InitialPropagate();
<a name="l00133"></a>00133 
<a name="l00134"></a><a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#275df4c19a1b19395c4d5e5758511806">00134</a>   <span class="keyword">virtual</span> <span class="keywordtype">string</span> <a class="code" href="classoperations__research_1_1Solver.html#a7a09bf2f27ccbdc1d1d386bd94e142a" title="misc debug string.">DebugString</a>()<span class="keyword"> const </span>{
<a name="l00135"></a>00135     <span class="keywordflow">return</span> StringPrintf(<span class="stringliteral">"(%s %s %s)"</span>,
<a name="l00136"></a>00136                         t1_-&gt;DebugString().c_str(),
<a name="l00137"></a>00137                         <a class="code" href="namespaceoperations__research_1_1anonymous__namespace_02timetabling_8cc_03.html#69a5eb2859d186979c1dafc1c8e5a2fd">kBinaryNames</a>[rel_],
<a name="l00138"></a>00138                         t2_-&gt;DebugString().c_str());
<a name="l00139"></a>00139   }
<a name="l00140"></a>00140  <span class="keyword">private</span>:
<a name="l00141"></a><a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#1ffc4e22cfca2fac8fbe692d0c5ad51f">00141</a>   <a class="code" href="classoperations__research_1_1IntervalVar.html" title="Interval Var.">IntervalVar</a>* <span class="keyword">const</span> t1_;
<a name="l00142"></a><a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#834a9fefb3249ade188182576f93f5e9">00142</a>   <a class="code" href="classoperations__research_1_1IntervalVar.html" title="Interval Var.">IntervalVar</a>* <span class="keyword">const</span> t2_;
<a name="l00143"></a><a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#3d6ae42bd22ffc3c30ca08a4a27cf9e4">00143</a>   <span class="keyword">const</span> <a class="code" href="classoperations__research_1_1Solver.html#b6302978f1de57bdeafa0ffee05c92c9">Solver::BinaryIntervalRelation</a> rel_;
<a name="l00144"></a>00144 };
<a name="l00145"></a>00145 
<a name="l00146"></a><a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#7ea67224d8ebe3bd282e36d173722abd">00146</a> <span class="keywordtype">void</span> <a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#7ea67224d8ebe3bd282e36d173722abd" title="This method is called when the constraint is processed by the solver.">IntervalBinaryRelation::Post</a>() {
<a name="l00147"></a>00147   <span class="keywordflow">if</span> (<a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#1ffc4e22cfca2fac8fbe692d0c5ad51f">t1_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#8e2f5e7fed94b846d1f53c1ca8e9fa9f">MayBePerformed</a>() &amp;&amp; <a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#834a9fefb3249ade188182576f93f5e9">t2_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#8e2f5e7fed94b846d1f53c1ca8e9fa9f">MayBePerformed</a>()) {
<a name="l00148"></a>00148     <a class="code" href="classoperations__research_1_1Demon.html" title="A Demon is the base element of a propagation queue.">Demon</a>* d = <a class="code" href="classoperations__research_1_1PropagationBaseObject.html#2851ada2b74b1f107fb50d84043471dc">solver</a>()-&gt;<a class="code" href="classoperations__research_1_1Solver.html#4055be37b2a2507e29133673804c10d9" title="This method is a specialized case of the MakeConstraintDemon method to call the InitiatePropagate...">MakeConstraintInitialPropagateCallback</a>(<span class="keyword">this</span>);
<a name="l00149"></a>00149     <a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#1ffc4e22cfca2fac8fbe692d0c5ad51f">t1_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#031d97f0c0940a75d32debe1e7c16c43" title="Attaches a demon awakened when anything about this interval changes.">WhenAnything</a>(d);
<a name="l00150"></a>00150     <a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#834a9fefb3249ade188182576f93f5e9">t2_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#031d97f0c0940a75d32debe1e7c16c43" title="Attaches a demon awakened when anything about this interval changes.">WhenAnything</a>(d);
<a name="l00151"></a>00151   }
<a name="l00152"></a>00152 }
<a name="l00153"></a>00153 
<a name="l00154"></a>00154 <span class="comment">// TODO(user) : make code more compact, use function pointers?</span>
<a name="l00155"></a><a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#e9d4161d708033584daf620c4157325a">00155</a> <span class="keywordtype">void</span> <a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#e9d4161d708033584daf620c4157325a">IntervalBinaryRelation::InitialPropagate</a>() {
<a name="l00156"></a>00156   <span class="keywordflow">switch</span> (<a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#3d6ae42bd22ffc3c30ca08a4a27cf9e4">rel_</a>) {
<a name="l00157"></a>00157     <span class="keywordflow">case</span> <a class="code" href="classoperations__research_1_1Solver.html#b6302978f1de57bdeafa0ffee05c92c96498f37a4ad4a85e8309080a357cb587">Solver::ENDS_AFTER_END</a>:
<a name="l00158"></a>00158       <span class="keywordflow">if</span> (<a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#834a9fefb3249ade188182576f93f5e9">t2_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#ef9101d29cf50c67521b105947f8fdcd" title="These methods query, set and watches the performed status of the interval var.">MustBePerformed</a>() &amp;&amp; <a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#1ffc4e22cfca2fac8fbe692d0c5ad51f">t1_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#8e2f5e7fed94b846d1f53c1ca8e9fa9f">MayBePerformed</a>()) {
<a name="l00159"></a>00159         <a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#1ffc4e22cfca2fac8fbe692d0c5ad51f">t1_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#ab465f88252c7db74615834bfe9c95fb">SetEndMin</a>(<a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#834a9fefb3249ade188182576f93f5e9">t2_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#337babca836e2eff4e67adb0e141f82d" title="These methods query, set and watch the end position of the interval var.">EndMin</a>());
<a name="l00160"></a>00160       }
<a name="l00161"></a>00161       <span class="keywordflow">if</span> (<a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#1ffc4e22cfca2fac8fbe692d0c5ad51f">t1_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#ef9101d29cf50c67521b105947f8fdcd" title="These methods query, set and watches the performed status of the interval var.">MustBePerformed</a>() &amp;&amp; <a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#834a9fefb3249ade188182576f93f5e9">t2_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#8e2f5e7fed94b846d1f53c1ca8e9fa9f">MayBePerformed</a>()) {
<a name="l00162"></a>00162         <a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#834a9fefb3249ade188182576f93f5e9">t2_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#dd69e5d253a42a328478f6797711abda">SetEndMax</a>(<a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#1ffc4e22cfca2fac8fbe692d0c5ad51f">t1_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#f5257fef12cc50e0551dfcddf1ce1b67">EndMax</a>());
<a name="l00163"></a>00163       }
<a name="l00164"></a>00164       <span class="keywordflow">break</span>;
<a name="l00165"></a>00165     <span class="keywordflow">case</span> <a class="code" href="classoperations__research_1_1Solver.html#b6302978f1de57bdeafa0ffee05c92c9a98eb73b7940d0127b133f170976fb0e">Solver::ENDS_AFTER_START</a>:
<a name="l00166"></a>00166       <span class="keywordflow">if</span> (<a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#834a9fefb3249ade188182576f93f5e9">t2_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#ef9101d29cf50c67521b105947f8fdcd" title="These methods query, set and watches the performed status of the interval var.">MustBePerformed</a>() &amp;&amp; <a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#1ffc4e22cfca2fac8fbe692d0c5ad51f">t1_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#8e2f5e7fed94b846d1f53c1ca8e9fa9f">MayBePerformed</a>()) {
<a name="l00167"></a>00167         <a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#1ffc4e22cfca2fac8fbe692d0c5ad51f">t1_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#ab465f88252c7db74615834bfe9c95fb">SetEndMin</a>(<a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#834a9fefb3249ade188182576f93f5e9">t2_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#cf6f5c6a44c14d6197701c450457d5bf" title="These methods query, set and watch the start position of the interval var.">StartMin</a>());
<a name="l00168"></a>00168       }
<a name="l00169"></a>00169       <span class="keywordflow">if</span> (<a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#1ffc4e22cfca2fac8fbe692d0c5ad51f">t1_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#ef9101d29cf50c67521b105947f8fdcd" title="These methods query, set and watches the performed status of the interval var.">MustBePerformed</a>() &amp;&amp; <a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#834a9fefb3249ade188182576f93f5e9">t2_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#8e2f5e7fed94b846d1f53c1ca8e9fa9f">MayBePerformed</a>()) {
<a name="l00170"></a>00170         <a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#834a9fefb3249ade188182576f93f5e9">t2_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#9b5eb53cf394f0ba2c29332b7f9d60d4">SetStartMax</a>(<a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#1ffc4e22cfca2fac8fbe692d0c5ad51f">t1_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#f5257fef12cc50e0551dfcddf1ce1b67">EndMax</a>());
<a name="l00171"></a>00171       }
<a name="l00172"></a>00172       <span class="keywordflow">break</span>;
<a name="l00173"></a>00173     <span class="keywordflow">case</span> <a class="code" href="classoperations__research_1_1Solver.html#b6302978f1de57bdeafa0ffee05c92c9baaae5f195366a4e2aeae19bb2f0ae76">Solver::ENDS_AT_END</a>:
<a name="l00174"></a>00174       <span class="keywordflow">if</span> (<a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#834a9fefb3249ade188182576f93f5e9">t2_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#ef9101d29cf50c67521b105947f8fdcd" title="These methods query, set and watches the performed status of the interval var.">MustBePerformed</a>() &amp;&amp; <a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#1ffc4e22cfca2fac8fbe692d0c5ad51f">t1_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#8e2f5e7fed94b846d1f53c1ca8e9fa9f">MayBePerformed</a>()) {
<a name="l00175"></a>00175         <a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#1ffc4e22cfca2fac8fbe692d0c5ad51f">t1_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#0020fd38cc76fc9c2ad20ef40e2ab182">SetEndRange</a>(<a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#834a9fefb3249ade188182576f93f5e9">t2_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#337babca836e2eff4e67adb0e141f82d" title="These methods query, set and watch the end position of the interval var.">EndMin</a>(), <a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#834a9fefb3249ade188182576f93f5e9">t2_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#f5257fef12cc50e0551dfcddf1ce1b67">EndMax</a>());
<a name="l00176"></a>00176       }
<a name="l00177"></a>00177       <span class="keywordflow">if</span> (<a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#1ffc4e22cfca2fac8fbe692d0c5ad51f">t1_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#ef9101d29cf50c67521b105947f8fdcd" title="These methods query, set and watches the performed status of the interval var.">MustBePerformed</a>() &amp;&amp; <a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#834a9fefb3249ade188182576f93f5e9">t2_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#8e2f5e7fed94b846d1f53c1ca8e9fa9f">MayBePerformed</a>()) {
<a name="l00178"></a>00178         <a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#834a9fefb3249ade188182576f93f5e9">t2_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#0020fd38cc76fc9c2ad20ef40e2ab182">SetEndRange</a>(<a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#1ffc4e22cfca2fac8fbe692d0c5ad51f">t1_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#337babca836e2eff4e67adb0e141f82d" title="These methods query, set and watch the end position of the interval var.">EndMin</a>(), <a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#1ffc4e22cfca2fac8fbe692d0c5ad51f">t1_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#f5257fef12cc50e0551dfcddf1ce1b67">EndMax</a>());
<a name="l00179"></a>00179       }
<a name="l00180"></a>00180       <span class="keywordflow">break</span>;
<a name="l00181"></a>00181     <span class="keywordflow">case</span> <a class="code" href="classoperations__research_1_1Solver.html#b6302978f1de57bdeafa0ffee05c92c9d02b3b6c25bdd69c2735af0dcd7c3aa8">Solver::ENDS_AT_START</a>:
<a name="l00182"></a>00182       <span class="keywordflow">if</span> (<a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#834a9fefb3249ade188182576f93f5e9">t2_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#ef9101d29cf50c67521b105947f8fdcd" title="These methods query, set and watches the performed status of the interval var.">MustBePerformed</a>() &amp;&amp; <a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#1ffc4e22cfca2fac8fbe692d0c5ad51f">t1_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#8e2f5e7fed94b846d1f53c1ca8e9fa9f">MayBePerformed</a>()) {
<a name="l00183"></a>00183         <a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#1ffc4e22cfca2fac8fbe692d0c5ad51f">t1_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#0020fd38cc76fc9c2ad20ef40e2ab182">SetEndRange</a>(<a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#834a9fefb3249ade188182576f93f5e9">t2_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#cf6f5c6a44c14d6197701c450457d5bf" title="These methods query, set and watch the start position of the interval var.">StartMin</a>(), <a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#834a9fefb3249ade188182576f93f5e9">t2_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#627e898b1125c5dd6a2fb41551d2af5f">StartMax</a>());
<a name="l00184"></a>00184       }
<a name="l00185"></a>00185       <span class="keywordflow">if</span> (<a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#1ffc4e22cfca2fac8fbe692d0c5ad51f">t1_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#ef9101d29cf50c67521b105947f8fdcd" title="These methods query, set and watches the performed status of the interval var.">MustBePerformed</a>() &amp;&amp; <a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#834a9fefb3249ade188182576f93f5e9">t2_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#8e2f5e7fed94b846d1f53c1ca8e9fa9f">MayBePerformed</a>()) {
<a name="l00186"></a>00186         <a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#834a9fefb3249ade188182576f93f5e9">t2_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#a4372845801e7c83acbdfc7fa59d2fb2">SetStartRange</a>(<a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#1ffc4e22cfca2fac8fbe692d0c5ad51f">t1_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#337babca836e2eff4e67adb0e141f82d" title="These methods query, set and watch the end position of the interval var.">EndMin</a>(), <a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#1ffc4e22cfca2fac8fbe692d0c5ad51f">t1_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#f5257fef12cc50e0551dfcddf1ce1b67">EndMax</a>());
<a name="l00187"></a>00187       }
<a name="l00188"></a>00188       <span class="keywordflow">break</span>;
<a name="l00189"></a>00189     <span class="keywordflow">case</span> <a class="code" href="classoperations__research_1_1Solver.html#b6302978f1de57bdeafa0ffee05c92c9d5a5ac7b999f4c37d11206e531125988">Solver::STARTS_AFTER_END</a>:
<a name="l00190"></a>00190       <span class="keywordflow">if</span> (<a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#834a9fefb3249ade188182576f93f5e9">t2_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#ef9101d29cf50c67521b105947f8fdcd" title="These methods query, set and watches the performed status of the interval var.">MustBePerformed</a>() &amp;&amp; <a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#1ffc4e22cfca2fac8fbe692d0c5ad51f">t1_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#8e2f5e7fed94b846d1f53c1ca8e9fa9f">MayBePerformed</a>()) {
<a name="l00191"></a>00191         <a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#1ffc4e22cfca2fac8fbe692d0c5ad51f">t1_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#ee80fc5cd33bc3ea9d99ec892ad9d610">SetStartMin</a>(<a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#834a9fefb3249ade188182576f93f5e9">t2_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#337babca836e2eff4e67adb0e141f82d" title="These methods query, set and watch the end position of the interval var.">EndMin</a>());
<a name="l00192"></a>00192       }
<a name="l00193"></a>00193       <span class="keywordflow">if</span> (<a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#1ffc4e22cfca2fac8fbe692d0c5ad51f">t1_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#ef9101d29cf50c67521b105947f8fdcd" title="These methods query, set and watches the performed status of the interval var.">MustBePerformed</a>() &amp;&amp; <a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#834a9fefb3249ade188182576f93f5e9">t2_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#8e2f5e7fed94b846d1f53c1ca8e9fa9f">MayBePerformed</a>()) {
<a name="l00194"></a>00194         <a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#834a9fefb3249ade188182576f93f5e9">t2_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#dd69e5d253a42a328478f6797711abda">SetEndMax</a>(<a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#1ffc4e22cfca2fac8fbe692d0c5ad51f">t1_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#627e898b1125c5dd6a2fb41551d2af5f">StartMax</a>());
<a name="l00195"></a>00195       }
<a name="l00196"></a>00196       <span class="keywordflow">break</span>;
<a name="l00197"></a>00197     <span class="keywordflow">case</span> <a class="code" href="classoperations__research_1_1Solver.html#b6302978f1de57bdeafa0ffee05c92c9e80d18ceaf9ae55ad39559b85b745628">Solver::STARTS_AFTER_START</a>:
<a name="l00198"></a>00198       <span class="keywordflow">if</span> (<a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#834a9fefb3249ade188182576f93f5e9">t2_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#ef9101d29cf50c67521b105947f8fdcd" title="These methods query, set and watches the performed status of the interval var.">MustBePerformed</a>() &amp;&amp; <a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#1ffc4e22cfca2fac8fbe692d0c5ad51f">t1_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#8e2f5e7fed94b846d1f53c1ca8e9fa9f">MayBePerformed</a>()) {
<a name="l00199"></a>00199         <a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#1ffc4e22cfca2fac8fbe692d0c5ad51f">t1_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#ee80fc5cd33bc3ea9d99ec892ad9d610">SetStartMin</a>(<a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#834a9fefb3249ade188182576f93f5e9">t2_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#cf6f5c6a44c14d6197701c450457d5bf" title="These methods query, set and watch the start position of the interval var.">StartMin</a>());
<a name="l00200"></a>00200       }
<a name="l00201"></a>00201       <span class="keywordflow">if</span> (<a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#1ffc4e22cfca2fac8fbe692d0c5ad51f">t1_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#ef9101d29cf50c67521b105947f8fdcd" title="These methods query, set and watches the performed status of the interval var.">MustBePerformed</a>() &amp;&amp; <a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#834a9fefb3249ade188182576f93f5e9">t2_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#8e2f5e7fed94b846d1f53c1ca8e9fa9f">MayBePerformed</a>()) {
<a name="l00202"></a>00202         <a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#834a9fefb3249ade188182576f93f5e9">t2_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#dd69e5d253a42a328478f6797711abda">SetEndMax</a>(<a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#1ffc4e22cfca2fac8fbe692d0c5ad51f">t1_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#627e898b1125c5dd6a2fb41551d2af5f">StartMax</a>());
<a name="l00203"></a>00203       }
<a name="l00204"></a>00204       <span class="keywordflow">break</span>;
<a name="l00205"></a>00205     <span class="keywordflow">case</span> <a class="code" href="classoperations__research_1_1Solver.html#b6302978f1de57bdeafa0ffee05c92c9ea2183489b4cb88c3e43e90e8f96eb61">Solver::STARTS_AT_END</a>:
<a name="l00206"></a>00206       <span class="keywordflow">if</span> (<a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#834a9fefb3249ade188182576f93f5e9">t2_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#ef9101d29cf50c67521b105947f8fdcd" title="These methods query, set and watches the performed status of the interval var.">MustBePerformed</a>() &amp;&amp; <a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#1ffc4e22cfca2fac8fbe692d0c5ad51f">t1_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#8e2f5e7fed94b846d1f53c1ca8e9fa9f">MayBePerformed</a>()) {
<a name="l00207"></a>00207         <a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#1ffc4e22cfca2fac8fbe692d0c5ad51f">t1_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#a4372845801e7c83acbdfc7fa59d2fb2">SetStartRange</a>(<a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#834a9fefb3249ade188182576f93f5e9">t2_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#337babca836e2eff4e67adb0e141f82d" title="These methods query, set and watch the end position of the interval var.">EndMin</a>(), <a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#834a9fefb3249ade188182576f93f5e9">t2_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#f5257fef12cc50e0551dfcddf1ce1b67">EndMax</a>());
<a name="l00208"></a>00208       }
<a name="l00209"></a>00209       <span class="keywordflow">if</span> (<a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#1ffc4e22cfca2fac8fbe692d0c5ad51f">t1_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#ef9101d29cf50c67521b105947f8fdcd" title="These methods query, set and watches the performed status of the interval var.">MustBePerformed</a>() &amp;&amp; <a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#834a9fefb3249ade188182576f93f5e9">t2_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#8e2f5e7fed94b846d1f53c1ca8e9fa9f">MayBePerformed</a>()) {
<a name="l00210"></a>00210         <a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#834a9fefb3249ade188182576f93f5e9">t2_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#0020fd38cc76fc9c2ad20ef40e2ab182">SetEndRange</a>(<a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#1ffc4e22cfca2fac8fbe692d0c5ad51f">t1_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#cf6f5c6a44c14d6197701c450457d5bf" title="These methods query, set and watch the start position of the interval var.">StartMin</a>(), <a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#1ffc4e22cfca2fac8fbe692d0c5ad51f">t1_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#627e898b1125c5dd6a2fb41551d2af5f">StartMax</a>());
<a name="l00211"></a>00211       }
<a name="l00212"></a>00212       <span class="keywordflow">break</span>;
<a name="l00213"></a>00213     <span class="keywordflow">case</span> <a class="code" href="classoperations__research_1_1Solver.html#b6302978f1de57bdeafa0ffee05c92c95fbb5a6ea281c2affbcd2fc79c1d7c63">Solver::STARTS_AT_START</a>:
<a name="l00214"></a>00214       <span class="keywordflow">if</span> (<a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#834a9fefb3249ade188182576f93f5e9">t2_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#ef9101d29cf50c67521b105947f8fdcd" title="These methods query, set and watches the performed status of the interval var.">MustBePerformed</a>() &amp;&amp; <a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#1ffc4e22cfca2fac8fbe692d0c5ad51f">t1_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#8e2f5e7fed94b846d1f53c1ca8e9fa9f">MayBePerformed</a>()) {
<a name="l00215"></a>00215         <a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#1ffc4e22cfca2fac8fbe692d0c5ad51f">t1_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#a4372845801e7c83acbdfc7fa59d2fb2">SetStartRange</a>(<a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#834a9fefb3249ade188182576f93f5e9">t2_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#cf6f5c6a44c14d6197701c450457d5bf" title="These methods query, set and watch the start position of the interval var.">StartMin</a>(), <a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#834a9fefb3249ade188182576f93f5e9">t2_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#627e898b1125c5dd6a2fb41551d2af5f">StartMax</a>());
<a name="l00216"></a>00216       }
<a name="l00217"></a>00217       <span class="keywordflow">if</span> (<a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#1ffc4e22cfca2fac8fbe692d0c5ad51f">t1_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#ef9101d29cf50c67521b105947f8fdcd" title="These methods query, set and watches the performed status of the interval var.">MustBePerformed</a>() &amp;&amp; <a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#834a9fefb3249ade188182576f93f5e9">t2_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#8e2f5e7fed94b846d1f53c1ca8e9fa9f">MayBePerformed</a>()) {
<a name="l00218"></a>00218         <a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#834a9fefb3249ade188182576f93f5e9">t2_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#a4372845801e7c83acbdfc7fa59d2fb2">SetStartRange</a>(<a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#1ffc4e22cfca2fac8fbe692d0c5ad51f">t1_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#cf6f5c6a44c14d6197701c450457d5bf" title="These methods query, set and watch the start position of the interval var.">StartMin</a>(), <a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html#1ffc4e22cfca2fac8fbe692d0c5ad51f">t1_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#627e898b1125c5dd6a2fb41551d2af5f">StartMax</a>());
<a name="l00219"></a>00219       }
<a name="l00220"></a>00220       <span class="keywordflow">break</span>;
<a name="l00221"></a>00221   }
<a name="l00222"></a>00222 }
<a name="l00223"></a>00223 
<a name="l00224"></a><a class="code" href="classoperations__research_1_1Solver.html#867272e3daf29d4ad94c8e0043ace85a">00224</a> <a class="code" href="classoperations__research_1_1Constraint.html" title="A constraint is the main modeling object.">Constraint</a>* <a class="code" href="classoperations__research_1_1Solver.html#021d45aad0aa4fa6f0f07404efd4159a" title="scheduling constraints">Solver::MakeIntervalVarRelation</a>(<a class="code" href="classoperations__research_1_1IntervalVar.html" title="Interval Var.">IntervalVar</a>* <span class="keyword">const</span> t1,
<a name="l00225"></a>00225                                             <a class="code" href="classoperations__research_1_1Solver.html#b6302978f1de57bdeafa0ffee05c92c9">Solver::BinaryIntervalRelation</a> r,
<a name="l00226"></a>00226                                             <a class="code" href="classoperations__research_1_1IntervalVar.html" title="Interval Var.">IntervalVar</a>* <span class="keyword">const</span> t2) {
<a name="l00227"></a>00227   <span class="keywordflow">return</span> <a class="code" href="classoperations__research_1_1Solver.html#83ceb54f811483fd1c0444cddba8a600" title="The RevAlloc method stores the corresponding object in a stack.">RevAlloc</a>(<span class="keyword">new</span> <a class="code" href="classoperations__research_1_1IntervalBinaryRelation.html" title="interval &amp;lt;binary relation&amp;gt;=&amp;quot;&amp;quot;&amp;gt; interval">IntervalBinaryRelation</a>(<span class="keyword">this</span>, t1, t2, r));
<a name="l00228"></a>00228 }
<a name="l00229"></a>00229 
<a name="l00230"></a>00230 <span class="comment">// ----- activity a before activity b or activity b before activity a -----</span>
<a name="l00231"></a>00231 
<a name="l00232"></a><a class="code" href="classoperations__research_1_1TemporalDisjunction.html">00232</a> <span class="keyword">class </span><a class="code" href="classoperations__research_1_1TemporalDisjunction.html" title="activity a before activity b or activity b before activity a">TemporalDisjunction</a> : <span class="keyword">public</span> <a class="code" href="classoperations__research_1_1Constraint.html" title="A constraint is the main modeling object.">Constraint</a> {
<a name="l00233"></a>00233  <span class="keyword">public</span>:
<a name="l00234"></a><a class="code" href="classoperations__research_1_1TemporalDisjunction.html#61fa7029a8de694ce651daf24657fb5adfcd85a04d0c3a2e3f7759739f518798">00234</a>   <span class="keyword">enum</span> <a class="code" href="classoperations__research_1_1TemporalDisjunction.html#61fa7029a8de694ce651daf24657fb5a">State</a> { ONE_BEFORE_TWO, TWO_BEFORE_ONE, UNDECIDED };
<a name="l00235"></a>00235 
<a name="l00236"></a><a class="code" href="classoperations__research_1_1TemporalDisjunction.html#c81e3933eab31f6d051e0cff62517ea3">00236</a>   <a class="code" href="classoperations__research_1_1TemporalDisjunction.html" title="activity a before activity b or activity b before activity a">TemporalDisjunction</a>(<a class="code" href="classoperations__research_1_1Solver.html" title="Solver Class.">Solver</a>* <span class="keyword">const</span> s,
<a name="l00237"></a>00237                       <a class="code" href="classoperations__research_1_1IntervalVar.html" title="Interval Var.">IntervalVar</a>* <span class="keyword">const</span> t1,
<a name="l00238"></a>00238                       <a class="code" href="classoperations__research_1_1IntervalVar.html" title="Interval Var.">IntervalVar</a>* <span class="keyword">const</span> t2,
<a name="l00239"></a>00239                       <a class="code" href="classoperations__research_1_1IntVar.html" title="The class IntVar is a subset of IntExpr.">IntVar</a>* <span class="keyword">const</span> alt)
<a name="l00240"></a>00240       : <a class="code" href="classoperations__research_1_1Constraint.html" title="A constraint is the main modeling object.">Constraint</a>(s), t1_(t1), t2_(t2), alt_(alt), <a class="code" href="classoperations__research_1_1Solver.html#f7458c69402c50603880a24a069decc0">state_</a>(UNDECIDED) {}
<a name="l00241"></a><a class="code" href="classoperations__research_1_1TemporalDisjunction.html#8e67d6992ca25b4dc09026954d2ce248">00241</a>   <span class="keyword">virtual</span> ~<a class="code" href="classoperations__research_1_1TemporalDisjunction.html" title="activity a before activity b or activity b before activity a">TemporalDisjunction</a>() {}
<a name="l00242"></a>00242 
<a name="l00243"></a>00243   <span class="keyword">virtual</span> <span class="keywordtype">void</span> Post();
<a name="l00244"></a>00244   <span class="keyword">virtual</span> <span class="keywordtype">void</span> InitialPropagate();
<a name="l00245"></a>00245   <span class="keyword">virtual</span> <span class="keywordtype">string</span> <a class="code" href="classoperations__research_1_1Solver.html#a7a09bf2f27ccbdc1d1d386bd94e142a" title="misc debug string.">DebugString</a>() <span class="keyword">const</span>;
<a name="l00246"></a>00246 
<a name="l00247"></a>00247   <span class="keywordtype">void</span> RangeDemon1();
<a name="l00248"></a>00248   <span class="keywordtype">void</span> RangeDemon2();
<a name="l00249"></a>00249   <span class="keywordtype">void</span> RangeAlt();
<a name="l00250"></a>00250   <span class="keywordtype">void</span> Decide(State s);
<a name="l00251"></a>00251   <span class="keywordtype">void</span> TryToDecide();
<a name="l00252"></a>00252  <span class="keyword">private</span>:
<a name="l00253"></a><a class="code" href="classoperations__research_1_1TemporalDisjunction.html#bba84dcc8de7b9e9d16c55eb8ce32251">00253</a>   <a class="code" href="classoperations__research_1_1IntervalVar.html" title="Interval Var.">IntervalVar</a>* <span class="keyword">const</span> t1_;
<a name="l00254"></a><a class="code" href="classoperations__research_1_1TemporalDisjunction.html#801ae798f65cadeb288e862a134e1a96">00254</a>   <a class="code" href="classoperations__research_1_1IntervalVar.html" title="Interval Var.">IntervalVar</a>* <span class="keyword">const</span> t2_;
<a name="l00255"></a><a class="code" href="classoperations__research_1_1TemporalDisjunction.html#1a87e9e95bbc5237711503fbd4fa80ce">00255</a>   <a class="code" href="classoperations__research_1_1IntVar.html" title="The class IntVar is a subset of IntExpr.">IntVar</a>* <span class="keyword">const</span> alt_;
<a name="l00256"></a><a class="code" href="classoperations__research_1_1TemporalDisjunction.html#066a964d871db05644f8445b6b7f6978">00256</a>   <a class="code" href="classoperations__research_1_1TemporalDisjunction.html#61fa7029a8de694ce651daf24657fb5a">State</a> <a class="code" href="classoperations__research_1_1Solver.html#f7458c69402c50603880a24a069decc0">state_</a>;
<a name="l00257"></a>00257 };
<a name="l00258"></a>00258 
<a name="l00259"></a><a class="code" href="classoperations__research_1_1TemporalDisjunction.html#9f6443ee9361921bfd6fbd3c6af9b9f2">00259</a> <span class="keywordtype">void</span> <a class="code" href="classoperations__research_1_1TemporalDisjunction.html#9f6443ee9361921bfd6fbd3c6af9b9f2" title="This method is called when the constraint is processed by the solver.">TemporalDisjunction::Post</a>() {
<a name="l00260"></a>00260   <a class="code" href="classoperations__research_1_1Solver.html" title="Solver Class.">Solver</a>* <span class="keyword">const</span> s = <a class="code" href="classoperations__research_1_1PropagationBaseObject.html#2851ada2b74b1f107fb50d84043471dc">solver</a>();
<a name="l00261"></a>00261   <a class="code" href="classoperations__research_1_1Demon.html" title="A Demon is the base element of a propagation queue.">Demon</a>* d = <a class="code" href="namespaceoperations__research.html#50b3d41d8dbf72bb2ad22235a9e1f53e">MakeConstraintDemon0</a>(s,
<a name="l00262"></a>00262                                   <span class="keyword">this</span>,
<a name="l00263"></a>00263                                   &amp;<a class="code" href="classoperations__research_1_1TemporalDisjunction.html#2b47468975cb5066222a8cf518b04618">TemporalDisjunction::RangeDemon1</a>,
<a name="l00264"></a>00264                                   <span class="stringliteral">"RangeDemon1"</span>);
<a name="l00265"></a>00265   <a class="code" href="classoperations__research_1_1TemporalDisjunction.html#bba84dcc8de7b9e9d16c55eb8ce32251">t1_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#031d97f0c0940a75d32debe1e7c16c43" title="Attaches a demon awakened when anything about this interval changes.">WhenAnything</a>(d);
<a name="l00266"></a>00266   d = <a class="code" href="namespaceoperations__research.html#50b3d41d8dbf72bb2ad22235a9e1f53e">MakeConstraintDemon0</a>(s,
<a name="l00267"></a>00267                            <span class="keyword">this</span>,
<a name="l00268"></a>00268                            &amp;<a class="code" href="classoperations__research_1_1TemporalDisjunction.html#d74fa91cf22b6dde5300914ce338a33a">TemporalDisjunction::RangeDemon2</a>,
<a name="l00269"></a>00269                            <span class="stringliteral">"RangeDemon2"</span>);
<a name="l00270"></a>00270   <a class="code" href="classoperations__research_1_1TemporalDisjunction.html#801ae798f65cadeb288e862a134e1a96">t2_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#031d97f0c0940a75d32debe1e7c16c43" title="Attaches a demon awakened when anything about this interval changes.">WhenAnything</a>(d);
<a name="l00271"></a>00271   <span class="keywordflow">if</span> (<a class="code" href="classoperations__research_1_1TemporalDisjunction.html#1a87e9e95bbc5237711503fbd4fa80ce">alt_</a> != NULL) {
<a name="l00272"></a>00272     d = <a class="code" href="namespaceoperations__research.html#50b3d41d8dbf72bb2ad22235a9e1f53e">MakeConstraintDemon0</a>(s,
<a name="l00273"></a>00273                              <span class="keyword">this</span>,
<a name="l00274"></a>00274                              &amp;<a class="code" href="classoperations__research_1_1TemporalDisjunction.html#4a2cde8d7a3397d6bdc92dfd5591ba28">TemporalDisjunction::RangeAlt</a>,
<a name="l00275"></a>00275                              <span class="stringliteral">"RangeAlt"</span>);
<a name="l00276"></a>00276     <a class="code" href="classoperations__research_1_1TemporalDisjunction.html#1a87e9e95bbc5237711503fbd4fa80ce">alt_</a>-&gt;<a class="code" href="classoperations__research_1_1IntExpr.html#845a3c3c71323504f6b59f9c0ea46b08" title="Attach a demon that will watch the min or the max of the expression.">WhenRange</a>(d);
<a name="l00277"></a>00277   }
<a name="l00278"></a>00278 }
<a name="l00279"></a>00279 
<a name="l00280"></a><a class="code" href="classoperations__research_1_1TemporalDisjunction.html#1ff4ff4a06a8daeb8c92cf8b41989d6a">00280</a> <span class="keywordtype">void</span> <a class="code" href="classoperations__research_1_1TemporalDisjunction.html#1ff4ff4a06a8daeb8c92cf8b41989d6a" title="This method performs the initial propagation of the constraint.">TemporalDisjunction::InitialPropagate</a>() {
<a name="l00281"></a>00281   <span class="keywordflow">if</span> (<a class="code" href="classoperations__research_1_1TemporalDisjunction.html#1a87e9e95bbc5237711503fbd4fa80ce">alt_</a> != NULL) {
<a name="l00282"></a>00282     <a class="code" href="classoperations__research_1_1TemporalDisjunction.html#1a87e9e95bbc5237711503fbd4fa80ce">alt_</a>-&gt;<a class="code" href="classoperations__research_1_1IntExpr.html#153843dc05670b540a8e83dba2043eb0" title="This method sets both the min and the max of the expression.">SetRange</a>(0, 1);
<a name="l00283"></a>00283   }
<a name="l00284"></a>00284   <span class="keywordflow">if</span> (<a class="code" href="classoperations__research_1_1TemporalDisjunction.html#1a87e9e95bbc5237711503fbd4fa80ce">alt_</a> != NULL &amp;&amp; <a class="code" href="classoperations__research_1_1TemporalDisjunction.html#1a87e9e95bbc5237711503fbd4fa80ce">alt_</a>-&gt;<a class="code" href="classoperations__research_1_1IntExpr.html#b2eb094c29f2bdbce94d82a84b16e888" title="Returns true if the min and the max of the expression are equal.">Bound</a>()) {
<a name="l00285"></a>00285     <a class="code" href="classoperations__research_1_1TemporalDisjunction.html#4a2cde8d7a3397d6bdc92dfd5591ba28">RangeAlt</a>();
<a name="l00286"></a>00286   } <span class="keywordflow">else</span> {
<a name="l00287"></a>00287     <a class="code" href="classoperations__research_1_1TemporalDisjunction.html#2b47468975cb5066222a8cf518b04618">RangeDemon1</a>();
<a name="l00288"></a>00288     <a class="code" href="classoperations__research_1_1TemporalDisjunction.html#d74fa91cf22b6dde5300914ce338a33a">RangeDemon2</a>();
<a name="l00289"></a>00289   }
<a name="l00290"></a>00290 }
<a name="l00291"></a>00291 
<a name="l00292"></a><a class="code" href="classoperations__research_1_1TemporalDisjunction.html#4ecb8635519036b5765bd8c42bdfba24">00292</a> <span class="keywordtype">string</span> <a class="code" href="classoperations__research_1_1TemporalDisjunction.html#4ecb8635519036b5765bd8c42bdfba24" title="Constraint class.">TemporalDisjunction::DebugString</a>()<span class="keyword"> const </span>{
<a name="l00293"></a>00293   <span class="keywordtype">string</span> out;
<a name="l00294"></a>00294   SStringPrintf(&amp;out, <span class="stringliteral">"TemporalDisjunction(%s, %s"</span>,
<a name="l00295"></a>00295                 <a class="code" href="classoperations__research_1_1TemporalDisjunction.html#bba84dcc8de7b9e9d16c55eb8ce32251">t1_</a>-&gt;<a class="code" href="classoperations__research_1_1PropagationBaseObject.html#fc971d7ca0617641f29e7e510e98a767">DebugString</a>().c_str(), <a class="code" href="classoperations__research_1_1TemporalDisjunction.html#801ae798f65cadeb288e862a134e1a96">t2_</a>-&gt;<a class="code" href="classoperations__research_1_1PropagationBaseObject.html#fc971d7ca0617641f29e7e510e98a767">DebugString</a>().c_str());
<a name="l00296"></a>00296   <span class="keywordflow">if</span> (<a class="code" href="classoperations__research_1_1TemporalDisjunction.html#1a87e9e95bbc5237711503fbd4fa80ce">alt_</a> != NULL) {
<a name="l00297"></a>00297     StringAppendF(&amp;out, <span class="stringliteral">" =&gt; %s"</span>, <a class="code" href="classoperations__research_1_1TemporalDisjunction.html#1a87e9e95bbc5237711503fbd4fa80ce">alt_</a>-&gt;<a class="code" href="classoperations__research_1_1PropagationBaseObject.html#fc971d7ca0617641f29e7e510e98a767">DebugString</a>().c_str());
<a name="l00298"></a>00298   }
<a name="l00299"></a>00299   out += <span class="stringliteral">") "</span>;
<a name="l00300"></a>00300   <span class="keywordflow">return</span> out;
<a name="l00301"></a>00301 }
<a name="l00302"></a>00302 
<a name="l00303"></a><a class="code" href="classoperations__research_1_1TemporalDisjunction.html#74d2ba023334459d1214cae103a846a3">00303</a> <span class="keywordtype">void</span> <a class="code" href="classoperations__research_1_1TemporalDisjunction.html#74d2ba023334459d1214cae103a846a3">TemporalDisjunction::TryToDecide</a>() {
<a name="l00304"></a>00304   DCHECK_EQ(<a class="code" href="classoperations__research_1_1TemporalDisjunction.html#61fa7029a8de694ce651daf24657fb5adfcd85a04d0c3a2e3f7759739f518798">UNDECIDED</a>, <a class="code" href="classoperations__research_1_1TemporalDisjunction.html#066a964d871db05644f8445b6b7f6978">state_</a>);
<a name="l00305"></a>00305   <span class="keywordflow">if</span> (<a class="code" href="classoperations__research_1_1TemporalDisjunction.html#bba84dcc8de7b9e9d16c55eb8ce32251">t1_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#8e2f5e7fed94b846d1f53c1ca8e9fa9f">MayBePerformed</a>() &amp;&amp; <a class="code" href="classoperations__research_1_1TemporalDisjunction.html#801ae798f65cadeb288e862a134e1a96">t2_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#8e2f5e7fed94b846d1f53c1ca8e9fa9f">MayBePerformed</a>() &amp;&amp;
<a name="l00306"></a>00306       (<a class="code" href="classoperations__research_1_1TemporalDisjunction.html#bba84dcc8de7b9e9d16c55eb8ce32251">t1_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#ef9101d29cf50c67521b105947f8fdcd" title="These methods query, set and watches the performed status of the interval var.">MustBePerformed</a>() || <a class="code" href="classoperations__research_1_1TemporalDisjunction.html#801ae798f65cadeb288e862a134e1a96">t2_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#ef9101d29cf50c67521b105947f8fdcd" title="These methods query, set and watches the performed status of the interval var.">MustBePerformed</a>())) {
<a name="l00307"></a>00307     <span class="keywordflow">if</span> (<a class="code" href="classoperations__research_1_1TemporalDisjunction.html#bba84dcc8de7b9e9d16c55eb8ce32251">t1_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#337babca836e2eff4e67adb0e141f82d" title="These methods query, set and watch the end position of the interval var.">EndMin</a>() &gt; <a class="code" href="classoperations__research_1_1TemporalDisjunction.html#801ae798f65cadeb288e862a134e1a96">t2_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#627e898b1125c5dd6a2fb41551d2af5f">StartMax</a>()) {
<a name="l00308"></a>00308       <a class="code" href="classoperations__research_1_1TemporalDisjunction.html#95ab47e4bde568475c8ea559ac27b552">Decide</a>(<a class="code" href="classoperations__research_1_1TemporalDisjunction.html#61fa7029a8de694ce651daf24657fb5ab85f15825f92c407ba604eb20248064d">TWO_BEFORE_ONE</a>);
<a name="l00309"></a>00309     } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="classoperations__research_1_1TemporalDisjunction.html#801ae798f65cadeb288e862a134e1a96">t2_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#337babca836e2eff4e67adb0e141f82d" title="These methods query, set and watch the end position of the interval var.">EndMin</a>() &gt; <a class="code" href="classoperations__research_1_1TemporalDisjunction.html#bba84dcc8de7b9e9d16c55eb8ce32251">t1_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#627e898b1125c5dd6a2fb41551d2af5f">StartMax</a>()) {
<a name="l00310"></a>00310       <a class="code" href="classoperations__research_1_1TemporalDisjunction.html#95ab47e4bde568475c8ea559ac27b552">Decide</a>(<a class="code" href="classoperations__research_1_1TemporalDisjunction.html#61fa7029a8de694ce651daf24657fb5a541cf9b6cb9aeddb0d12d29c6e85a541">ONE_BEFORE_TWO</a>);
<a name="l00311"></a>00311     }
<a name="l00312"></a>00312   }
<a name="l00313"></a>00313 }
<a name="l00314"></a>00314 
<a name="l00315"></a><a class="code" href="classoperations__research_1_1TemporalDisjunction.html#2b47468975cb5066222a8cf518b04618">00315</a> <span class="keywordtype">void</span> <a class="code" href="classoperations__research_1_1TemporalDisjunction.html#2b47468975cb5066222a8cf518b04618">TemporalDisjunction::RangeDemon1</a>() {
<a name="l00316"></a>00316   <span class="keywordflow">switch</span> (<a class="code" href="classoperations__research_1_1TemporalDisjunction.html#066a964d871db05644f8445b6b7f6978">state_</a>) {
<a name="l00317"></a>00317     <span class="keywordflow">case</span> <a class="code" href="classoperations__research_1_1TemporalDisjunction.html#61fa7029a8de694ce651daf24657fb5a541cf9b6cb9aeddb0d12d29c6e85a541">ONE_BEFORE_TWO</a>: {
<a name="l00318"></a>00318       <span class="keywordflow">if</span> (<a class="code" href="classoperations__research_1_1TemporalDisjunction.html#bba84dcc8de7b9e9d16c55eb8ce32251">t1_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#ef9101d29cf50c67521b105947f8fdcd" title="These methods query, set and watches the performed status of the interval var.">MustBePerformed</a>() &amp;&amp; <a class="code" href="classoperations__research_1_1TemporalDisjunction.html#801ae798f65cadeb288e862a134e1a96">t2_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#8e2f5e7fed94b846d1f53c1ca8e9fa9f">MayBePerformed</a>()) {
<a name="l00319"></a>00319         <a class="code" href="classoperations__research_1_1TemporalDisjunction.html#801ae798f65cadeb288e862a134e1a96">t2_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#ee80fc5cd33bc3ea9d99ec892ad9d610">SetStartMin</a>(<a class="code" href="classoperations__research_1_1TemporalDisjunction.html#bba84dcc8de7b9e9d16c55eb8ce32251">t1_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#337babca836e2eff4e67adb0e141f82d" title="These methods query, set and watch the end position of the interval var.">EndMin</a>());
<a name="l00320"></a>00320       }
<a name="l00321"></a>00321       <span class="keywordflow">break</span>;
<a name="l00322"></a>00322     }
<a name="l00323"></a>00323     <span class="keywordflow">case</span> <a class="code" href="classoperations__research_1_1TemporalDisjunction.html#61fa7029a8de694ce651daf24657fb5ab85f15825f92c407ba604eb20248064d">TWO_BEFORE_ONE</a>: {
<a name="l00324"></a>00324       <span class="keywordflow">if</span> (<a class="code" href="classoperations__research_1_1TemporalDisjunction.html#bba84dcc8de7b9e9d16c55eb8ce32251">t1_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#ef9101d29cf50c67521b105947f8fdcd" title="These methods query, set and watches the performed status of the interval var.">MustBePerformed</a>() &amp;&amp; <a class="code" href="classoperations__research_1_1TemporalDisjunction.html#801ae798f65cadeb288e862a134e1a96">t2_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#8e2f5e7fed94b846d1f53c1ca8e9fa9f">MayBePerformed</a>()) {
<a name="l00325"></a>00325         <a class="code" href="classoperations__research_1_1TemporalDisjunction.html#801ae798f65cadeb288e862a134e1a96">t2_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#dd69e5d253a42a328478f6797711abda">SetEndMax</a>(<a class="code" href="classoperations__research_1_1TemporalDisjunction.html#bba84dcc8de7b9e9d16c55eb8ce32251">t1_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#627e898b1125c5dd6a2fb41551d2af5f">StartMax</a>());
<a name="l00326"></a>00326       }
<a name="l00327"></a>00327       <span class="keywordflow">break</span>;
<a name="l00328"></a>00328     }
<a name="l00329"></a>00329     <span class="keywordflow">case</span> <a class="code" href="classoperations__research_1_1TemporalDisjunction.html#61fa7029a8de694ce651daf24657fb5adfcd85a04d0c3a2e3f7759739f518798">UNDECIDED</a>: {
<a name="l00330"></a>00330       <a class="code" href="classoperations__research_1_1TemporalDisjunction.html#74d2ba023334459d1214cae103a846a3">TryToDecide</a>();
<a name="l00331"></a>00331     }
<a name="l00332"></a>00332   }
<a name="l00333"></a>00333 }
<a name="l00334"></a>00334 
<a name="l00335"></a><a class="code" href="classoperations__research_1_1TemporalDisjunction.html#d74fa91cf22b6dde5300914ce338a33a">00335</a> <span class="keywordtype">void</span> <a class="code" href="classoperations__research_1_1TemporalDisjunction.html#d74fa91cf22b6dde5300914ce338a33a">TemporalDisjunction::RangeDemon2</a>() {
<a name="l00336"></a>00336   <span class="keywordflow">if</span> (<a class="code" href="classoperations__research_1_1TemporalDisjunction.html#bba84dcc8de7b9e9d16c55eb8ce32251">t1_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#8e2f5e7fed94b846d1f53c1ca8e9fa9f">MayBePerformed</a>() || <a class="code" href="classoperations__research_1_1TemporalDisjunction.html#801ae798f65cadeb288e862a134e1a96">t2_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#8e2f5e7fed94b846d1f53c1ca8e9fa9f">MayBePerformed</a>()) {
<a name="l00337"></a>00337     <span class="keywordflow">switch</span> (<a class="code" href="classoperations__research_1_1TemporalDisjunction.html#066a964d871db05644f8445b6b7f6978">state_</a>) {
<a name="l00338"></a>00338       <span class="keywordflow">case</span> <a class="code" href="classoperations__research_1_1TemporalDisjunction.html#61fa7029a8de694ce651daf24657fb5a541cf9b6cb9aeddb0d12d29c6e85a541">ONE_BEFORE_TWO</a>: {
<a name="l00339"></a>00339         <span class="keywordflow">if</span> (<a class="code" href="classoperations__research_1_1TemporalDisjunction.html#801ae798f65cadeb288e862a134e1a96">t2_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#ef9101d29cf50c67521b105947f8fdcd" title="These methods query, set and watches the performed status of the interval var.">MustBePerformed</a>() &amp;&amp; <a class="code" href="classoperations__research_1_1TemporalDisjunction.html#bba84dcc8de7b9e9d16c55eb8ce32251">t1_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#8e2f5e7fed94b846d1f53c1ca8e9fa9f">MayBePerformed</a>()) {
<a name="l00340"></a>00340           <a class="code" href="classoperations__research_1_1TemporalDisjunction.html#bba84dcc8de7b9e9d16c55eb8ce32251">t1_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#dd69e5d253a42a328478f6797711abda">SetEndMax</a>(<a class="code" href="classoperations__research_1_1TemporalDisjunction.html#801ae798f65cadeb288e862a134e1a96">t2_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#627e898b1125c5dd6a2fb41551d2af5f">StartMax</a>());
<a name="l00341"></a>00341         }
<a name="l00342"></a>00342         <span class="keywordflow">break</span>;
<a name="l00343"></a>00343       }
<a name="l00344"></a>00344       <span class="keywordflow">case</span> <a class="code" href="classoperations__research_1_1TemporalDisjunction.html#61fa7029a8de694ce651daf24657fb5ab85f15825f92c407ba604eb20248064d">TWO_BEFORE_ONE</a>: {
<a name="l00345"></a>00345         <span class="keywordflow">if</span> (<a class="code" href="classoperations__research_1_1TemporalDisjunction.html#801ae798f65cadeb288e862a134e1a96">t2_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#ef9101d29cf50c67521b105947f8fdcd" title="These methods query, set and watches the performed status of the interval var.">MustBePerformed</a>() &amp;&amp; <a class="code" href="classoperations__research_1_1TemporalDisjunction.html#bba84dcc8de7b9e9d16c55eb8ce32251">t1_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#8e2f5e7fed94b846d1f53c1ca8e9fa9f">MayBePerformed</a>()) {
<a name="l00346"></a>00346           <a class="code" href="classoperations__research_1_1TemporalDisjunction.html#bba84dcc8de7b9e9d16c55eb8ce32251">t1_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#ee80fc5cd33bc3ea9d99ec892ad9d610">SetStartMin</a>(<a class="code" href="classoperations__research_1_1TemporalDisjunction.html#801ae798f65cadeb288e862a134e1a96">t2_</a>-&gt;<a class="code" href="classoperations__research_1_1IntervalVar.html#337babca836e2eff4e67adb0e141f82d" title="These methods query, set and watch the end position of the interval var.">EndMin</a>());
<a name="l00347"></a>00347         }
<a name="l00348"></a>00348         <span class="keywordflow">break</span>;
<a name="l00349"></a>00349       }
<a name="l00350"></a>00350       <span class="keywordflow">case</span> <a class="code" href="classoperations__research_1_1TemporalDisjunction.html#61fa7029a8de694ce651daf24657fb5adfcd85a04d0c3a2e3f7759739f518798">UNDECIDED</a>: {
<a name="l00351"></a>00351         <a class="code" href="classoperations__research_1_1TemporalDisjunction.html#74d2ba023334459d1214cae103a846a3">TryToDecide</a>();
<a name="l00352"></a>00352       }
<a name="l00353"></a>00353     }
<a name="l00354"></a>00354   }
<a name="l00355"></a>00355 }
<a name="l00356"></a>00356 
<a name="l00357"></a><a class="code" href="classoperations__research_1_1TemporalDisjunction.html#4a2cde8d7a3397d6bdc92dfd5591ba28">00357</a> <span class="keywordtype">void</span> <a class="code" href="classoperations__research_1_1TemporalDisjunction.html#4a2cde8d7a3397d6bdc92dfd5591ba28">TemporalDisjunction::RangeAlt</a>() {
<a name="l00358"></a>00358   DCHECK(<a class="code" href="classoperations__research_1_1TemporalDisjunction.html#1a87e9e95bbc5237711503fbd4fa80ce">alt_</a> != NULL);
<a name="l00359"></a>00359   <span class="keywordflow">if</span> (<a class="code" href="classoperations__research_1_1TemporalDisjunction.html#1a87e9e95bbc5237711503fbd4fa80ce">alt_</a>-&gt;<a class="code" href="classoperations__research_1_1IntVar.html#b84b786a2128f72fc720ae611e880499" title="This method returns the value of the variable.">Value</a>() == 0) {
<a name="l00360"></a>00360     <a class="code" href="classoperations__research_1_1TemporalDisjunction.html#95ab47e4bde568475c8ea559ac27b552">Decide</a>(<a class="code" href="classoperations__research_1_1TemporalDisjunction.html#61fa7029a8de694ce651daf24657fb5a541cf9b6cb9aeddb0d12d29c6e85a541">ONE_BEFORE_TWO</a>);
<a name="l00361"></a>00361   } <span class="keywordflow">else</span> {
<a name="l00362"></a>00362     <a class="code" href="classoperations__research_1_1TemporalDisjunction.html#95ab47e4bde568475c8ea559ac27b552">Decide</a>(<a class="code" href="classoperations__research_1_1TemporalDisjunction.html#61fa7029a8de694ce651daf24657fb5ab85f15825f92c407ba604eb20248064d">TWO_BEFORE_ONE</a>);
<a name="l00363"></a>00363   }
<a name="l00364"></a>00364 }
<a name="l00365"></a>00365 
<a name="l00366"></a><a class="code" href="classoperations__research_1_1TemporalDisjunction.html#95ab47e4bde568475c8ea559ac27b552">00366</a> <span class="keywordtype">void</span> <a class="code" href="classoperations__research_1_1TemporalDisjunction.html#95ab47e4bde568475c8ea559ac27b552">TemporalDisjunction::Decide</a>(<a class="code" href="classoperations__research_1_1TemporalDisjunction.html#61fa7029a8de694ce651daf24657fb5a">State</a> s) {
<a name="l00367"></a>00367   <span class="comment">// Should Decide on a fixed state?</span>
<a name="l00368"></a>00368   DCHECK_NE(s, <a class="code" href="classoperations__research_1_1TemporalDisjunction.html#61fa7029a8de694ce651daf24657fb5adfcd85a04d0c3a2e3f7759739f518798">UNDECIDED</a>);
<a name="l00369"></a>00369   <span class="keywordflow">if</span> (<a class="code" href="classoperations__research_1_1TemporalDisjunction.html#066a964d871db05644f8445b6b7f6978">state_</a> != <a class="code" href="classoperations__research_1_1TemporalDisjunction.html#61fa7029a8de694ce651daf24657fb5adfcd85a04d0c3a2e3f7759739f518798">UNDECIDED</a> &amp;&amp; <a class="code" href="classoperations__research_1_1TemporalDisjunction.html#066a964d871db05644f8445b6b7f6978">state_</a> != s) {
<a name="l00370"></a>00370     <a class="code" href="classoperations__research_1_1PropagationBaseObject.html#2851ada2b74b1f107fb50d84043471dc">solver</a>()-&gt;<a class="code" href="classoperations__research_1_1Solver.html#45534161a4dda7e1997bc0effd606648" title="Abandon the current branch in the search tree. A backtrack will follow.">Fail</a>();
<a name="l00371"></a>00371   }
<a name="l00372"></a>00372   <a class="code" href="classoperations__research_1_1PropagationBaseObject.html#2851ada2b74b1f107fb50d84043471dc">solver</a>()-&gt;<a class="code" href="classoperations__research_1_1Solver.html#7ccd4144085fe2217fd92798283e99df" title="reversibility">SaveValue</a>(reinterpret_cast&lt;int*&gt;(&amp;<a class="code" href="classoperations__research_1_1TemporalDisjunction.html#066a964d871db05644f8445b6b7f6978">state_</a>));
<a name="l00373"></a>00373   <a class="code" href="classoperations__research_1_1TemporalDisjunction.html#066a964d871db05644f8445b6b7f6978">state_</a> = s;
<a name="l00374"></a>00374   <span class="keywordflow">if</span> (<a class="code" href="classoperations__research_1_1TemporalDisjunction.html#1a87e9e95bbc5237711503fbd4fa80ce">alt_</a> != NULL) {
<a name="l00375"></a>00375     <span class="keywordflow">if</span> (s == <a class="code" href="classoperations__research_1_1TemporalDisjunction.html#61fa7029a8de694ce651daf24657fb5a541cf9b6cb9aeddb0d12d29c6e85a541">ONE_BEFORE_TWO</a>) {
<a name="l00376"></a>00376       <a class="code" href="classoperations__research_1_1TemporalDisjunction.html#1a87e9e95bbc5237711503fbd4fa80ce">alt_</a>-&gt;<a class="code" href="classoperations__research_1_1IntExpr.html#8889930ed76665b0f24f12df2ed4e05c" title="This method sets the value of the expression.">SetValue</a>(0);
<a name="l00377"></a>00377     } <span class="keywordflow">else</span> {
<a name="l00378"></a>00378       <a class="code" href="classoperations__research_1_1TemporalDisjunction.html#1a87e9e95bbc5237711503fbd4fa80ce">alt_</a>-&gt;<a class="code" href="classoperations__research_1_1IntExpr.html#8889930ed76665b0f24f12df2ed4e05c" title="This method sets the value of the expression.">SetValue</a>(1);
<a name="l00379"></a>00379     }
<a name="l00380"></a>00380   }
<a name="l00381"></a>00381   <a class="code" href="classoperations__research_1_1TemporalDisjunction.html#2b47468975cb5066222a8cf518b04618">RangeDemon1</a>();
<a name="l00382"></a>00382   <a class="code" href="classoperations__research_1_1TemporalDisjunction.html#d74fa91cf22b6dde5300914ce338a33a">RangeDemon2</a>();
<a name="l00383"></a>00383 }
<a name="l00384"></a>00384 
<a name="l00385"></a><a class="code" href="classoperations__research_1_1Solver.html#270b1a8603ea856d3c65d931706152db">00385</a> <a class="code" href="classoperations__research_1_1Constraint.html" title="A constraint is the main modeling object.">Constraint</a>* <a class="code" href="classoperations__research_1_1Solver.html#270b1a8603ea856d3c65d931706152db" title="This constraint implements a temporal disjunction between two interval vars t1 and...">Solver::MakeTemporalDisjunction</a>(<a class="code" href="classoperations__research_1_1IntervalVar.html" title="Interval Var.">IntervalVar</a>* <span class="keyword">const</span> t1,
<a name="l00386"></a>00386                                             <a class="code" href="classoperations__research_1_1IntervalVar.html" title="Interval Var.">IntervalVar</a>* <span class="keyword">const</span> t2,
<a name="l00387"></a>00387                                             <a class="code" href="classoperations__research_1_1IntVar.html" title="The class IntVar is a subset of IntExpr.">IntVar</a>* <span class="keyword">const</span> alt) {
<a name="l00388"></a>00388   <span class="keywordflow">return</span> <a class="code" href="classoperations__research_1_1Solver.html#83ceb54f811483fd1c0444cddba8a600" title="The RevAlloc method stores the corresponding object in a stack.">RevAlloc</a>(<span class="keyword">new</span> <a class="code" href="classoperations__research_1_1TemporalDisjunction.html" title="activity a before activity b or activity b before activity a">TemporalDisjunction</a>(<span class="keyword">this</span>, t1, t2, alt));
<a name="l00389"></a>00389 }
<a name="l00390"></a>00390 
<a name="l00391"></a><a class="code" href="classoperations__research_1_1Solver.html#06451ade77105d35c6cebdafc86e63b5">00391</a> <a class="code" href="classoperations__research_1_1Constraint.html" title="A constraint is the main modeling object.">Constraint</a>* <a class="code" href="classoperations__research_1_1Solver.html#270b1a8603ea856d3c65d931706152db" title="This constraint implements a temporal disjunction between two interval vars t1 and...">Solver::MakeTemporalDisjunction</a>(<a class="code" href="classoperations__research_1_1IntervalVar.html" title="Interval Var.">IntervalVar</a>* <span class="keyword">const</span> t1,
<a name="l00392"></a>00392                                             <a class="code" href="classoperations__research_1_1IntervalVar.html" title="Interval Var.">IntervalVar</a>* <span class="keyword">const</span> t2) {
<a name="l00393"></a>00393   <span class="keywordflow">return</span> <a class="code" href="classoperations__research_1_1Solver.html#83ceb54f811483fd1c0444cddba8a600" title="The RevAlloc method stores the corresponding object in a stack.">RevAlloc</a>(<span class="keyword">new</span> <a class="code" href="classoperations__research_1_1TemporalDisjunction.html" title="activity a before activity b or activity b before activity a">TemporalDisjunction</a>(<span class="keyword">this</span>, t1, t2, NULL));
<a name="l00394"></a>00394 }
<a name="l00395"></a>00395 
<a name="l00396"></a>00396 }  <span class="comment">// namespace operations_research</span>
</pre></div></div>

  <!-- Start of footer. -->
  <table width=100% cellpadding=0 cellspacing=0 border=0>
    <tr valign=top>
      <td colspan=2 height=10></td>
    </tr>
    <tr valign=top>
      <td colspan=2 bgcolor=#389613 height=3></td>
    </tr>
  </table>

  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br />

  
  </body>
</html>
