<!-- Good morning, Mr. Phelps. -->
<html>
  <head>
    <meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
    <title>google3/constraint_solver/: operations_research::IntVar Class Reference - Doxy</title>
    <link rel="shortcut icon" href="../../favicon.ico">
    <!-- Both stylesheets are supplied by Doxygen, with maybe minor tweaks from Google. -->
    <link href="../../doxygen.css" rel="stylesheet" type="text/css">
    <link href="../../tabs.css" rel="stylesheet" type="text/css">
  </head>

  <body topmargin=0 leftmargin=20 bottommargin=0 rightmargin=20 marginwidth=20 marginheight=0>
  <!-- Second part of the secret behind Doxy logo always having the word "Doxy" with the color of the day. -->
  <style>
    a.doxy_logo:hover {
      background-color: #389613
    }
  </style>

  <table width=100% cellpadding=0 cellspacing=0 border=0>
    <!-- Top horizontal line with the color of the day. -->
    <tr valign=top>
      <td colspan=3 bgcolor=#389613 height=3></td>
    </tr>

    <!-- Header row with the links at the right. -->
    <tr valign=top>
      <td colspan=3 align=right>
        <font size=-1>
          Generated on: <font color=#389613><b>Fri Apr  1 14:13:18 PDT 2011</b></font>
            for <b>custom file set</b>
        </font>
      </td>
    </tr>

    <!-- Header row with the logo and the search form. -->
    <tr valign=top>
      <!-- Logo. -->
      <td align=left width=150>
        <table width=150 height=54 cellpadding=0 cellspacing=0 border=0>
          <tr valign=top>
            <!-- First part of the secret behind Doxy logo always having the word "Doxy" with the color of the day. -->
            <td bgcolor=#389613>
              <a class="doxy_logo" href="../../index.html"><img src="../../doxy_logo.png" alt="Doxy" border=0></a>
            </td>
          </tr>
        </table>
      </td>
    </tr>

    <!-- Tiny vertical space below the form. -->
    <tr valign=top>
      <td colspan=3 height=3></td>
    </tr>
  </table>

  <!-- Header navigation row. -->
  <div class="memproto">
    <table width=100% cellpadding=0 cellspacing=0 border=0>
      <tr>
        <td align=left style="padding-left: 20px"><font size=+1><b><tt><font color=#333333>//
            <a href="../../index.html"><font color=#389613>doxy</font></a>/</font>
            <a href="../../google3/index.html">google3</a>/
            <a href="../../google3/constraint_solver/index.html">constraint_solver</a>/
            </tt></b></font>
        </td>
      </tr>
    </table>
  </div>
  <br />
    <!-- No subdirs found. -->
  <!-- End of header. -->
<!-- Generated by Doxygen 1.5.6 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.html"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.html"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="namespaces.html"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.html"><span>Classes</span></a></li>
      <li><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="annotated.html"><span>Class&nbsp;List</span></a></li>
      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.html"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
  <div class="navpath"><a class="el" href="namespaceoperations__research.html">operations_research</a>::<a class="el" href="classoperations__research_1_1IntVar.html">IntVar</a>
  </div>
</div>
<div class="contents">
<h1>operations_research::IntVar Class Reference</h1><!-- doxytag: class="operations_research::IntVar" --><!-- doxytag: inherits="operations_research::IntExpr" -->The class <a class="el" href="classoperations__research_1_1IntVar.html" title="The class IntVar is a subset of IntExpr.">IntVar</a> is a subset of <a class="el" href="classoperations__research_1_1IntExpr.html" title="The class IntExpr is the base of all integer expressions in constraint programming...">IntExpr</a>.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="constraint__solver_8h-source.html">constraint_solver.h</a>&gt;</code>
<p>
<div class="dynheader">
Inheritance diagram for operations_research::IntVar:</div>
<div class="dynsection">

<p><center><img src="classoperations__research_1_1IntVar.png" usemap="#operations_research::IntVar_map" border="0" alt=""></center>
<map name="operations_research::IntVar_map">
<area href="classoperations__research_1_1IntExpr.html" alt="operations_research::IntExpr" shape="rect" coords="0,112,268,136">
<area href="classoperations__research_1_1PropagationBaseObject.html" alt="operations_research::PropagationBaseObject" shape="rect" coords="0,56,268,80">
<area href="classoperations__research_1_1BaseObject.html" alt="operations_research::BaseObject" shape="rect" coords="0,0,268,24">
<area href="classoperations__research_1_1BooleanVar.html" alt="operations_research::BooleanVar" shape="rect" coords="278,224,546,248">
<area href="classoperations__research_1_1DomainIntVar.html" alt="operations_research::DomainIntVar" shape="rect" coords="278,280,546,304">
<area href="classoperations__research_1_1IntConst.html" alt="operations_research::IntConst" shape="rect" coords="278,336,546,360">
<area href="classoperations__research_1_1OppIntVar.html" alt="operations_research::OppIntVar" shape="rect" coords="278,392,546,416">
<area href="classoperations__research_1_1PlusCstDomainIntVar.html" alt="operations_research::PlusCstDomainIntVar" shape="rect" coords="278,448,546,472">
<area href="classoperations__research_1_1PlusCstIntVar.html" alt="operations_research::PlusCstIntVar" shape="rect" coords="278,504,546,528">
<area href="classoperations__research_1_1SubCstIntVar.html" alt="operations_research::SubCstIntVar" shape="rect" coords="278,560,546,584">
<area href="classoperations__research_1_1TimesPosCstBoolVar.html" alt="operations_research::TimesPosCstBoolVar" shape="rect" coords="278,616,546,640">
<area href="classoperations__research_1_1TimesPosCstIntVar.html" alt="operations_research::TimesPosCstIntVar" shape="rect" coords="278,672,546,696">
</map>
</div>

<p>
<a href="classoperations__research_1_1IntVar-members.html">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntVar.html#119cae716dbbdaa31b476ef904c99776">IntVar</a> (<a class="el" href="classoperations__research_1_1Solver.html">Solver</a> *const s)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntVar.html#fd961a180a35730917f6f603127287e8">IntVar</a> (<a class="el" href="classoperations__research_1_1Solver.html">Solver</a> *const s, const string &amp;name)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntVar.html#99d6abd53e19ceb135461ae253fac974">~IntVar</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntVar.html#ddf1c277889288c26d69fd2d448af80d">IsVar</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns true if the expression is indeed a variable.  <a href="#ddf1c277889288c26d69fd2d448af80d"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual <a class="el" href="classoperations__research_1_1IntVar.html">IntVar</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntVar.html#603366ed03f64fa205c53bb9d00e3bdb">Var</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Creates a variable from the expression.  <a href="#603366ed03f64fa205c53bb9d00e3bdb"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual int64&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntVar.html#b84b786a2128f72fc720ae611e880499">Value</a> () const =0</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This method returns the value of the variable.  <a href="#b84b786a2128f72fc720ae611e880499"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntVar.html#fa4460e0dd9745ad24b99d08d853f3a4">RemoveValue</a> (int64 v)=0</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This method removes the value 'v' from the domain of the variable.  <a href="#fa4460e0dd9745ad24b99d08d853f3a4"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntVar.html#3316193a23988b72bd52ada02859efb0">RemoveInterval</a> (int64 l, int64 u)=0</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This method removes the interval 'l' .  <a href="#3316193a23988b72bd52ada02859efb0"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntVar.html#5df6b77fa28ec505e59311a3dc0bf895">RemoveValues</a> (const int64 *const values, int size)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This method remove the values from the domain of the variable.  <a href="#5df6b77fa28ec505e59311a3dc0bf895"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntVar.html#c631739326138df3de984e38d0bbbbda">RemoveValues</a> (const vector&lt; int64 &gt; &amp;values)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This method remove the values from the domain of the variable.  <a href="#c631739326138df3de984e38d0bbbbda"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntVar.html#3eac2665d9a3a979c6c02528546dd15e">SetValues</a> (const int64 *const values, int size)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This method intersects the current domain with the values in the array.  <a href="#3eac2665d9a3a979c6c02528546dd15e"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntVar.html#54e4ec3f8e7b2fc96ba0fde32fada784">SetValues</a> (const vector&lt; int64 &gt; &amp;values)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This method intersects the current domain with the values in the array.  <a href="#54e4ec3f8e7b2fc96ba0fde32fada784"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntVar.html#1501b060a0ae4f2ae77d8008479944ca">WhenBound</a> (<a class="el" href="classoperations__research_1_1Demon.html">Demon</a> *d)=0</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This method attaches a demon that will be awakened when the variable is bound.  <a href="#1501b060a0ae4f2ae77d8008479944ca"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntVar.html#16770c4e77b7c3bae7f706661aae94fb">WhenDomain</a> (<a class="el" href="classoperations__research_1_1Demon.html">Demon</a> *d)=0</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This method attaches a demon that will watch any domain modification of the domain of the variable.  <a href="#16770c4e77b7c3bae7f706661aae94fb"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual uint64&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntVar.html#26efd8a51314b318dc14641e90af5c3a">Size</a> () const =0</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This method returns the number of values in the domain of the variable.  <a href="#26efd8a51314b318dc14641e90af5c3a"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntVar.html#6e297b67956343bed8a4aece6a2c88a3">Contains</a> (int64 v) const =0</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This method returns wether the value 'v' is in the domain of the variable.  <a href="#6e297b67956343bed8a4aece6a2c88a3"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual <a class="el" href="classoperations__research_1_1IntVarIterator.html">IntVarIterator</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntVar.html#68e475702b2e14bf968256ec36cccad7">MakeHoleIterator</a> (bool reversible) const =0</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Creates a hole iterator.  <a href="#68e475702b2e14bf968256ec36cccad7"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual <a class="el" href="classoperations__research_1_1IntVarIterator.html">IntVarIterator</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntVar.html#d371f5411c3f0aa0424181fc9936a2fb">MakeDomainIterator</a> (bool reversible) const =0</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Creates a domain iterator.  <a href="#d371f5411c3f0aa0424181fc9936a2fb"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual int64&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntVar.html#894ecb1c102fa7fca59661a215f14d50">OldMin</a> () const =0</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns the previous min.  <a href="#894ecb1c102fa7fca59661a215f14d50"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual int64&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntVar.html#619ac58213bbff56398934e76dd1079f">OldMax</a> () const =0</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns the previous max.  <a href="#619ac58213bbff56398934e76dd1079f"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntVar.html#df679daa90a28ec8411a0e4ba8f6de0b">VarType</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">namespace  <a href="#df679daa90a28ec8411a0e4ba8f6de0b"></a><br></td></tr>
<tr><td colspan="2"><br><h2>Private Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1IntVar.html#ebba5298c61c2ace8bec1217b6906ff1">DISALLOW_COPY_AND_ASSIGN</a> (<a class="el" href="classoperations__research_1_1IntVar.html">IntVar</a>)</td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
The class <a class="el" href="classoperations__research_1_1IntVar.html" title="The class IntVar is a subset of IntExpr.">IntVar</a> is a subset of <a class="el" href="classoperations__research_1_1IntExpr.html" title="The class IntExpr is the base of all integer expressions in constraint programming...">IntExpr</a>. 
<p>
In addition to the <a class="el" href="classoperations__research_1_1IntExpr.html" title="The class IntExpr is the base of all integer expressions in constraint programming...">IntExpr</a> protocol, it offers persistance, removing values from the domains and a finer model for events 
<p>Definition at line <a class="el" href="constraint__solver_8h-source.html#l02559">2559</a> of file <a class="el" href="constraint__solver_8h-source.html">constraint_solver.h</a>.</p>
<hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="119cae716dbbdaa31b476ef904c99776"></a><!-- doxytag: member="operations_research::IntVar::IntVar" ref="119cae716dbbdaa31b476ef904c99776" args="(Solver *const s)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">operations_research::IntVar::IntVar           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classoperations__research_1_1Solver.html">Solver</a> *const &nbsp;</td>
          <td class="paramname"> <em>s</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline, explicit]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="constraint__solver_8h-source.html#l02561">2561</a> of file <a class="el" href="constraint__solver_8h-source.html">constraint_solver.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="fd961a180a35730917f6f603127287e8"></a><!-- doxytag: member="operations_research::IntVar::IntVar" ref="fd961a180a35730917f6f603127287e8" args="(Solver *const s, const string &amp;name)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">operations_research::IntVar::IntVar           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classoperations__research_1_1Solver.html">Solver</a> *const &nbsp;</td>
          <td class="paramname"> <em>s</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const string &amp;&nbsp;</td>
          <td class="paramname"> <em>name</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="constraint__solver_8h-source.html#l02562">2562</a> of file <a class="el" href="constraint__solver_8h-source.html">constraint_solver.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="99d6abd53e19ceb135461ae253fac974"></a><!-- doxytag: member="operations_research::IntVar::~IntVar" ref="99d6abd53e19ceb135461ae253fac974" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual operations_research::IntVar::~IntVar           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="constraint__solver_8h-source.html#l02563">2563</a> of file <a class="el" href="constraint__solver_8h-source.html">constraint_solver.h</a>.</p>

</div>
</div><p>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="ddf1c277889288c26d69fd2d448af80d"></a><!-- doxytag: member="operations_research::IntVar::IsVar" ref="ddf1c277889288c26d69fd2d448af80d" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool operations_research::IntVar::IsVar           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns true if the expression is indeed a variable. 
<p>

<p>Reimplemented from <a class="el" href="classoperations__research_1_1IntExpr.html#779dea5a722df700411e947f7739dc56">operations_research::IntExpr</a>.</p>

<p>Definition at line <a class="el" href="constraint__solver_8h-source.html#l02565">2565</a> of file <a class="el" href="constraint__solver_8h-source.html">constraint_solver.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="603366ed03f64fa205c53bb9d00e3bdb"></a><!-- doxytag: member="operations_research::IntVar::Var" ref="603366ed03f64fa205c53bb9d00e3bdb" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classoperations__research_1_1IntVar.html">IntVar</a>* operations_research::IntVar::Var           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Creates a variable from the expression. 
<p>

<p>Implements <a class="el" href="classoperations__research_1_1IntExpr.html#751d151bfe120bc6d378c4570505cbd4">operations_research::IntExpr</a>.</p>

<p>Definition at line <a class="el" href="constraint__solver_8h-source.html#l02566">2566</a> of file <a class="el" href="constraint__solver_8h-source.html">constraint_solver.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="b84b786a2128f72fc720ae611e880499"></a><!-- doxytag: member="operations_research::IntVar::Value" ref="b84b786a2128f72fc720ae611e880499" args="() const =0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual int64 operations_research::IntVar::Value           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This method returns the value of the variable. 
<p>
This method checks before that the variable is bound. 
<p>Implemented in <a class="el" href="classoperations__research_1_1DomainIntVar.html#6265ab4fe59282fa0fa70277885ca1fd">operations_research::DomainIntVar</a>, <a class="el" href="classoperations__research_1_1BooleanVar.html#f9688196277f1209be9a7527d7489acf">operations_research::BooleanVar</a>, <a class="el" href="classoperations__research_1_1IntConst.html#a2612801f0698943b749bd53b7b1fe67">operations_research::IntConst</a>, <a class="el" href="classoperations__research_1_1PlusCstIntVar.html#e08f051f4e142cea4e10864c9b08eaed">operations_research::PlusCstIntVar</a>, <a class="el" href="classoperations__research_1_1PlusCstDomainIntVar.html#472bc549b9851e88628d7ec6447ec96b">operations_research::PlusCstDomainIntVar</a>, <a class="el" href="classoperations__research_1_1SubCstIntVar.html#318d98fce0e5212485ba110a1ad9cc6e">operations_research::SubCstIntVar</a>, <a class="el" href="classoperations__research_1_1OppIntVar.html#986d32355d314909b42234b0e14d109e">operations_research::OppIntVar</a>, <a class="el" href="classoperations__research_1_1TimesPosCstIntVar.html#87e81c74faffbc13821c7066e2d0c887">operations_research::TimesPosCstIntVar</a>, and <a class="el" href="classoperations__research_1_1TimesPosCstBoolVar.html#bbd80e41dab0b7adb33f526e57408ae7">operations_research::TimesPosCstBoolVar</a>.</p>

</div>
</div><p>
<a class="anchor" name="fa4460e0dd9745ad24b99d08d853f3a4"></a><!-- doxytag: member="operations_research::IntVar::RemoveValue" ref="fa4460e0dd9745ad24b99d08d853f3a4" args="(int64 v)=0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void operations_research::IntVar::RemoveValue           </td>
          <td>(</td>
          <td class="paramtype">int64&nbsp;</td>
          <td class="paramname"> <em>v</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This method removes the value 'v' from the domain of the variable. 
<p>

<p>Implemented in <a class="el" href="classoperations__research_1_1DomainIntVar.html#af828eb0248f5302a68af11120520593">operations_research::DomainIntVar</a>, <a class="el" href="classoperations__research_1_1BooleanVar.html#188215adde96187cd20fdc8cf2a327d3">operations_research::BooleanVar</a>, <a class="el" href="classoperations__research_1_1IntConst.html#1019ebcfe472bf4d262716ae3bbeba5e">operations_research::IntConst</a>, <a class="el" href="classoperations__research_1_1PlusCstIntVar.html#b22684d197ef78dd64d99dbfee391ffc">operations_research::PlusCstIntVar</a>, <a class="el" href="classoperations__research_1_1PlusCstDomainIntVar.html#94a642da443b7c9fafc0c7f820c9a47e">operations_research::PlusCstDomainIntVar</a>, <a class="el" href="classoperations__research_1_1SubCstIntVar.html#1ae5d5f1dfd247fd2ffdf85435c89854">operations_research::SubCstIntVar</a>, <a class="el" href="classoperations__research_1_1OppIntVar.html#0a22b61ac1176d5b209ce490a7d05f79">operations_research::OppIntVar</a>, <a class="el" href="classoperations__research_1_1TimesPosCstIntVar.html#11a693b57b656029970ec7c31e3da688">operations_research::TimesPosCstIntVar</a>, and <a class="el" href="classoperations__research_1_1TimesPosCstBoolVar.html#db27d56047a94de1fb59487d9128f33d">operations_research::TimesPosCstBoolVar</a>.</p>

</div>
</div><p>
<a class="anchor" name="3316193a23988b72bd52ada02859efb0"></a><!-- doxytag: member="operations_research::IntVar::RemoveInterval" ref="3316193a23988b72bd52ada02859efb0" args="(int64 l, int64 u)=0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void operations_research::IntVar::RemoveInterval           </td>
          <td>(</td>
          <td class="paramtype">int64&nbsp;</td>
          <td class="paramname"> <em>l</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int64&nbsp;</td>
          <td class="paramname"> <em>u</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This method removes the interval 'l' . 
<p>
. 'u' from the domain of the variable. It assumes that 'l' &lt;= 'u'. 
<p>Implemented in <a class="el" href="classoperations__research_1_1DomainIntVar.html#350d1bfc84395f41027ed9d92273ed27">operations_research::DomainIntVar</a>, <a class="el" href="classoperations__research_1_1BooleanVar.html#e54ec46ce6ee35f8246f81e31a06ef1b">operations_research::BooleanVar</a>, <a class="el" href="classoperations__research_1_1IntConst.html#b877bd674b7fe2ced0099e3c61864402">operations_research::IntConst</a>, <a class="el" href="classoperations__research_1_1PlusCstIntVar.html#d16443c9c16f746e06427c19d044155b">operations_research::PlusCstIntVar</a>, <a class="el" href="classoperations__research_1_1PlusCstDomainIntVar.html#c1acd11a952fb54b33d06429c734e44a">operations_research::PlusCstDomainIntVar</a>, <a class="el" href="classoperations__research_1_1SubCstIntVar.html#40046bd813046ca786c1ce1527d8f616">operations_research::SubCstIntVar</a>, <a class="el" href="classoperations__research_1_1OppIntVar.html#0171c17f3a606c0e57f2b6a7e27e33a2">operations_research::OppIntVar</a>, <a class="el" href="classoperations__research_1_1TimesPosCstIntVar.html#6878f356b9b5b215344edba09e48ff45">operations_research::TimesPosCstIntVar</a>, and <a class="el" href="classoperations__research_1_1TimesPosCstBoolVar.html#8e34a5ba747d477adbbd32ab4c61285c">operations_research::TimesPosCstBoolVar</a>.</p>

</div>
</div><p>
<a class="anchor" name="5df6b77fa28ec505e59311a3dc0bf895"></a><!-- doxytag: member="operations_research::IntVar::RemoveValues" ref="5df6b77fa28ec505e59311a3dc0bf895" args="(const int64 *const values, int size)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void operations_research::IntVar::RemoveValues           </td>
          <td>(</td>
          <td class="paramtype">const int64 *const &nbsp;</td>
          <td class="paramname"> <em>values</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>size</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This method remove the values from the domain of the variable. 
<p>

<p>Definition at line <a class="el" href="expressions_8cc-source.html#l00118">118</a> of file <a class="el" href="expressions_8cc-source.html">expressions.cc</a>.</p>

</div>
</div><p>
<a class="anchor" name="c631739326138df3de984e38d0bbbbda"></a><!-- doxytag: member="operations_research::IntVar::RemoveValues" ref="c631739326138df3de984e38d0bbbbda" args="(const vector&lt; int64 &gt; &amp;values)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void operations_research::IntVar::RemoveValues           </td>
          <td>(</td>
          <td class="paramtype">const vector&lt; int64 &gt; &amp;&nbsp;</td>
          <td class="paramname"> <em>values</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This method remove the values from the domain of the variable. 
<p>

<p>Definition at line <a class="el" href="constraint__solver_8h-source.html#l02583">2583</a> of file <a class="el" href="constraint__solver_8h-source.html">constraint_solver.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="3eac2665d9a3a979c6c02528546dd15e"></a><!-- doxytag: member="operations_research::IntVar::SetValues" ref="3eac2665d9a3a979c6c02528546dd15e" args="(const int64 *const values, int size)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void operations_research::IntVar::SetValues           </td>
          <td>(</td>
          <td class="paramtype">const int64 *const &nbsp;</td>
          <td class="paramname"> <em>values</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>size</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This method intersects the current domain with the values in the array. 
<p>
namespace 
<p>Definition at line <a class="el" href="expressions_8cc-source.html#l00137">137</a> of file <a class="el" href="expressions_8cc-source.html">expressions.cc</a>.</p>

</div>
</div><p>
<a class="anchor" name="54e4ec3f8e7b2fc96ba0fde32fada784"></a><!-- doxytag: member="operations_research::IntVar::SetValues" ref="54e4ec3f8e7b2fc96ba0fde32fada784" args="(const vector&lt; int64 &gt; &amp;values)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void operations_research::IntVar::SetValues           </td>
          <td>(</td>
          <td class="paramtype">const vector&lt; int64 &gt; &amp;&nbsp;</td>
          <td class="paramname"> <em>values</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This method intersects the current domain with the values in the array. 
<p>

<p>Definition at line <a class="el" href="constraint__solver_8h-source.html#l02591">2591</a> of file <a class="el" href="constraint__solver_8h-source.html">constraint_solver.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="1501b060a0ae4f2ae77d8008479944ca"></a><!-- doxytag: member="operations_research::IntVar::WhenBound" ref="1501b060a0ae4f2ae77d8008479944ca" args="(Demon *d)=0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void operations_research::IntVar::WhenBound           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classoperations__research_1_1Demon.html">Demon</a> *&nbsp;</td>
          <td class="paramname"> <em>d</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This method attaches a demon that will be awakened when the variable is bound. 
<p>

<p>Implemented in <a class="el" href="classoperations__research_1_1DomainIntVar.html#d86d57cea6f681e7065757e5c9c42d2c">operations_research::DomainIntVar</a>, <a class="el" href="classoperations__research_1_1BooleanVar.html#2c0074775eda308022798ebdfb745ac2">operations_research::BooleanVar</a>, <a class="el" href="classoperations__research_1_1IntConst.html#409c9df0432042073f30344b31a9c96e">operations_research::IntConst</a>, <a class="el" href="classoperations__research_1_1PlusCstIntVar.html#f73d8572d2654665974049b19374465a">operations_research::PlusCstIntVar</a>, <a class="el" href="classoperations__research_1_1PlusCstDomainIntVar.html#0de1a6a0cabd92449044d2dca2a5e000">operations_research::PlusCstDomainIntVar</a>, <a class="el" href="classoperations__research_1_1SubCstIntVar.html#38fdbf48f3ae127522e57fe684c45f2d">operations_research::SubCstIntVar</a>, <a class="el" href="classoperations__research_1_1OppIntVar.html#199e96e1d9af155ef653ad2da6fb2863">operations_research::OppIntVar</a>, <a class="el" href="classoperations__research_1_1TimesPosCstIntVar.html#317054ac571b7eee9739f3e6945ba08e">operations_research::TimesPosCstIntVar</a>, and <a class="el" href="classoperations__research_1_1TimesPosCstBoolVar.html#aab874a62a63009e03918b8e03060e03">operations_research::TimesPosCstBoolVar</a>.</p>

</div>
</div><p>
<a class="anchor" name="16770c4e77b7c3bae7f706661aae94fb"></a><!-- doxytag: member="operations_research::IntVar::WhenDomain" ref="16770c4e77b7c3bae7f706661aae94fb" args="(Demon *d)=0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void operations_research::IntVar::WhenDomain           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classoperations__research_1_1Demon.html">Demon</a> *&nbsp;</td>
          <td class="paramname"> <em>d</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This method attaches a demon that will watch any domain modification of the domain of the variable. 
<p>

<p>Implemented in <a class="el" href="classoperations__research_1_1DomainIntVar.html#e326179ea01bcba70a318b746806e355">operations_research::DomainIntVar</a>, <a class="el" href="classoperations__research_1_1BooleanVar.html#2e8e86b1d2ac001eebf3aac4f3ebbf6d">operations_research::BooleanVar</a>, <a class="el" href="classoperations__research_1_1IntConst.html#09dfd6c07b6120b4db6c2f1850abc09d">operations_research::IntConst</a>, <a class="el" href="classoperations__research_1_1PlusCstIntVar.html#927f384ff76c6a500f0b588ec572df94">operations_research::PlusCstIntVar</a>, <a class="el" href="classoperations__research_1_1PlusCstDomainIntVar.html#5a27d5978ac4526e40ab7ca668fcfe9d">operations_research::PlusCstDomainIntVar</a>, <a class="el" href="classoperations__research_1_1SubCstIntVar.html#6a649cc4c24232a2ae34f40d6588c5c8">operations_research::SubCstIntVar</a>, <a class="el" href="classoperations__research_1_1OppIntVar.html#96d5cd9a32543520bfb43c5aea8fdd12">operations_research::OppIntVar</a>, <a class="el" href="classoperations__research_1_1TimesPosCstIntVar.html#b30baab020850feb1a3c27bc24471bb4">operations_research::TimesPosCstIntVar</a>, and <a class="el" href="classoperations__research_1_1TimesPosCstBoolVar.html#4ac024044474dced6d3f48b3b06699c4">operations_research::TimesPosCstBoolVar</a>.</p>

</div>
</div><p>
<a class="anchor" name="26efd8a51314b318dc14641e90af5c3a"></a><!-- doxytag: member="operations_research::IntVar::Size" ref="26efd8a51314b318dc14641e90af5c3a" args="() const =0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual uint64 operations_research::IntVar::Size           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This method returns the number of values in the domain of the variable. 
<p>

<p>Implemented in <a class="el" href="classoperations__research_1_1DomainIntVar.html#fe8c8567b91e7f37c36f357adb4cc1b1">operations_research::DomainIntVar</a>, <a class="el" href="classoperations__research_1_1BooleanVar.html#00f859e77845e7acf1f9f992e6284c15">operations_research::BooleanVar</a>, <a class="el" href="classoperations__research_1_1IntConst.html#763b361d63b411100ec7226acad364ae">operations_research::IntConst</a>, <a class="el" href="classoperations__research_1_1PlusCstIntVar.html#5cfc656376f3ddc55c0c6f144674553d">operations_research::PlusCstIntVar</a>, <a class="el" href="classoperations__research_1_1PlusCstDomainIntVar.html#0eb1582104600f49f723533e694f741f">operations_research::PlusCstDomainIntVar</a>, <a class="el" href="classoperations__research_1_1SubCstIntVar.html#d48aee337722c105c8034f1ad07fd252">operations_research::SubCstIntVar</a>, <a class="el" href="classoperations__research_1_1OppIntVar.html#4db11e57e3ee359418771fdcfd3af29a">operations_research::OppIntVar</a>, <a class="el" href="classoperations__research_1_1TimesPosCstIntVar.html#d70a96a6bd9abcdf8da7fca5565a9fa3">operations_research::TimesPosCstIntVar</a>, and <a class="el" href="classoperations__research_1_1TimesPosCstBoolVar.html#848b622f74e0f1ef686674ab80ae70c6">operations_research::TimesPosCstBoolVar</a>.</p>

</div>
</div><p>
<a class="anchor" name="6e297b67956343bed8a4aece6a2c88a3"></a><!-- doxytag: member="operations_research::IntVar::Contains" ref="6e297b67956343bed8a4aece6a2c88a3" args="(int64 v) const =0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool operations_research::IntVar::Contains           </td>
          <td>(</td>
          <td class="paramtype">int64&nbsp;</td>
          <td class="paramname"> <em>v</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This method returns wether the value 'v' is in the domain of the variable. 
<p>

<p>Implemented in <a class="el" href="classoperations__research_1_1DomainIntVar.html#7e579c46344512d3fc0e4f9ea057b596">operations_research::DomainIntVar</a>, <a class="el" href="classoperations__research_1_1BooleanVar.html#9b002ac4d2c5037881e90cdc5707e99f">operations_research::BooleanVar</a>, <a class="el" href="classoperations__research_1_1IntConst.html#0dd26a6253aaf3e1e6134374f2e77668">operations_research::IntConst</a>, <a class="el" href="classoperations__research_1_1PlusCstIntVar.html#5e592898766d80b031d6ccfd018828d0">operations_research::PlusCstIntVar</a>, <a class="el" href="classoperations__research_1_1PlusCstDomainIntVar.html#b4e896096bbf10750f23df01242bb5d7">operations_research::PlusCstDomainIntVar</a>, <a class="el" href="classoperations__research_1_1SubCstIntVar.html#ff55b52f4e2b14b4e0ab8cb068c18617">operations_research::SubCstIntVar</a>, <a class="el" href="classoperations__research_1_1OppIntVar.html#37fd497c64d1d4b52bc9360bbd2b8ee7">operations_research::OppIntVar</a>, <a class="el" href="classoperations__research_1_1TimesPosCstIntVar.html#72292a579b4dbfe4bf4a536a0f2345bb">operations_research::TimesPosCstIntVar</a>, and <a class="el" href="classoperations__research_1_1TimesPosCstBoolVar.html#d85e7aad4be79b2841729f61b38dda56">operations_research::TimesPosCstBoolVar</a>.</p>

</div>
</div><p>
<a class="anchor" name="68e475702b2e14bf968256ec36cccad7"></a><!-- doxytag: member="operations_research::IntVar::MakeHoleIterator" ref="68e475702b2e14bf968256ec36cccad7" args="(bool reversible) const =0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classoperations__research_1_1IntVarIterator.html">IntVarIterator</a>* operations_research::IntVar::MakeHoleIterator           </td>
          <td>(</td>
          <td class="paramtype">bool&nbsp;</td>
          <td class="paramname"> <em>reversible</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Creates a hole iterator. 
<p>
The object is created on the normal C++ heap and the solver does NOT take ownership of the object. 
<p>Implemented in <a class="el" href="classoperations__research_1_1DomainIntVar.html#7512120b9f3b9cf42011631b0e25e424">operations_research::DomainIntVar</a>, <a class="el" href="classoperations__research_1_1BooleanVar.html#3f18c8ff5347ff4b7e8b54ce9273d5d4">operations_research::BooleanVar</a>, <a class="el" href="classoperations__research_1_1IntConst.html#482b5650ca071832e3536c36da02e67d">operations_research::IntConst</a>, <a class="el" href="classoperations__research_1_1PlusCstIntVar.html#0a95f136e8bc676711f926bfb8aa3c0d">operations_research::PlusCstIntVar</a>, <a class="el" href="classoperations__research_1_1PlusCstDomainIntVar.html#9e3f02d03adfd4ab55bf7246c4f9047f">operations_research::PlusCstDomainIntVar</a>, <a class="el" href="classoperations__research_1_1SubCstIntVar.html#5daa6d144408df4486a0edd3c5cab426">operations_research::SubCstIntVar</a>, <a class="el" href="classoperations__research_1_1OppIntVar.html#64f027cdff430671244260a0832310a2">operations_research::OppIntVar</a>, <a class="el" href="classoperations__research_1_1TimesPosCstIntVar.html#d18718862b2b1bd5620f0facf57ebc58">operations_research::TimesPosCstIntVar</a>, and <a class="el" href="classoperations__research_1_1TimesPosCstBoolVar.html#564cd7c93a1917f7974926687e5cbaf5">operations_research::TimesPosCstBoolVar</a>.</p>

</div>
</div><p>
<a class="anchor" name="d371f5411c3f0aa0424181fc9936a2fb"></a><!-- doxytag: member="operations_research::IntVar::MakeDomainIterator" ref="d371f5411c3f0aa0424181fc9936a2fb" args="(bool reversible) const =0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classoperations__research_1_1IntVarIterator.html">IntVarIterator</a>* operations_research::IntVar::MakeDomainIterator           </td>
          <td>(</td>
          <td class="paramtype">bool&nbsp;</td>
          <td class="paramname"> <em>reversible</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Creates a domain iterator. 
<p>
The object is created on the normal C++ heap and the solver does NOT take ownership of the object. 
<p>Implemented in <a class="el" href="classoperations__research_1_1DomainIntVar.html#0d14ff7b0bbadc9f2e7a7ca59641d519">operations_research::DomainIntVar</a>, <a class="el" href="classoperations__research_1_1BooleanVar.html#4df83f05b604a9a08c82370bfd3317a4">operations_research::BooleanVar</a>, <a class="el" href="classoperations__research_1_1IntConst.html#c34f05dfbc3dd3ea8d81ff839db439b8">operations_research::IntConst</a>, <a class="el" href="classoperations__research_1_1PlusCstIntVar.html#ed7dcf490ab8f51fa6e5445e69ab16c6">operations_research::PlusCstIntVar</a>, <a class="el" href="classoperations__research_1_1PlusCstDomainIntVar.html#a191fba84cc521802cffcb97e4446084">operations_research::PlusCstDomainIntVar</a>, <a class="el" href="classoperations__research_1_1SubCstIntVar.html#e2bfdd19b1986252adcb119ac5b09588">operations_research::SubCstIntVar</a>, <a class="el" href="classoperations__research_1_1OppIntVar.html#a142a61aa9ec0b70b228dfdeffec15f5">operations_research::OppIntVar</a>, <a class="el" href="classoperations__research_1_1TimesPosCstIntVar.html#19d304bf7e72ce210cf143cac497d827">operations_research::TimesPosCstIntVar</a>, and <a class="el" href="classoperations__research_1_1TimesPosCstBoolVar.html#6a3adda9c86c9d33959144095c3daa92">operations_research::TimesPosCstBoolVar</a>.</p>

</div>
</div><p>
<a class="anchor" name="894ecb1c102fa7fca59661a215f14d50"></a><!-- doxytag: member="operations_research::IntVar::OldMin" ref="894ecb1c102fa7fca59661a215f14d50" args="() const =0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual int64 operations_research::IntVar::OldMin           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns the previous min. 
<p>

<p>Implemented in <a class="el" href="classoperations__research_1_1DomainIntVar.html#2aa57cfa46fda4e49b0de3bb2538fd13">operations_research::DomainIntVar</a>, <a class="el" href="classoperations__research_1_1BooleanVar.html#09f67d2b3e99500c4a9b5af2b6d54f76">operations_research::BooleanVar</a>, <a class="el" href="classoperations__research_1_1IntConst.html#d5d4625dd725c6086e9dfa1acebc57df">operations_research::IntConst</a>, <a class="el" href="classoperations__research_1_1PlusCstIntVar.html#654019672cc79a33bffb35e48150e163">operations_research::PlusCstIntVar</a>, <a class="el" href="classoperations__research_1_1PlusCstDomainIntVar.html#d42a636bd5abf29e467bb1723e3a0f05">operations_research::PlusCstDomainIntVar</a>, <a class="el" href="classoperations__research_1_1SubCstIntVar.html#728e3a39c1c3253cf7f8f8350672e13c">operations_research::SubCstIntVar</a>, <a class="el" href="classoperations__research_1_1OppIntVar.html#683885d654ea37f68cce8e8fcab088a5">operations_research::OppIntVar</a>, <a class="el" href="classoperations__research_1_1TimesPosCstIntVar.html#4fc062122cd3aae3de0475c2038e5be8">operations_research::TimesPosCstIntVar</a>, and <a class="el" href="classoperations__research_1_1TimesPosCstBoolVar.html#b4eda5b795663697754fbec08432e9f4">operations_research::TimesPosCstBoolVar</a>.</p>

</div>
</div><p>
<a class="anchor" name="619ac58213bbff56398934e76dd1079f"></a><!-- doxytag: member="operations_research::IntVar::OldMax" ref="619ac58213bbff56398934e76dd1079f" args="() const =0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual int64 operations_research::IntVar::OldMax           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns the previous max. 
<p>

<p>Implemented in <a class="el" href="classoperations__research_1_1DomainIntVar.html#3511c9cad73b4e91dbecd3ca31ec5432">operations_research::DomainIntVar</a>, <a class="el" href="classoperations__research_1_1BooleanVar.html#79aa3faacd119f81dd7b41f0d2392382">operations_research::BooleanVar</a>, <a class="el" href="classoperations__research_1_1IntConst.html#c02cab9e974947f7a426048f1a618ed8">operations_research::IntConst</a>, <a class="el" href="classoperations__research_1_1PlusCstIntVar.html#0b4c4f5492665014624b8a63d553f431">operations_research::PlusCstIntVar</a>, <a class="el" href="classoperations__research_1_1PlusCstDomainIntVar.html#9b124b1d350deb14383fa9cf310343a6">operations_research::PlusCstDomainIntVar</a>, <a class="el" href="classoperations__research_1_1SubCstIntVar.html#34684404d88d33eee9ac38473e7a6885">operations_research::SubCstIntVar</a>, <a class="el" href="classoperations__research_1_1OppIntVar.html#edbfa921907da28253a266ac295f0293">operations_research::OppIntVar</a>, <a class="el" href="classoperations__research_1_1TimesPosCstIntVar.html#bd9e6876678f3e6c0ebfe830c37032dc">operations_research::TimesPosCstIntVar</a>, and <a class="el" href="classoperations__research_1_1TimesPosCstBoolVar.html#88ee521b22be15dcce4d394880fac2d8">operations_research::TimesPosCstBoolVar</a>.</p>

</div>
</div><p>
<a class="anchor" name="df679daa90a28ec8411a0e4ba8f6de0b"></a><!-- doxytag: member="operations_research::IntVar::VarType" ref="df679daa90a28ec8411a0e4ba8f6de0b" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int operations_research::IntVar::VarType           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
namespace 
<p>

<p>Reimplemented in <a class="el" href="classoperations__research_1_1DomainIntVar.html#c501358a808443fac1f876b93ca4e798">operations_research::DomainIntVar</a>, <a class="el" href="classoperations__research_1_1BooleanVar.html#db6966ef2c47a0b035f566229df7cc0e">operations_research::BooleanVar</a>, <a class="el" href="classoperations__research_1_1IntConst.html#0b9889c73685d8914fa1a97235e2f60f">operations_research::IntConst</a>, <a class="el" href="classoperations__research_1_1PlusCstIntVar.html#bb9e6c30b92a0bcd60dbaf85a2cee38a">operations_research::PlusCstIntVar</a>, <a class="el" href="classoperations__research_1_1PlusCstDomainIntVar.html#fd5f1e2e913f580ccbe642816e3fb9d4">operations_research::PlusCstDomainIntVar</a>, <a class="el" href="classoperations__research_1_1SubCstIntVar.html#a95dd8dc8eeac2bf87db032dddd5fb2a">operations_research::SubCstIntVar</a>, <a class="el" href="classoperations__research_1_1OppIntVar.html#c0f807952b818f537e50f0b4a7088d85">operations_research::OppIntVar</a>, <a class="el" href="classoperations__research_1_1TimesPosCstIntVar.html#37812e3a06d96ab4e302026996934e6e">operations_research::TimesPosCstIntVar</a>, and <a class="el" href="classoperations__research_1_1TimesPosCstBoolVar.html#12949cbfcfa5d4205d61b21af8f42fb9">operations_research::TimesPosCstBoolVar</a>.</p>

<p>Definition at line <a class="el" href="expressions_8cc-source.html#l00114">114</a> of file <a class="el" href="expressions_8cc-source.html">expressions.cc</a>.</p>

</div>
</div><p>
<a class="anchor" name="ebba5298c61c2ace8bec1217b6906ff1"></a><!-- doxytag: member="operations_research::IntVar::DISALLOW_COPY_AND_ASSIGN" ref="ebba5298c61c2ace8bec1217b6906ff1" args="(IntVar)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">operations_research::IntVar::DISALLOW_COPY_AND_ASSIGN           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classoperations__research_1_1IntVar.html">IntVar</a>&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<hr>The documentation for this class was generated from the following files:<ul>
<li>google3/constraint_solver/<a class="el" href="constraint__solver_8h-source.html">constraint_solver.h</a><li>google3/constraint_solver/<a class="el" href="expressions_8cc-source.html">expressions.cc</a></ul>
</div>

  <!-- Start of footer. -->
  <table width=100% cellpadding=0 cellspacing=0 border=0>
    <tr valign=top>
      <td colspan=2 height=10></td>
    </tr>
    <tr valign=top>
      <td colspan=2 bgcolor=#389613 height=3></td>
    </tr>
  </table>

  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br />

  
  </body>
</html>
