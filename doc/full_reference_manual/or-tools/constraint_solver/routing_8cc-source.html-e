<!-- Good morning, Mr. Phelps. -->
<html>
  <head>
    <meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
    <title>google3/constraint_solver/routing.cc Source File - Doxy</title>
    <link rel="shortcut icon" href="../../favicon.ico">
    <!-- Both stylesheets are supplied by Doxygen, with maybe minor tweaks from Google. -->
    <link href="../../doxygen.css" rel="stylesheet" type="text/css">
    <link href="../../tabs.css" rel="stylesheet" type="text/css">
  </head>

  <body topmargin=0 leftmargin=20 bottommargin=0 rightmargin=20 marginwidth=20 marginheight=0>
  <!-- Second part of the secret behind Doxy logo always having the word "Doxy" with the color of the day. -->
  <style>
    a.doxy_logo:hover {
      background-color: #389613
    }
  </style>

  <table width=100% cellpadding=0 cellspacing=0 border=0>
    <!-- Top horizontal line with the color of the day. -->
    <tr valign=top>
      <td colspan=3 bgcolor=#389613 height=3></td>
    </tr>

    <!-- Header row with the links at the right. -->
    <tr valign=top>
      <td colspan=3 align=right>
        <font size=-1>
          Generated on: <font color=#389613><b>Fri Apr  1 14:13:18 PDT 2011</b></font>
            for <b>custom file set</b>
        </font>
      </td>
    </tr>

    <!-- Header row with the logo and the search form. -->
    <tr valign=top>
      <!-- Logo. -->
      <td align=left width=150>
        <table width=150 height=54 cellpadding=0 cellspacing=0 border=0>
          <tr valign=top>
            <!-- First part of the secret behind Doxy logo always having the word "Doxy" with the color of the day. -->
            <td bgcolor=#389613>
              <a class="doxy_logo" href="../../index.html"><img src="../../doxy_logo.png" alt="Doxy" border=0></a>
            </td>
          </tr>
        </table>
      </td>
    </tr>

    <!-- Tiny vertical space below the form. -->
    <tr valign=top>
      <td colspan=3 height=3></td>
    </tr>
  </table>

  <!-- Header navigation row. -->
  <div class="memproto">
    <table width=100% cellpadding=0 cellspacing=0 border=0>
      <tr>
        <td align=left style="padding-left: 20px"><font size=+1><b><tt><font color=#333333>//
            <a href="../../index.html"><font color=#389613>doxy</font></a>/</font>
            <a href="../../google3/index.html">google3</a>/
            <a href="../../google3/constraint_solver/index.html">constraint_solver</a>/
            </tt></b></font>
        </td>
      </tr>
    </table>
  </div>
  <br />
    <!-- No subdirs found. -->
  <!-- End of header. -->
<!-- Generated by Doxygen 1.5.6 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.html"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.html"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="namespaces.html"><span>Namespaces</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
<h1>google3/constraint_solver/routing.cc</h1><a href="routing_8cc.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">// Copyright 2010 Google</span>
<a name="l00002"></a>00002 <span class="comment">// Licensed under the Apache License, Version 2.0 (the "License");</span>
<a name="l00003"></a>00003 <span class="comment">// you may not use this file except in compliance with the License.</span>
<a name="l00004"></a>00004 <span class="comment">// You may obtain a copy of the License at</span>
<a name="l00005"></a>00005 <span class="comment">//</span>
<a name="l00006"></a>00006 <span class="comment">//     http://www.apache.org/licenses/LICENSE-2.0</span>
<a name="l00007"></a>00007 <span class="comment">//</span>
<a name="l00008"></a>00008 <span class="comment">// Unless required by applicable law or agreed to in writing, software</span>
<a name="l00009"></a>00009 <span class="comment">// distributed under the License is distributed on an "AS IS" BASIS,</span>
<a name="l00010"></a>00010 <span class="comment">// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span>
<a name="l00011"></a>00011 <span class="comment">// See the License for the specific language governing permissions and</span>
<a name="l00012"></a>00012 <span class="comment">// limitations under the License.</span>
<a name="l00013"></a>00013 
<a name="l00014"></a>00014 <span class="preprocessor">#include "<a class="code" href="routing_8h.html">constraint_solver/routing.h</a>"</span>
<a name="l00015"></a>00015 
<a name="l00016"></a>00016 <span class="preprocessor">#include &lt;algorithm&gt;</span>
<a name="l00017"></a>00017 <span class="preprocessor">#include "base/callback.h"</span>
<a name="l00018"></a>00018 <span class="preprocessor">#include "base/commandlineflags.h"</span>
<a name="l00019"></a>00019 <span class="preprocessor">#include "base/integral_types.h"</span>
<a name="l00020"></a>00020 <span class="preprocessor">#include "base/logging.h"</span>
<a name="l00021"></a>00021 <span class="preprocessor">#include "base/scoped_ptr.h"</span>
<a name="l00022"></a>00022 <span class="preprocessor">#include "base/concise_iterator.h"</span>
<a name="l00023"></a>00023 <span class="preprocessor">#include "base/map-util.h"</span>
<a name="l00024"></a>00024 <span class="preprocessor">#include "base/stl_util-inl.h"</span>
<a name="l00025"></a>00025 <span class="preprocessor">#include "<a class="code" href="constraint__solveri_8h.html">constraint_solver/constraint_solveri.h</a>"</span>
<a name="l00026"></a>00026 
<a name="l00027"></a>00027 <span class="comment">// Neighborhood deactivation</span>
<a name="l00028"></a>00028 <a class="code" href="constraint__solver_8cc.html#719402189437f220cea9507e5677fb6b" title="Licensed under the Apache License, Version 2.0 (the &amp;quot;License&amp;quot;); you may...">DEFINE_bool</a>(routing_no_lns, <span class="keyword">false</span>,
<a name="l00029"></a>00029             <span class="stringliteral">"Routing: forbids use of Large Neighborhood Search."</span>);
<a name="l00030"></a>00030 <a class="code" href="constraint__solver_8cc.html#719402189437f220cea9507e5677fb6b" title="Licensed under the Apache License, Version 2.0 (the &amp;quot;License&amp;quot;); you may...">DEFINE_bool</a>(routing_no_relocate, <span class="keyword">false</span>,
<a name="l00031"></a>00031             <span class="stringliteral">"Routing: forbids use of Relocate neighborhood."</span>);
<a name="l00032"></a>00032 <a class="code" href="constraint__solver_8cc.html#719402189437f220cea9507e5677fb6b" title="Licensed under the Apache License, Version 2.0 (the &amp;quot;License&amp;quot;); you may...">DEFINE_bool</a>(routing_no_exchange, <span class="keyword">false</span>,
<a name="l00033"></a>00033             <span class="stringliteral">"Routing: forbids use of Exchange neighborhood."</span>);
<a name="l00034"></a>00034 <a class="code" href="constraint__solver_8cc.html#719402189437f220cea9507e5677fb6b" title="Licensed under the Apache License, Version 2.0 (the &amp;quot;License&amp;quot;); you may...">DEFINE_bool</a>(routing_no_cross, <span class="keyword">false</span>,
<a name="l00035"></a>00035             <span class="stringliteral">"Routing: forbids use of Cross neighborhood."</span>);
<a name="l00036"></a>00036 <a class="code" href="constraint__solver_8cc.html#719402189437f220cea9507e5677fb6b" title="Licensed under the Apache License, Version 2.0 (the &amp;quot;License&amp;quot;); you may...">DEFINE_bool</a>(routing_no_2opt, <span class="keyword">false</span>,
<a name="l00037"></a>00037             <span class="stringliteral">"Routing: forbids use of 2Opt neighborhood."</span>);
<a name="l00038"></a>00038 <a class="code" href="constraint__solver_8cc.html#719402189437f220cea9507e5677fb6b" title="Licensed under the Apache License, Version 2.0 (the &amp;quot;License&amp;quot;); you may...">DEFINE_bool</a>(routing_no_oropt, <span class="keyword">false</span>,
<a name="l00039"></a>00039             <span class="stringliteral">"Routing: forbids use of OrOpt neighborhood."</span>);
<a name="l00040"></a>00040 <a class="code" href="constraint__solver_8cc.html#719402189437f220cea9507e5677fb6b" title="Licensed under the Apache License, Version 2.0 (the &amp;quot;License&amp;quot;); you may...">DEFINE_bool</a>(routing_no_make_active, <span class="keyword">false</span>,
<a name="l00041"></a>00041             <span class="stringliteral">"Routing: forbids use of MakeActive/SwapActive/MakeInactive "</span>
<a name="l00042"></a>00042             <span class="stringliteral">"neighborhoods."</span>);
<a name="l00043"></a>00043 <a class="code" href="constraint__solver_8cc.html#719402189437f220cea9507e5677fb6b" title="Licensed under the Apache License, Version 2.0 (the &amp;quot;License&amp;quot;); you may...">DEFINE_bool</a>(routing_no_lkh, <span class="keyword">false</span>,
<a name="l00044"></a>00044             <span class="stringliteral">"Routing: forbids use of LKH neighborhood."</span>);
<a name="l00045"></a>00045 <a class="code" href="constraint__solver_8cc.html#719402189437f220cea9507e5677fb6b" title="Licensed under the Apache License, Version 2.0 (the &amp;quot;License&amp;quot;); you may...">DEFINE_bool</a>(routing_no_tsp, <span class="keyword">true</span>,
<a name="l00046"></a>00046             <span class="stringliteral">"Routing: forbids use of TSPOpt neighborhood."</span>);
<a name="l00047"></a>00047 <a class="code" href="constraint__solver_8cc.html#719402189437f220cea9507e5677fb6b" title="Licensed under the Apache License, Version 2.0 (the &amp;quot;License&amp;quot;); you may...">DEFINE_bool</a>(routing_no_tsplns, <span class="keyword">true</span>,
<a name="l00048"></a>00048             <span class="stringliteral">"Routing: forbids use of TSPLNS neighborhood."</span>);
<a name="l00049"></a>00049 <a class="code" href="constraint__solver_8cc.html#719402189437f220cea9507e5677fb6b" title="Licensed under the Apache License, Version 2.0 (the &amp;quot;License&amp;quot;); you may...">DEFINE_bool</a>(routing_use_extended_swap_active, <span class="keyword">false</span>,
<a name="l00050"></a>00050             <span class="stringliteral">"Routing: use extended version of SwapActive neighborhood."</span>);
<a name="l00051"></a>00051 
<a name="l00052"></a>00052 <span class="comment">// Search limits</span>
<a name="l00053"></a>00053 <a class="code" href="routing_8cc.html#b5177238cb2227eeb01872f930d8b7c9" title="Search limits.">DEFINE_int64</a>(routing_solution_limit, kint64max,
<a name="l00054"></a>00054              <span class="stringliteral">"Routing: number of solutions limit."</span>);
<a name="l00055"></a>00055 <a class="code" href="routing_8cc.html#b5177238cb2227eeb01872f930d8b7c9" title="Search limits.">DEFINE_int64</a>(routing_time_limit, kint64max,
<a name="l00056"></a>00056              <span class="stringliteral">"Routing: time limit in ms."</span>);
<a name="l00057"></a>00057 <a class="code" href="routing_8cc.html#b5177238cb2227eeb01872f930d8b7c9" title="Search limits.">DEFINE_int64</a>(routing_lns_time_limit, 100,
<a name="l00058"></a>00058              <span class="stringliteral">"Routing: time limit in ms for LNS sub-decisionbuilder."</span>);
<a name="l00059"></a>00059 
<a name="l00060"></a>00060 <span class="comment">// Meta-heuritics</span>
<a name="l00061"></a>00061 <a class="code" href="constraint__solver_8cc.html#719402189437f220cea9507e5677fb6b" title="Licensed under the Apache License, Version 2.0 (the &amp;quot;License&amp;quot;); you may...">DEFINE_bool</a>(routing_guided_local_search, <span class="keyword">false</span>, <span class="stringliteral">"Routing: use GLS."</span>);
<a name="l00062"></a>00062 <a class="code" href="routing_8cc.html#e8f9edae9aaddf08e513b2e82578880b">DEFINE_double</a>(routing_guided_local_search_lamda_coefficient, 0.1,
<a name="l00063"></a>00063               <span class="stringliteral">"Lamda coefficient in GLS."</span>);
<a name="l00064"></a>00064 <a class="code" href="constraint__solver_8cc.html#719402189437f220cea9507e5677fb6b" title="Licensed under the Apache License, Version 2.0 (the &amp;quot;License&amp;quot;); you may...">DEFINE_bool</a>(routing_simulated_annealing, <span class="keyword">false</span>,
<a name="l00065"></a>00065             <span class="stringliteral">"Routing: use simulated annealing."</span>);
<a name="l00066"></a>00066 <a class="code" href="constraint__solver_8cc.html#719402189437f220cea9507e5677fb6b" title="Licensed under the Apache License, Version 2.0 (the &amp;quot;License&amp;quot;); you may...">DEFINE_bool</a>(routing_tabu_search, <span class="keyword">false</span>, <span class="stringliteral">"Routing: use tabu search."</span>);
<a name="l00067"></a>00067 
<a name="l00068"></a>00068 <span class="comment">// Search control</span>
<a name="l00069"></a>00069 <a class="code" href="constraint__solver_8cc.html#719402189437f220cea9507e5677fb6b" title="Licensed under the Apache License, Version 2.0 (the &amp;quot;License&amp;quot;); you may...">DEFINE_bool</a>(routing_dfs, <span class="keyword">false</span>,
<a name="l00070"></a>00070             <span class="stringliteral">"Routing: use a complete deoth-first search."</span>);
<a name="l00071"></a>00071 <a class="code" href="routing_8cc.html#4de83d942d51ea53519a5a0c0e46dc5e">DEFINE_string</a>(routing_first_solution, <span class="stringliteral">""</span>,
<a name="l00072"></a>00072               <span class="stringliteral">"Routing: first solution heuristic;possible values are "</span>
<a name="l00073"></a>00073               <span class="stringliteral">"Default, GlobalCheapestArc, LocalCheapestArc, PathCheapestArc."</span>);
<a name="l00074"></a>00074 <a class="code" href="constraint__solver_8cc.html#719402189437f220cea9507e5677fb6b" title="Licensed under the Apache License, Version 2.0 (the &amp;quot;License&amp;quot;); you may...">DEFINE_bool</a>(routing_use_first_solution_dive, <span class="keyword">false</span>,
<a name="l00075"></a>00075             <span class="stringliteral">"Dive (left-branch) for first solution."</span>);
<a name="l00076"></a>00076 <a class="code" href="routing_8cc.html#b5177238cb2227eeb01872f930d8b7c9" title="Search limits.">DEFINE_int64</a>(routing_optimization_step, 1, <span class="stringliteral">"Optimization step."</span>);
<a name="l00077"></a>00077 
<a name="l00078"></a>00078 <span class="comment">// Filtering control</span>
<a name="l00079"></a>00079 
<a name="l00080"></a>00080 <a class="code" href="constraint__solver_8cc.html#719402189437f220cea9507e5677fb6b" title="Licensed under the Apache License, Version 2.0 (the &amp;quot;License&amp;quot;); you may...">DEFINE_bool</a>(routing_use_objective_filter, <span class="keyword">true</span>,
<a name="l00081"></a>00081             <span class="stringliteral">"Use objective filter to speed up local search."</span>);
<a name="l00082"></a>00082 <a class="code" href="constraint__solver_8cc.html#719402189437f220cea9507e5677fb6b" title="Licensed under the Apache License, Version 2.0 (the &amp;quot;License&amp;quot;); you may...">DEFINE_bool</a>(routing_use_path_cumul_filter, <span class="keyword">true</span>,
<a name="l00083"></a>00083             <span class="stringliteral">"Use PathCumul constraint filter to speed up local search."</span>);
<a name="l00084"></a>00084 
<a name="l00085"></a>00085 <span class="comment">// Misc</span>
<a name="l00086"></a>00086 <a class="code" href="constraint__solver_8cc.html#719402189437f220cea9507e5677fb6b" title="Licensed under the Apache License, Version 2.0 (the &amp;quot;License&amp;quot;); you may...">DEFINE_bool</a>(routing_cache_callbacks, <span class="keyword">false</span>, <span class="stringliteral">"Cache callback calls."</span>);
<a name="l00087"></a>00087 <a class="code" href="routing_8cc.html#b5177238cb2227eeb01872f930d8b7c9" title="Search limits.">DEFINE_int64</a>(routing_max_cache_size, 1000,
<a name="l00088"></a>00088              <span class="stringliteral">"Maximum cache size when callback caching is on."</span>);
<a name="l00089"></a>00089 <a class="code" href="constraint__solver_8cc.html#719402189437f220cea9507e5677fb6b" title="Licensed under the Apache License, Version 2.0 (the &amp;quot;License&amp;quot;); you may...">DEFINE_bool</a>(routing_trace, <span class="keyword">false</span>, <span class="stringliteral">"Routing: trace search."</span>);
<a name="l00090"></a>00090 <a class="code" href="constraint__solver_8cc.html#719402189437f220cea9507e5677fb6b" title="Licensed under the Apache License, Version 2.0 (the &amp;quot;License&amp;quot;); you may...">DEFINE_bool</a>(routing_use_homogeneous_costs, <span class="keyword">true</span>,
<a name="l00091"></a>00091             <span class="stringliteral">"Routing: use homogeneous cost model when possible."</span>);
<a name="l00092"></a>00092 
<a name="l00093"></a>00093 <span class="keyword">namespace </span>operations_research {
<a name="l00094"></a>00094 
<a name="l00095"></a>00095 <span class="comment">// Cached callbacks</span>
<a name="l00096"></a>00096 
<a name="l00097"></a><a class="code" href="classoperations__research_1_1RoutingCache.html">00097</a> <span class="keyword">class </span><a class="code" href="classoperations__research_1_1RoutingCache.html" title="Cached callbacks.">RoutingCache</a> {
<a name="l00098"></a>00098  <span class="keyword">public</span>:
<a name="l00099"></a><a class="code" href="classoperations__research_1_1RoutingCache.html#e805169c1a6000e551a9dfe498b8ee8b">00099</a>   <a class="code" href="classoperations__research_1_1RoutingCache.html#e805169c1a6000e551a9dfe498b8ee8b">RoutingCache</a>(<a class="code" href="classoperations__research_1_1Solver.html#487b521ee809f0f4ee397b9f6ea06f59">Solver::IndexEvaluator2</a>* callback, <span class="keywordtype">int</span> size) :
<a name="l00100"></a>00100       <a class="code" href="classoperations__research_1_1RoutingCache.html#0fda51cfd6702e27413716ed87226456">cache_</a>(size), <a class="code" href="classoperations__research_1_1RoutingCache.html#238c9cf961c4dc19a8e0646f9d518ba2">callback_</a>(callback) {
<a name="l00101"></a>00101     callback-&gt;CheckIsRepeatable();
<a name="l00102"></a>00102   }
<a name="l00103"></a><a class="code" href="classoperations__research_1_1RoutingCache.html#8d8b3953a8315c6d565429cb18fa5453">00103</a>   int64 <a class="code" href="classoperations__research_1_1RoutingCache.html#8d8b3953a8315c6d565429cb18fa5453">Run</a>(int64 i, int64 j) {
<a name="l00104"></a>00104     <span class="comment">// This method does lazy caching of results of callbacks: first</span>
<a name="l00105"></a>00105     <span class="comment">// checks if it has been run with these parameters before, and</span>
<a name="l00106"></a>00106     <span class="comment">// returns previous result if so, or runs underlaying callback and</span>
<a name="l00107"></a>00107     <span class="comment">// stores its result.</span>
<a name="l00108"></a>00108     int64 cached_value = 0;
<a name="l00109"></a>00109     <span class="keywordflow">if</span> (!FindCopy(<a class="code" href="classoperations__research_1_1RoutingCache.html#0fda51cfd6702e27413716ed87226456">cache_</a>[i], j, &amp;cached_value)) {
<a name="l00110"></a>00110       cached_value = <a class="code" href="classoperations__research_1_1RoutingCache.html#238c9cf961c4dc19a8e0646f9d518ba2">callback_</a>-&gt;Run(i, j);
<a name="l00111"></a>00111       <a class="code" href="classoperations__research_1_1RoutingCache.html#0fda51cfd6702e27413716ed87226456">cache_</a>[i][j] = cached_value;
<a name="l00112"></a>00112     }
<a name="l00113"></a>00113     <span class="keywordflow">return</span> cached_value;
<a name="l00114"></a>00114   }
<a name="l00115"></a>00115  <span class="keyword">private</span>:
<a name="l00116"></a><a class="code" href="classoperations__research_1_1RoutingCache.html#0fda51cfd6702e27413716ed87226456">00116</a>   vector&lt;hash_map&lt;int, int64&gt; &gt; <a class="code" href="classoperations__research_1_1RoutingCache.html#0fda51cfd6702e27413716ed87226456">cache_</a>;
<a name="l00117"></a><a class="code" href="classoperations__research_1_1RoutingCache.html#238c9cf961c4dc19a8e0646f9d518ba2">00117</a>   scoped_ptr&lt;Solver::IndexEvaluator2&gt; <a class="code" href="classoperations__research_1_1RoutingCache.html#238c9cf961c4dc19a8e0646f9d518ba2">callback_</a>;
<a name="l00118"></a>00118 };
<a name="l00119"></a>00119 
<a name="l00120"></a><a class="code" href="namespaceoperations__research_1_1anonymous__namespace_02routing_8cc_03.html">00120</a> <span class="keyword">namespace </span>{
<a name="l00121"></a>00121 
<a name="l00122"></a>00122 <span class="comment">// PathCumul filter</span>
<a name="l00123"></a>00123 <span class="comment">// TODO(user): Move this to local_search.cc.</span>
<a name="l00124"></a>00124 
<a name="l00125"></a><a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1PathCumulFilter.html">00125</a> <span class="keyword">class </span><a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1PathCumulFilter.html" title="PathCumul filter.">PathCumulFilter</a> : <span class="keyword">public</span> <a class="code" href="classoperations__research_1_1IntVarLocalSearchFilter.html" title="IntVarLocalSearchFilter.">IntVarLocalSearchFilter</a> {
<a name="l00126"></a>00126  <span class="keyword">public</span>:
<a name="l00127"></a>00127   <span class="comment">// Does not take ownership of evaluator.</span>
<a name="l00128"></a>00128   <a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1PathCumulFilter.html" title="PathCumul filter.">PathCumulFilter</a>(<span class="keyword">const</span> <a class="code" href="classoperations__research_1_1IntVar.html" title="The class IntVar is a subset of IntExpr.">IntVar</a>* <span class="keyword">const</span>* nexts,
<a name="l00129"></a>00129                   <span class="keywordtype">int</span> nexts_size,
<a name="l00130"></a>00130                   <span class="keyword">const</span> <a class="code" href="classoperations__research_1_1IntVar.html" title="The class IntVar is a subset of IntExpr.">IntVar</a>* <span class="keyword">const</span>* cumuls,
<a name="l00131"></a>00131                   <span class="keywordtype">int</span> cumuls_size,
<a name="l00132"></a>00132                   <a class="code" href="classoperations__research_1_1Solver.html#487b521ee809f0f4ee397b9f6ea06f59">Solver::IndexEvaluator2</a>* evaluator,
<a name="l00133"></a>00133                   <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; name);
<a name="l00134"></a><a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1PathCumulFilter.html#0b71969511420c15bb5d38b7e13f631d">00134</a>   <span class="keyword">virtual</span> ~<a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1PathCumulFilter.html" title="PathCumul filter.">PathCumulFilter</a>() {}
<a name="l00135"></a>00135   <span class="keyword">virtual</span> <span class="keywordtype">bool</span> Accept(<span class="keyword">const</span> <a class="code" href="classoperations__research_1_1Assignment.html" title="Assignment.">Assignment</a>* delta,
<a name="l00136"></a>00136                       <span class="keyword">const</span> <a class="code" href="classoperations__research_1_1Assignment.html" title="Assignment.">Assignment</a>* deltadelta);
<a name="l00137"></a>00137   <span class="keyword">virtual</span> <span class="keywordtype">void</span> OnSynchronize();
<a name="l00138"></a>00138  <span class="keyword">private</span>:
<a name="l00139"></a><a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1PathCumulFilter.html#de7f2d33e74f5e0cdb970b57a030a155">00139</a>   scoped_array&lt;IntVar*&gt; cumuls_;
<a name="l00140"></a><a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1PathCumulFilter.html#2726a7b024d652550af32a9b08576bc4">00140</a>   <span class="keyword">const</span> <span class="keywordtype">int</span> cumuls_size_;
<a name="l00141"></a><a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1PathCumulFilter.html#ae02ad32ba063311ac2ece2c15203793">00141</a>   vector&lt;int64&gt; saved_nexts_;
<a name="l00142"></a><a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1PathCumulFilter.html#5981b2739e1c13651af0c23556e59e49">00142</a>   vector&lt;int64&gt; node_path_starts_;
<a name="l00143"></a><a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1PathCumulFilter.html#609d65e20b8ac4f0e6693757d3439615">00143</a>   <a class="code" href="classoperations__research_1_1Solver.html#487b521ee809f0f4ee397b9f6ea06f59">Solver::IndexEvaluator2</a>* <span class="keyword">const</span> evaluator_;
<a name="l00144"></a><a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1PathCumulFilter.html#252cfed59e9e41dbdabf2bfdb78356ef">00144</a>   <span class="keyword">const</span> <span class="keywordtype">string</span> name_;
<a name="l00145"></a><a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1PathCumulFilter.html#899676210ffb31e552bead60bf023ff9">00145</a>   <span class="keyword">static</span> <span class="keyword">const</span> int64 <a class="code" href="namespaceoperations__research.html#af7bc335dbf1cd813265847ceaacc807" title="namespace">kUnassigned</a>;
<a name="l00146"></a>00146 };
<a name="l00147"></a>00147 
<a name="l00148"></a>00148 <span class="keyword">const</span> int64 <a class="code" href="namespaceoperations__research.html#af7bc335dbf1cd813265847ceaacc807" title="namespace">PathCumulFilter::kUnassigned</a> = -1;
<a name="l00149"></a>00149 
<a name="l00150"></a><a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1PathCumulFilter.html#6827de002aa605637bd5d9fcf19218ed">00150</a> PathCumulFilter::PathCumulFilter(<span class="keyword">const</span> <a class="code" href="classoperations__research_1_1IntVar.html" title="The class IntVar is a subset of IntExpr.">IntVar</a>* <span class="keyword">const</span>* nexts,
<a name="l00151"></a>00151                                  <span class="keywordtype">int</span> nexts_size,
<a name="l00152"></a>00152                                  <span class="keyword">const</span> <a class="code" href="classoperations__research_1_1IntVar.html" title="The class IntVar is a subset of IntExpr.">IntVar</a>* <span class="keyword">const</span>* cumuls,
<a name="l00153"></a>00153                                  <span class="keywordtype">int</span> cumuls_size,
<a name="l00154"></a>00154                                  <a class="code" href="classoperations__research_1_1Solver.html#487b521ee809f0f4ee397b9f6ea06f59">Solver::IndexEvaluator2</a>* evaluator,
<a name="l00155"></a>00155                                  <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; name)
<a name="l00156"></a>00156     : <a class="code" href="classoperations__research_1_1IntVarLocalSearchFilter.html" title="IntVarLocalSearchFilter.">IntVarLocalSearchFilter</a>(nexts, nexts_size),
<a name="l00157"></a>00157       cumuls_size_(cumuls_size),
<a name="l00158"></a>00158       saved_nexts_(nexts_size),
<a name="l00159"></a>00159       node_path_starts_(cumuls_size),
<a name="l00160"></a>00160       evaluator_(evaluator),
<a name="l00161"></a>00161       name_(name) {
<a name="l00162"></a>00162   <a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1PathCumulFilter.html#de7f2d33e74f5e0cdb970b57a030a155">cumuls_</a>.reset(<span class="keyword">new</span> <a class="code" href="classoperations__research_1_1IntVar.html" title="The class IntVar is a subset of IntExpr.">IntVar</a>*[<a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1PathCumulFilter.html#2726a7b024d652550af32a9b08576bc4">cumuls_size_</a>]);
<a name="l00163"></a>00163   memcpy(<a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1PathCumulFilter.html#de7f2d33e74f5e0cdb970b57a030a155">cumuls_</a>.get(), cumuls, cumuls_size_ * <span class="keyword">sizeof</span>(*cumuls));
<a name="l00164"></a>00164 }
<a name="l00165"></a>00165 
<a name="l00166"></a>00166 <span class="comment">// Complexity: O(Sum(Length(paths modified)) + #paths modified ^ 2).</span>
<a name="l00167"></a>00167 <span class="comment">// (#paths modified is usually very small).</span>
<a name="l00168"></a>00168 <span class="keywordtype">bool</span> PathCumulFilter::Accept(<span class="keyword">const</span> <a class="code" href="classoperations__research_1_1Assignment.html" title="Assignment.">Assignment</a>* delta,
<a name="l00169"></a>00169                              <span class="keyword">const</span> <a class="code" href="classoperations__research_1_1Assignment.html" title="Assignment.">Assignment</a>* deltadelta) {
<a name="l00170"></a>00170   <span class="keyword">const</span> <a class="code" href="classoperations__research_1_1Assignment.html#8f1f48670d847343b04f8bacd77686e8">Assignment::IntContainer</a>&amp; container = delta-&gt;<a class="code" href="classoperations__research_1_1Assignment.html#e33b6ff4f1647554a2c2e8a02226345d">IntVarContainer</a>();
<a name="l00171"></a>00171   <span class="keyword">const</span> <span class="keywordtype">int</span> delta_size = container.Size();
<a name="l00172"></a>00172   <span class="comment">// Determining touched paths.</span>
<a name="l00173"></a>00173   vector&lt;int64&gt; touched_paths;
<a name="l00174"></a>00174   <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; delta_size; ++i) {
<a name="l00175"></a>00175     <span class="keyword">const</span> <a class="code" href="classoperations__research_1_1IntVarElement.html" title="IntVarElement.">IntVarElement</a>&amp; new_element = container.Element(i);
<a name="l00176"></a>00176     <span class="keyword">const</span> <a class="code" href="classoperations__research_1_1IntVar.html" title="The class IntVar is a subset of IntExpr.">IntVar</a>* <span class="keyword">const</span> var = new_element.<a class="code" href="classoperations__research_1_1IntVarElement.html#b732c8f1bf96293b9d9d7ab0136eeaaa">Var</a>();
<a name="l00177"></a>00177     int64 index = <a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1PathCumulFilter.html#899676210ffb31e552bead60bf023ff9">kUnassigned</a>;
<a name="l00178"></a>00178     <span class="keywordflow">if</span> (<a class="code" href="classoperations__research_1_1IntVarLocalSearchFilter.html#ef04544e0f3d9362ef73a027aa733553">FindIndex</a>(var, &amp;index)) {
<a name="l00179"></a>00179       <span class="keyword">const</span> int64 start = <a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1PathCumulFilter.html#5981b2739e1c13651af0c23556e59e49">node_path_starts_</a>[index];
<a name="l00180"></a>00180       <span class="keywordflow">if</span> (start != <a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1PathCumulFilter.html#899676210ffb31e552bead60bf023ff9">kUnassigned</a>
<a name="l00181"></a>00181           &amp;&amp; find(touched_paths.begin(), touched_paths.end(), start)
<a name="l00182"></a>00182           == touched_paths.end()) {
<a name="l00183"></a>00183         touched_paths.push_back(start);
<a name="l00184"></a>00184       }
<a name="l00185"></a>00185     }
<a name="l00186"></a>00186   }
<a name="l00187"></a>00187   <span class="comment">// Checking feasibility of touched paths.</span>
<a name="l00188"></a>00188   <span class="keyword">const</span> <span class="keywordtype">int</span> touched_paths_size = touched_paths.size();
<a name="l00189"></a>00189   <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; touched_paths_size; ++i) {
<a name="l00190"></a>00190     int64 node = touched_paths[i];
<a name="l00191"></a>00191     int64 cumul = <a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1PathCumulFilter.html#de7f2d33e74f5e0cdb970b57a030a155">cumuls_</a>[node]-&gt;Min();
<a name="l00192"></a>00192     <span class="keywordflow">while</span> (node &lt; <a class="code" href="classoperations__research_1_1IntVarLocalSearchFilter.html#9045a67d0d2cf4daa65b2a12cb8ed6e8">Size</a>()) {
<a name="l00193"></a>00193       <span class="keyword">const</span> IntVar* <span class="keyword">const</span> next_var = <a class="code" href="classoperations__research_1_1IntVarLocalSearchFilter.html#521ec3db6e1d61bf5699dcb8193d4de4">Var</a>(node);
<a name="l00194"></a>00194       int64 next = <a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1PathCumulFilter.html#ae02ad32ba063311ac2ece2c15203793">saved_nexts_</a>[node];
<a name="l00195"></a>00195       <span class="keywordflow">if</span> (container.Contains(next_var)) {
<a name="l00196"></a>00196         <span class="keyword">const</span> IntVarElement&amp; element = container.Element(next_var);
<a name="l00197"></a>00197         <span class="keywordflow">if</span> (element.Bound()) {
<a name="l00198"></a>00198           next = element.Value();
<a name="l00199"></a>00199         } <span class="keywordflow">else</span> {
<a name="l00200"></a>00200           <span class="comment">// LNS detected, return true since path was ok up to now.</span>
<a name="l00201"></a>00201           <span class="keywordflow">return</span> <span class="keyword">true</span>;
<a name="l00202"></a>00202         }
<a name="l00203"></a>00203       }
<a name="l00204"></a>00204       cumul += <a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1PathCumulFilter.html#609d65e20b8ac4f0e6693757d3439615">evaluator_</a>-&gt;Run(node, next);
<a name="l00205"></a>00205       <span class="keywordflow">if</span> (cumul &gt; <a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1PathCumulFilter.html#de7f2d33e74f5e0cdb970b57a030a155">cumuls_</a>[next]-&gt;Max()) {
<a name="l00206"></a>00206         <span class="keywordflow">return</span> <span class="keyword">false</span>;
<a name="l00207"></a>00207       }
<a name="l00208"></a>00208       cumul = max(<a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1PathCumulFilter.html#de7f2d33e74f5e0cdb970b57a030a155">cumuls_</a>[next]-&gt;Min(), cumul);
<a name="l00209"></a>00209       node = next;
<a name="l00210"></a>00210     }
<a name="l00211"></a>00211   }
<a name="l00212"></a>00212   <span class="keywordflow">return</span> <span class="keyword">true</span>;
<a name="l00213"></a>00213 }
<a name="l00214"></a>00214 
<a name="l00215"></a>00215 <span class="keywordtype">void</span> <a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1PathCumulFilter.html#587464abd015221da63b6910f7cff214">PathCumulFilter::OnSynchronize</a>() {
<a name="l00216"></a>00216   <span class="keyword">const</span> <span class="keywordtype">int</span> nexts_size = <a class="code" href="classoperations__research_1_1IntVarLocalSearchFilter.html#9045a67d0d2cf4daa65b2a12cb8ed6e8">Size</a>();
<a name="l00217"></a>00217   <span class="comment">// Detecting path starts, used to track which node belongs to which path.</span>
<a name="l00218"></a>00218   vector&lt;int64&gt; path_starts;
<a name="l00219"></a>00219   Bitmap has_prevs(nexts_size, <span class="keyword">false</span>);
<a name="l00220"></a>00220   <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; nexts_size; ++i) {
<a name="l00221"></a>00221     <span class="keyword">const</span> <span class="keywordtype">int</span> next = <a class="code" href="classoperations__research_1_1IntVarLocalSearchFilter.html#f5bf4ae1c58402bd4443ee00f53492cc">Value</a>(i);
<a name="l00222"></a>00222     <span class="keywordflow">if</span> (next &lt; nexts_size) {
<a name="l00223"></a>00223       has_prevs.Set(next, <span class="keyword">true</span>);
<a name="l00224"></a>00224     }
<a name="l00225"></a>00225   }
<a name="l00226"></a>00226   <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; nexts_size; ++i) {
<a name="l00227"></a>00227     <span class="keywordflow">if</span> (!has_prevs.Get(i)) {
<a name="l00228"></a>00228       path_starts.push_back(i);
<a name="l00229"></a>00229     }
<a name="l00230"></a>00230   }
<a name="l00231"></a>00231   <span class="comment">// Marking unactive nodes (which are not on a path).</span>
<a name="l00232"></a>00232   <a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1PathCumulFilter.html#5981b2739e1c13651af0c23556e59e49">node_path_starts_</a>.assign(<a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1PathCumulFilter.html#2726a7b024d652550af32a9b08576bc4">cumuls_size_</a>, <a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1PathCumulFilter.html#899676210ffb31e552bead60bf023ff9">kUnassigned</a>);
<a name="l00233"></a>00233   <span class="comment">// Marking nodes on a path and storing next values.</span>
<a name="l00234"></a>00234   <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; path_starts.size(); ++i) {
<a name="l00235"></a>00235     <span class="keyword">const</span> int64 start = path_starts[i];
<a name="l00236"></a>00236     <span class="keywordtype">int</span> node = start;
<a name="l00237"></a>00237     <a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1PathCumulFilter.html#5981b2739e1c13651af0c23556e59e49">node_path_starts_</a>[node] = start;
<a name="l00238"></a>00238     <span class="keywordtype">int</span> next = <a class="code" href="classoperations__research_1_1IntVarLocalSearchFilter.html#f5bf4ae1c58402bd4443ee00f53492cc">Value</a>(node);
<a name="l00239"></a>00239     <a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1PathCumulFilter.html#ae02ad32ba063311ac2ece2c15203793">saved_nexts_</a>[node] = next;
<a name="l00240"></a>00240     <span class="keywordflow">while</span> (next &lt; nexts_size) {
<a name="l00241"></a>00241       node = next;
<a name="l00242"></a>00242       <a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1PathCumulFilter.html#5981b2739e1c13651af0c23556e59e49">node_path_starts_</a>[node] = start;
<a name="l00243"></a>00243       next = <a class="code" href="classoperations__research_1_1IntVarLocalSearchFilter.html#f5bf4ae1c58402bd4443ee00f53492cc">Value</a>(node);
<a name="l00244"></a>00244       <a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1PathCumulFilter.html#ae02ad32ba063311ac2ece2c15203793">saved_nexts_</a>[node] = next;
<a name="l00245"></a>00245     }
<a name="l00246"></a>00246     <a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1PathCumulFilter.html#ae02ad32ba063311ac2ece2c15203793">saved_nexts_</a>[node] = next;
<a name="l00247"></a>00247     <a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1PathCumulFilter.html#5981b2739e1c13651af0c23556e59e49">node_path_starts_</a>[next] = start;
<a name="l00248"></a>00248   }
<a name="l00249"></a>00249 }
<a name="l00250"></a>00250 
<a name="l00251"></a>00251 <span class="comment">// Evaluators</span>
<a name="l00252"></a>00252 
<a name="l00253"></a><a class="code" href="namespaceoperations__research_1_1anonymous__namespace_02routing_8cc_03.html#7295e219517be2b45d99e5e291195ded">00253</a> int64 <a class="code" href="namespaceoperations__research_1_1anonymous__namespace_02routing_8cc_03.html#7295e219517be2b45d99e5e291195ded" title="Evaluators.">CostFunction</a>(int64** eval, int64 i, int64 j) {
<a name="l00254"></a>00254   <span class="keywordflow">return</span> eval[i][j];
<a name="l00255"></a>00255 }
<a name="l00256"></a>00256 
<a name="l00257"></a><a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1MatrixEvaluator.html">00257</a> <span class="keyword">class </span><a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1MatrixEvaluator.html">MatrixEvaluator</a> : <span class="keyword">public</span> <a class="code" href="classoperations__research_1_1BaseObject.html" title="Useful Search and Modeling Objects.">BaseObject</a> {
<a name="l00258"></a>00258  <span class="keyword">public</span>:
<a name="l00259"></a><a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1MatrixEvaluator.html#c7f5dfff4d4d3c118a93e1ada1ba274e">00259</a>   <a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1MatrixEvaluator.html">MatrixEvaluator</a>(<span class="keyword">const</span> int64* <span class="keyword">const</span>* values,
<a name="l00260"></a>00260                   <span class="keywordtype">int</span> nodes,
<a name="l00261"></a>00261                   <a class="code" href="classoperations__research_1_1RoutingModel.html">RoutingModel</a>* model)
<a name="l00262"></a>00262       : <a class="code" href="classoperations__research_1_1IntVarLocalSearchFilter.html#2634b86fe2a60b5b586ac48f3b8799e7">values_</a>(new int64*[nodes]), nodes_(nodes), model_(model) {
<a name="l00263"></a>00263     CHECK(values) &lt;&lt; <span class="stringliteral">"null pointer"</span>;
<a name="l00264"></a>00264     <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; nodes_; ++i) {
<a name="l00265"></a>00265       <a class="code" href="classoperations__research_1_1IntVarLocalSearchFilter.html#2634b86fe2a60b5b586ac48f3b8799e7">values_</a>[i] = <span class="keyword">new</span> int64[nodes_];
<a name="l00266"></a>00266       memcpy(<a class="code" href="classoperations__research_1_1IntVarLocalSearchFilter.html#2634b86fe2a60b5b586ac48f3b8799e7">values_</a>[i], values[i], nodes_ * <span class="keyword">sizeof</span>(*values[i]));
<a name="l00267"></a>00267     }
<a name="l00268"></a>00268   }
<a name="l00269"></a><a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1MatrixEvaluator.html#f88d4a95d501d4a396330d735fec68bd">00269</a>   <span class="keyword">virtual</span> ~<a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1MatrixEvaluator.html">MatrixEvaluator</a>() {
<a name="l00270"></a>00270     <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; nodes_; ++i) {
<a name="l00271"></a>00271       <span class="keyword">delete</span> <a class="code" href="classoperations__research_1_1IntVarLocalSearchFilter.html#2634b86fe2a60b5b586ac48f3b8799e7">values_</a>[i];
<a name="l00272"></a>00272     }
<a name="l00273"></a>00273     <span class="keyword">delete</span> [] <a class="code" href="classoperations__research_1_1IntVarLocalSearchFilter.html#2634b86fe2a60b5b586ac48f3b8799e7">values_</a>;
<a name="l00274"></a>00274   }
<a name="l00275"></a><a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1MatrixEvaluator.html#a74ee1d72f01663eb8be616142963a65">00275</a>   int64 <a class="code" href="classoperations__research_1_1IntVarLocalSearchFilter.html#f5bf4ae1c58402bd4443ee00f53492cc">Value</a>(int64 i, int64 j)<span class="keyword"> const </span>{
<a name="l00276"></a>00276     <span class="keywordflow">return</span> <a class="code" href="classoperations__research_1_1IntVarLocalSearchFilter.html#2634b86fe2a60b5b586ac48f3b8799e7">values_</a>[model_-&gt;IndexToNode(i)][model_-&gt;IndexToNode(j)];
<a name="l00277"></a>00277   }
<a name="l00278"></a>00278  <span class="keyword">private</span>:
<a name="l00279"></a><a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1MatrixEvaluator.html#ed58fbd0220c05e20400450b09194820">00279</a>   int64** <span class="keyword">const</span> <a class="code" href="classoperations__research_1_1IntVarLocalSearchFilter.html#2634b86fe2a60b5b586ac48f3b8799e7">values_</a>;
<a name="l00280"></a><a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1MatrixEvaluator.html#0a60089f4fc30ca27a1162d0fdda5f29">00280</a>   <span class="keyword">const</span> <span class="keywordtype">int</span> nodes_;
<a name="l00281"></a><a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1MatrixEvaluator.html#8471feeb556dc4bec7f5124b84c0b90a">00281</a>   <a class="code" href="classoperations__research_1_1RoutingModel.html">RoutingModel</a>* <span class="keyword">const</span> model_;
<a name="l00282"></a>00282 };
<a name="l00283"></a>00283 
<a name="l00284"></a><a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1VectorEvaluator.html">00284</a> <span class="keyword">class </span><a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1VectorEvaluator.html">VectorEvaluator</a> : <span class="keyword">public</span> <a class="code" href="classoperations__research_1_1BaseObject.html" title="Useful Search and Modeling Objects.">BaseObject</a> {
<a name="l00285"></a>00285  <span class="keyword">public</span>:
<a name="l00286"></a><a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1VectorEvaluator.html#45a9462ec1b8cf0b5294a84504950874">00286</a>   <a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1VectorEvaluator.html">VectorEvaluator</a>(<span class="keyword">const</span> int64* values, int64 nodes, <a class="code" href="classoperations__research_1_1RoutingModel.html">RoutingModel</a>* model)
<a name="l00287"></a>00287       : <a class="code" href="classoperations__research_1_1IntVarLocalSearchFilter.html#2634b86fe2a60b5b586ac48f3b8799e7">values_</a>(new int64[nodes]), nodes_(nodes), model_(model) {
<a name="l00288"></a>00288     CHECK(values) &lt;&lt; <span class="stringliteral">"null pointer"</span>;
<a name="l00289"></a>00289     memcpy(<a class="code" href="classoperations__research_1_1IntVarLocalSearchFilter.html#2634b86fe2a60b5b586ac48f3b8799e7">values_</a>.get(), values, nodes * <span class="keyword">sizeof</span>(*values));
<a name="l00290"></a>00290   }
<a name="l00291"></a><a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1VectorEvaluator.html#2fea7d9e0a088c6f1272dd6ca0ddfd6e">00291</a>   <span class="keyword">virtual</span> ~<a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1VectorEvaluator.html">VectorEvaluator</a>() {}
<a name="l00292"></a>00292   int64 <a class="code" href="classoperations__research_1_1IntVarLocalSearchFilter.html#f5bf4ae1c58402bd4443ee00f53492cc">Value</a>(int64 i, int64 j) <span class="keyword">const</span>;
<a name="l00293"></a>00293  <span class="keyword">private</span>:
<a name="l00294"></a><a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1VectorEvaluator.html#0783a15e5f62b3fed8338e725a3469aa">00294</a>   scoped_array&lt;int64&gt; <a class="code" href="classoperations__research_1_1IntVarLocalSearchFilter.html#2634b86fe2a60b5b586ac48f3b8799e7">values_</a>;
<a name="l00295"></a><a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1VectorEvaluator.html#d2485c3aa1bcac56271ee2ff7cbff9de">00295</a>   <span class="keyword">const</span> int64 nodes_;
<a name="l00296"></a><a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1VectorEvaluator.html#410766064acc792e77e06d46cbb7aab2">00296</a>   <a class="code" href="classoperations__research_1_1RoutingModel.html">RoutingModel</a>* <span class="keyword">const</span> model_;
<a name="l00297"></a>00297 };
<a name="l00298"></a>00298 
<a name="l00299"></a><a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1VectorEvaluator.html#fa0feea4a1b40d28f67497dc606369bd">00299</a> int64 <a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1VectorEvaluator.html#fa0feea4a1b40d28f67497dc606369bd">VectorEvaluator::Value</a>(int64 i, int64 j)<span class="keyword"> const </span>{
<a name="l00300"></a>00300   <span class="keyword">const</span> int64 index = <a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1VectorEvaluator.html#410766064acc792e77e06d46cbb7aab2">model_</a>-&gt;<a class="code" href="classoperations__research_1_1RoutingModel.html#7bfcb5eaee4b0459ddf4c67d2dd19b67" title="Returns the node index from an index value resulting fron a next variable.">IndexToNode</a>(i);
<a name="l00301"></a>00301   <span class="keywordflow">return</span> <a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1VectorEvaluator.html#0783a15e5f62b3fed8338e725a3469aa">values_</a>[index];
<a name="l00302"></a>00302 }
<a name="l00303"></a>00303 
<a name="l00304"></a><a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1ConstantEvaluator.html">00304</a> <span class="keyword">class </span><a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1ConstantEvaluator.html">ConstantEvaluator</a> : <span class="keyword">public</span> <a class="code" href="classoperations__research_1_1BaseObject.html" title="Useful Search and Modeling Objects.">BaseObject</a> {
<a name="l00305"></a>00305  <span class="keyword">public</span>:
<a name="l00306"></a><a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1ConstantEvaluator.html#bf1e056bcf52d44bf79eb89c030d9fce">00306</a>   <span class="keyword">explicit</span> <a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1ConstantEvaluator.html">ConstantEvaluator</a>(int64 value) : value_(value) {}
<a name="l00307"></a><a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1ConstantEvaluator.html#1145fe331c0d7dd0db3d0e0b3f052510">00307</a>   <span class="keyword">virtual</span> ~<a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1ConstantEvaluator.html">ConstantEvaluator</a>() {}
<a name="l00308"></a><a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1ConstantEvaluator.html#6752b769b13108635c97ed67fefd2ea8">00308</a>   int64 <a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1VectorEvaluator.html#fa0feea4a1b40d28f67497dc606369bd">Value</a>(int64 i, int64 j)<span class="keyword"> const </span>{ <span class="keywordflow">return</span> value_; }
<a name="l00309"></a>00309  <span class="keyword">private</span>:
<a name="l00310"></a><a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1ConstantEvaluator.html#6d4fa8ce917eb97018fe7e73b3aa76f1">00310</a>   <span class="keyword">const</span> int64 value_;
<a name="l00311"></a>00311 };
<a name="l00312"></a>00312 
<a name="l00313"></a>00313 <span class="comment">// Left-branch dive branch selector</span>
<a name="l00314"></a>00314 
<a name="l00315"></a><a class="code" href="namespaceoperations__research_1_1anonymous__namespace_02routing_8cc_03.html#385d231a96de86be6bdb898742d0f620">00315</a> <a class="code" href="classoperations__research_1_1Solver.html#5f87c832967334179f0f9c8d05380847">Solver::DecisionModification</a> <a class="code" href="namespaceoperations__research_1_1anonymous__namespace_02routing_8cc_03.html#385d231a96de86be6bdb898742d0f620" title="Left-branch dive branch selector.">LeftDive</a>(<a class="code" href="classoperations__research_1_1Solver.html" title="Solver Class.">Solver</a>* <span class="keyword">const</span> s) {
<a name="l00316"></a>00316   <span class="keywordflow">return</span> <a class="code" href="classoperations__research_1_1Solver.html#5f87c832967334179f0f9c8d053808477a7d1379ff946fd786c118c3358ce438">Solver::KEEP_LEFT</a>;
<a name="l00317"></a>00317 }
<a name="l00318"></a>00318 
<a name="l00319"></a>00319 }  <span class="comment">// namespace</span>
<a name="l00320"></a>00320 
<a name="l00321"></a>00321 <span class="comment">// ----- Routing model -----</span>
<a name="l00322"></a>00322 
<a name="l00323"></a><a class="code" href="namespaceoperations__research.html#af7bc335dbf1cd813265847ceaacc807">00323</a> <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">int</span> <a class="code" href="namespaceoperations__research.html#af7bc335dbf1cd813265847ceaacc807" title="namespace">kUnassigned</a> = -1;
<a name="l00324"></a><a class="code" href="namespaceoperations__research.html#2967bcaba6bfcb106346b3a54d7adbd8">00324</a> <span class="keyword">static</span> <span class="keyword">const</span> int64 <a class="code" href="namespaceoperations__research.html#2967bcaba6bfcb106346b3a54d7adbd8">kNoPenalty</a> = -1;
<a name="l00325"></a>00325 
<a name="l00326"></a><a class="code" href="classoperations__research_1_1RoutingModel.html#67e90b8e5fba64a285e2eed07a39b2ca">00326</a> <a class="code" href="classoperations__research_1_1RoutingModel.html#67e90b8e5fba64a285e2eed07a39b2ca" title="Supposes a single depot.">RoutingModel::RoutingModel</a>(<span class="keywordtype">int</span> nodes, <span class="keywordtype">int</span> vehicles)
<a name="l00327"></a>00327     : solver_(NULL),
<a name="l00328"></a>00328       no_cycle_constraint_(NULL),
<a name="l00329"></a>00329       costs_(vehicles),
<a name="l00330"></a>00330       homogeneous_costs_(FLAGS_routing_use_homogeneous_costs),
<a name="l00331"></a>00331       cost_(0),
<a name="l00332"></a>00332       fixed_costs_(vehicles),
<a name="l00333"></a>00333       <a class="code" href="classoperations__research_1_1anonymous__namespace_02routing_8cc_03_1_1VectorEvaluator.html#d2485c3aa1bcac56271ee2ff7cbff9de">nodes_</a>(nodes),
<a name="l00334"></a>00334       vehicles_(vehicles),
<a name="l00335"></a>00335       starts_(vehicles),
<a name="l00336"></a>00336       ends_(vehicles),
<a name="l00337"></a>00337       start_end_count_(1),
<a name="l00338"></a>00338       is_depot_set_(false),
<a name="l00339"></a>00339       closed_(false),
<a name="l00340"></a>00340       first_solution_strategy_(ROUTING_DEFAULT_STRATEGY),
<a name="l00341"></a>00341       first_solution_evaluator_(NULL),
<a name="l00342"></a>00342       metaheuristic_(ROUTING_GREEDY_DESCENT),
<a name="l00343"></a>00343       collect_assignments_(NULL),
<a name="l00344"></a>00344       solve_db_(NULL),
<a name="l00345"></a>00345       improve_db_(NULL),
<a name="l00346"></a>00346       restore_assignment_(NULL),
<a name="l00347"></a>00347       assignment_(NULL),
<a name="l00348"></a>00348       preassignment_(NULL),
<a name="l00349"></a>00349       time_limit_ms_(FLAGS_routing_time_limit),
<a name="l00350"></a>00350       lns_time_limit_ms_(FLAGS_routing_lns_time_limit),
<a name="l00351"></a>00351       limit_(NULL),
<a name="l00352"></a>00352       ls_limit_(NULL),
<a name="l00353"></a>00353       lns_limit_(NULL) {
<a name="l00354"></a>00354   <a class="code" href="structoperations__research_1_1SolverParameters.html" title="This struct holds all parameters for the Solver object.">SolverParameters</a> parameters;
<a name="l00355"></a>00355   <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>.reset(<span class="keyword">new</span> <a class="code" href="classoperations__research_1_1Solver.html" title="Solver Class.">Solver</a>(<span class="stringliteral">"Routing"</span>, parameters));
<a name="l00356"></a>00356   <a class="code" href="classoperations__research_1_1RoutingModel.html#f0bd275b13245090b79878c844d6e351">Initialize</a>();
<a name="l00357"></a>00357 }
<a name="l00358"></a>00358 
<a name="l00359"></a><a class="code" href="classoperations__research_1_1RoutingModel.html#d54cfd6a3df6320819fd3b54d33db22d">00359</a> <a class="code" href="classoperations__research_1_1RoutingModel.html#67e90b8e5fba64a285e2eed07a39b2ca" title="Supposes a single depot.">RoutingModel::RoutingModel</a>(<span class="keywordtype">int</span> <a class="code" href="classoperations__research_1_1RoutingModel.html#20c1bf5b1ac1353c9e132774f3f7e1df" title="Sizes and indices.">nodes</a>,
<a name="l00360"></a>00360                            <span class="keywordtype">int</span> <a class="code" href="classoperations__research_1_1RoutingModel.html#9236103b3dca8a4112bd2a8be05b0b71">vehicles</a>,
<a name="l00361"></a>00361                            <span class="keyword">const</span> vector&lt;pair&lt;int, int&gt; &gt;&amp; start_end)
<a name="l00362"></a>00362     : <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>(NULL),
<a name="l00363"></a>00363       <a class="code" href="classoperations__research_1_1RoutingModel.html#09f9ea4cb632de28e1068a504bd64b9c">no_cycle_constraint_</a>(NULL),
<a name="l00364"></a>00364       <a class="code" href="classoperations__research_1_1RoutingModel.html#5c0ab0b8234ccce6d41bd4bf689d9798">costs_</a>(vehicles),
<a name="l00365"></a>00365       <a class="code" href="classoperations__research_1_1RoutingModel.html#4f6517f5303674cdce51559650451245">homogeneous_costs_</a>(FLAGS_routing_use_homogeneous_costs),
<a name="l00366"></a>00366       <a class="code" href="classoperations__research_1_1RoutingModel.html#1b707f8361fb08b4dd12b859ec338fa1">fixed_costs_</a>(vehicles),
<a name="l00367"></a>00367       <a class="code" href="classoperations__research_1_1RoutingModel.html#1bdc721bad2ac8c6ef6530174ccb8bbc">nodes_</a>(nodes),
<a name="l00368"></a>00368       <a class="code" href="classoperations__research_1_1RoutingModel.html#3b06cdcfe6fc0ea3051a33672108f7df">vehicles_</a>(vehicles),
<a name="l00369"></a>00369       <a class="code" href="classoperations__research_1_1RoutingModel.html#95698f9a2c29c061800f2a92c858f6f0">starts_</a>(vehicles),
<a name="l00370"></a>00370       <a class="code" href="classoperations__research_1_1RoutingModel.html#ab6ba66c4aef92cfa7d94cee544ba50e">ends_</a>(vehicles),
<a name="l00371"></a>00371       <a class="code" href="classoperations__research_1_1RoutingModel.html#86707a7b4b672e8105ba1788daff4b1f">is_depot_set_</a>(false),
<a name="l00372"></a>00372       <a class="code" href="classoperations__research_1_1RoutingModel.html#8767c777c841cf8841a4957019a7ea8b">closed_</a>(false),
<a name="l00373"></a>00373       <a class="code" href="classoperations__research_1_1RoutingModel.html#739100fc51e97819a93d43c5eb76b20f" title="Search data.">first_solution_strategy_</a>(<a class="code" href="classoperations__research_1_1RoutingModel.html#6f38b3ff9a2e455677856d97e339da6d6f1cf5f6e92490db44f50b647f90f56c" title="choose first unbound, assign min value">ROUTING_DEFAULT_STRATEGY</a>),
<a name="l00374"></a>00374       <a class="code" href="classoperations__research_1_1RoutingModel.html#99512a1a1c95a4bdc3ae90d750601da4">first_solution_evaluator_</a>(NULL),
<a name="l00375"></a>00375       <a class="code" href="classoperations__research_1_1RoutingModel.html#606256780e1940df9d2efd03ee2d5558">metaheuristic_</a>(<a class="code" href="classoperations__research_1_1RoutingModel.html#0f0bd97e25af059ab2e8e7f263afc8e1582d58f88269611b1065f8c4c5e58fed" title="default">ROUTING_GREEDY_DESCENT</a>),
<a name="l00376"></a>00376       <a class="code" href="classoperations__research_1_1RoutingModel.html#bfed56ec00f6fcb4b51601701a5191c5">collect_assignments_</a>(NULL),
<a name="l00377"></a>00377       <a class="code" href="classoperations__research_1_1RoutingModel.html#280574ad73607f977e7224cb89ad804d">solve_db_</a>(NULL),
<a name="l00378"></a>00378       <a class="code" href="classoperations__research_1_1RoutingModel.html#0eca34a05f9011d97cfed6c49a1f7849">improve_db_</a>(NULL),
<a name="l00379"></a>00379       <a class="code" href="classoperations__research_1_1RoutingModel.html#f2e9d2969ed40e73a63507e79668109e">restore_assignment_</a>(NULL),
<a name="l00380"></a>00380       <a class="code" href="classoperations__research_1_1RoutingModel.html#9aab3a8f9b7d7feb67e7730ba39fa7bf">assignment_</a>(NULL),
<a name="l00381"></a>00381       <a class="code" href="classoperations__research_1_1RoutingModel.html#75b098f7ca3b7d91130e5335e48dba14">preassignment_</a>(NULL),
<a name="l00382"></a>00382       <a class="code" href="classoperations__research_1_1RoutingModel.html#3f7c8de95c6af4e6a797545d82764e09">time_limit_ms_</a>(FLAGS_routing_time_limit),
<a name="l00383"></a>00383       <a class="code" href="classoperations__research_1_1RoutingModel.html#8774b41eec8e980438fb7455ac6084a3">lns_time_limit_ms_</a>(FLAGS_routing_lns_time_limit),
<a name="l00384"></a>00384       <a class="code" href="classoperations__research_1_1RoutingModel.html#9df588e78069c86a4c2142619172e247">limit_</a>(NULL),
<a name="l00385"></a>00385       <a class="code" href="classoperations__research_1_1RoutingModel.html#c1c2ef0d3f5198da307dde6bd9ee75d1">ls_limit_</a>(NULL),
<a name="l00386"></a>00386       <a class="code" href="classoperations__research_1_1RoutingModel.html#40937151169427015513c95c8f2e4e0a">lns_limit_</a>(NULL) {
<a name="l00387"></a>00387   <a class="code" href="structoperations__research_1_1SolverParameters.html" title="This struct holds all parameters for the Solver object.">SolverParameters</a> parameters;
<a name="l00388"></a>00388   <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>.reset(<span class="keyword">new</span> <a class="code" href="classoperations__research_1_1Solver.html" title="Solver Class.">Solver</a>(<span class="stringliteral">"Routing"</span>, parameters));
<a name="l00389"></a>00389   CHECK_EQ(vehicles, start_end.size());
<a name="l00390"></a>00390   hash_set&lt;int&gt; depot_set;
<a name="l00391"></a>00391   <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; start_end.size(); ++i) {
<a name="l00392"></a>00392     depot_set.insert(start_end[i].first);
<a name="l00393"></a>00393     depot_set.insert(start_end[i].second);
<a name="l00394"></a>00394   }
<a name="l00395"></a>00395   <a class="code" href="classoperations__research_1_1RoutingModel.html#619c409f4929e627bae92643eaf9ebe5">start_end_count_</a> = depot_set.size();
<a name="l00396"></a>00396   <a class="code" href="classoperations__research_1_1RoutingModel.html#f0bd275b13245090b79878c844d6e351">Initialize</a>();
<a name="l00397"></a>00397   <a class="code" href="classoperations__research_1_1RoutingModel.html#799de48eabd60f1f9f0217ceab445fb4">SetStartEnd</a>(start_end);
<a name="l00398"></a>00398 }
<a name="l00399"></a>00399 
<a name="l00400"></a><a class="code" href="classoperations__research_1_1RoutingModel.html#8b35c125d310306267e2320ec7a65ce4">00400</a> <a class="code" href="classoperations__research_1_1RoutingModel.html#67e90b8e5fba64a285e2eed07a39b2ca" title="Supposes a single depot.">RoutingModel::RoutingModel</a>(<span class="keywordtype">int</span> <a class="code" href="classoperations__research_1_1RoutingModel.html#20c1bf5b1ac1353c9e132774f3f7e1df" title="Sizes and indices.">nodes</a>,
<a name="l00401"></a>00401                            <span class="keywordtype">int</span> <a class="code" href="classoperations__research_1_1RoutingModel.html#9236103b3dca8a4112bd2a8be05b0b71">vehicles</a>,
<a name="l00402"></a>00402                            <span class="keyword">const</span> vector&lt;int&gt;&amp; starts,
<a name="l00403"></a>00403                            <span class="keyword">const</span> vector&lt;int&gt;&amp; ends)
<a name="l00404"></a>00404     : <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>(NULL),
<a name="l00405"></a>00405       <a class="code" href="classoperations__research_1_1RoutingModel.html#09f9ea4cb632de28e1068a504bd64b9c">no_cycle_constraint_</a>(NULL),
<a name="l00406"></a>00406       <a class="code" href="classoperations__research_1_1RoutingModel.html#5c0ab0b8234ccce6d41bd4bf689d9798">costs_</a>(vehicles),
<a name="l00407"></a>00407       <a class="code" href="classoperations__research_1_1RoutingModel.html#4f6517f5303674cdce51559650451245">homogeneous_costs_</a>(FLAGS_routing_use_homogeneous_costs),
<a name="l00408"></a>00408       <a class="code" href="classoperations__research_1_1RoutingModel.html#1b707f8361fb08b4dd12b859ec338fa1">fixed_costs_</a>(vehicles),
<a name="l00409"></a>00409       <a class="code" href="classoperations__research_1_1RoutingModel.html#1bdc721bad2ac8c6ef6530174ccb8bbc">nodes_</a>(nodes),
<a name="l00410"></a>00410       <a class="code" href="classoperations__research_1_1RoutingModel.html#3b06cdcfe6fc0ea3051a33672108f7df">vehicles_</a>(vehicles),
<a name="l00411"></a>00411       <a class="code" href="classoperations__research_1_1RoutingModel.html#95698f9a2c29c061800f2a92c858f6f0">starts_</a>(vehicles),
<a name="l00412"></a>00412       <a class="code" href="classoperations__research_1_1RoutingModel.html#ab6ba66c4aef92cfa7d94cee544ba50e">ends_</a>(vehicles),
<a name="l00413"></a>00413       <a class="code" href="classoperations__research_1_1RoutingModel.html#86707a7b4b672e8105ba1788daff4b1f">is_depot_set_</a>(false),
<a name="l00414"></a>00414       <a class="code" href="classoperations__research_1_1RoutingModel.html#8767c777c841cf8841a4957019a7ea8b">closed_</a>(false),
<a name="l00415"></a>00415       <a class="code" href="classoperations__research_1_1RoutingModel.html#739100fc51e97819a93d43c5eb76b20f" title="Search data.">first_solution_strategy_</a>(<a class="code" href="classoperations__research_1_1RoutingModel.html#6f38b3ff9a2e455677856d97e339da6d6f1cf5f6e92490db44f50b647f90f56c" title="choose first unbound, assign min value">ROUTING_DEFAULT_STRATEGY</a>),
<a name="l00416"></a>00416       <a class="code" href="classoperations__research_1_1RoutingModel.html#99512a1a1c95a4bdc3ae90d750601da4">first_solution_evaluator_</a>(NULL),
<a name="l00417"></a>00417       <a class="code" href="classoperations__research_1_1RoutingModel.html#606256780e1940df9d2efd03ee2d5558">metaheuristic_</a>(<a class="code" href="classoperations__research_1_1RoutingModel.html#0f0bd97e25af059ab2e8e7f263afc8e1582d58f88269611b1065f8c4c5e58fed" title="default">ROUTING_GREEDY_DESCENT</a>),
<a name="l00418"></a>00418       <a class="code" href="classoperations__research_1_1RoutingModel.html#bfed56ec00f6fcb4b51601701a5191c5">collect_assignments_</a>(NULL),
<a name="l00419"></a>00419       <a class="code" href="classoperations__research_1_1RoutingModel.html#280574ad73607f977e7224cb89ad804d">solve_db_</a>(NULL),
<a name="l00420"></a>00420       <a class="code" href="classoperations__research_1_1RoutingModel.html#0eca34a05f9011d97cfed6c49a1f7849">improve_db_</a>(NULL),
<a name="l00421"></a>00421       <a class="code" href="classoperations__research_1_1RoutingModel.html#f2e9d2969ed40e73a63507e79668109e">restore_assignment_</a>(NULL),
<a name="l00422"></a>00422       <a class="code" href="classoperations__research_1_1RoutingModel.html#9aab3a8f9b7d7feb67e7730ba39fa7bf">assignment_</a>(NULL),
<a name="l00423"></a>00423       <a class="code" href="classoperations__research_1_1RoutingModel.html#75b098f7ca3b7d91130e5335e48dba14">preassignment_</a>(NULL),
<a name="l00424"></a>00424       <a class="code" href="classoperations__research_1_1RoutingModel.html#3f7c8de95c6af4e6a797545d82764e09">time_limit_ms_</a>(FLAGS_routing_time_limit),
<a name="l00425"></a>00425       <a class="code" href="classoperations__research_1_1RoutingModel.html#8774b41eec8e980438fb7455ac6084a3">lns_time_limit_ms_</a>(FLAGS_routing_lns_time_limit),
<a name="l00426"></a>00426       <a class="code" href="classoperations__research_1_1RoutingModel.html#9df588e78069c86a4c2142619172e247">limit_</a>(NULL),
<a name="l00427"></a>00427       <a class="code" href="classoperations__research_1_1RoutingModel.html#c1c2ef0d3f5198da307dde6bd9ee75d1">ls_limit_</a>(NULL),
<a name="l00428"></a>00428       <a class="code" href="classoperations__research_1_1RoutingModel.html#40937151169427015513c95c8f2e4e0a">lns_limit_</a>(NULL) {
<a name="l00429"></a>00429   <a class="code" href="structoperations__research_1_1SolverParameters.html" title="This struct holds all parameters for the Solver object.">SolverParameters</a> parameters;
<a name="l00430"></a>00430   <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>.reset(<span class="keyword">new</span> <a class="code" href="classoperations__research_1_1Solver.html" title="Solver Class.">Solver</a>(<span class="stringliteral">"Routing"</span>, parameters));
<a name="l00431"></a>00431   CHECK_EQ(vehicles, starts.size());
<a name="l00432"></a>00432   CHECK_EQ(vehicles, ends.size());
<a name="l00433"></a>00433   hash_set&lt;int&gt; depot_set;
<a name="l00434"></a>00434   vector&lt;pair&lt;int, int&gt; &gt; start_end(starts.size());
<a name="l00435"></a>00435   <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; starts.size(); ++i) {
<a name="l00436"></a>00436     depot_set.insert(starts[i]);
<a name="l00437"></a>00437     depot_set.insert(ends[i]);
<a name="l00438"></a>00438     start_end[i] = make_pair(starts[i], ends[i]);
<a name="l00439"></a>00439   }
<a name="l00440"></a>00440   <a class="code" href="classoperations__research_1_1RoutingModel.html#619c409f4929e627bae92643eaf9ebe5">start_end_count_</a> = depot_set.size();
<a name="l00441"></a>00441   <a class="code" href="classoperations__research_1_1RoutingModel.html#f0bd275b13245090b79878c844d6e351">Initialize</a>();
<a name="l00442"></a>00442   <a class="code" href="classoperations__research_1_1RoutingModel.html#799de48eabd60f1f9f0217ceab445fb4">SetStartEnd</a>(start_end);
<a name="l00443"></a>00443 }
<a name="l00444"></a>00444 
<a name="l00445"></a><a class="code" href="classoperations__research_1_1RoutingModel.html#f0bd275b13245090b79878c844d6e351">00445</a> <span class="keywordtype">void</span> <a class="code" href="classoperations__research_1_1RoutingModel.html#f0bd275b13245090b79878c844d6e351">RoutingModel::Initialize</a>() {
<a name="l00446"></a>00446   <span class="keyword">const</span> <span class="keywordtype">int</span> size = <a class="code" href="classoperations__research_1_1RoutingModel.html#5a560929b26804990f1e7d6972218f87">Size</a>();
<a name="l00447"></a>00447   <span class="comment">// Next variables</span>
<a name="l00448"></a>00448   <a class="code" href="classoperations__research_1_1RoutingModel.html#e77d116609e31411fd2c02483a8300e2">nexts_</a>.reset(<a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;MakeIntVarArray(size,
<a name="l00449"></a>00449                                         0,
<a name="l00450"></a>00450                                         size + <a class="code" href="classoperations__research_1_1RoutingModel.html#3b06cdcfe6fc0ea3051a33672108f7df">vehicles_</a> - 1,
<a name="l00451"></a>00451                                         <span class="stringliteral">"Nexts"</span>));
<a name="l00452"></a>00452   <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;AddConstraint(<a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;MakeAllDifferent(<a class="code" href="classoperations__research_1_1RoutingModel.html#e77d116609e31411fd2c02483a8300e2">nexts_</a>.get(), size, <span class="keyword">false</span>));
<a name="l00453"></a>00453   <span class="comment">// Vehicle variables</span>
<a name="l00454"></a>00454   <a class="code" href="classoperations__research_1_1RoutingModel.html#6b112df31ad4958e036dea7d31e64ed0">vehicle_vars_</a>.reset(<a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;MakeIntVarArray(size + <a class="code" href="classoperations__research_1_1RoutingModel.html#3b06cdcfe6fc0ea3051a33672108f7df">vehicles_</a>,
<a name="l00455"></a>00455                                                0,
<a name="l00456"></a>00456                                                <a class="code" href="classoperations__research_1_1RoutingModel.html#3b06cdcfe6fc0ea3051a33672108f7df">vehicles_</a> - 1,
<a name="l00457"></a>00457                                                <span class="stringliteral">"Vehicles"</span>));
<a name="l00458"></a>00458   <span class="comment">// Active variables</span>
<a name="l00459"></a>00459   <a class="code" href="classoperations__research_1_1RoutingModel.html#b3d271b9caa290d0a01e3da78a0cbbb4">active_</a>.reset(<a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;MakeBoolVarArray(size, <span class="stringliteral">"Active"</span>));
<a name="l00460"></a>00460   <span class="comment">// Cost cache</span>
<a name="l00461"></a>00461   <a class="code" href="classoperations__research_1_1RoutingModel.html#fc3dc3e3eabf41aecf7454b6945f2053">cost_cache_</a>.clear();
<a name="l00462"></a>00462   <a class="code" href="classoperations__research_1_1RoutingModel.html#fc3dc3e3eabf41aecf7454b6945f2053">cost_cache_</a>.resize(size);
<a name="l00463"></a>00463   <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; size; ++i) {
<a name="l00464"></a>00464     <a class="code" href="structoperations__research_1_1RoutingModel_1_1CostCacheElement.html">CostCacheElement</a>&amp; cache = <a class="code" href="classoperations__research_1_1RoutingModel.html#fc3dc3e3eabf41aecf7454b6945f2053">cost_cache_</a>[i];
<a name="l00465"></a>00465     cache.<a class="code" href="structoperations__research_1_1RoutingModel_1_1CostCacheElement.html#3e32558465a21bedd5dcd5d27c5cae16">node</a> = <a class="code" href="namespaceoperations__research.html#af7bc335dbf1cd813265847ceaacc807" title="namespace">kUnassigned</a>;
<a name="l00466"></a>00466     cache.<a class="code" href="structoperations__research_1_1RoutingModel_1_1CostCacheElement.html#9bb61720d4944afcffa3644e59fe0ef0">vehicle</a> = <a class="code" href="namespaceoperations__research.html#af7bc335dbf1cd813265847ceaacc807" title="namespace">kUnassigned</a>;
<a name="l00467"></a>00467     cache.<a class="code" href="structoperations__research_1_1RoutingModel_1_1CostCacheElement.html#390240638eaf8184db91ad0dc5f84895">cost</a> = 0;
<a name="l00468"></a>00468   }
<a name="l00469"></a>00469   <a class="code" href="classoperations__research_1_1RoutingModel.html#75b098f7ca3b7d91130e5335e48dba14">preassignment_</a> = <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;RevAlloc(<span class="keyword">new</span> <a class="code" href="classoperations__research_1_1Assignment.html" title="Assignment.">Assignment</a>(<a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>.get()));
<a name="l00470"></a>00470 }
<a name="l00471"></a>00471 
<a name="l00472"></a><a class="code" href="classoperations__research_1_1RoutingModel.html#6ee4a1c4dda01e2138f79ed5ec913754">00472</a> <a class="code" href="classoperations__research_1_1RoutingModel.html#6ee4a1c4dda01e2138f79ed5ec913754">RoutingModel::~RoutingModel</a>() {
<a name="l00473"></a>00473   STLDeleteElements(&amp;<a class="code" href="classoperations__research_1_1RoutingModel.html#a936d0a4e5ecf5b8f377210acc75bd66">routing_caches_</a>);
<a name="l00474"></a>00474   STLDeleteElements(&amp;<a class="code" href="classoperations__research_1_1RoutingModel.html#c5da4b8a1d5400a2a48246ddee845ff3" title="Callbacks to be deleted.">owned_callbacks_</a>);
<a name="l00475"></a>00475 }
<a name="l00476"></a>00476 
<a name="l00477"></a><a class="code" href="classoperations__research_1_1RoutingModel.html#fba056acc7ced3e04d2419f322ab988a">00477</a> <span class="keywordtype">void</span> <a class="code" href="classoperations__research_1_1RoutingModel.html#fba056acc7ced3e04d2419f322ab988a" title="Model creation.">RoutingModel::AddNoCycleConstraint</a>() {
<a name="l00478"></a>00478   <a class="code" href="classoperations__research_1_1RoutingModel.html#2e31d189d151a254758ed9f0352e5eac">AddNoCycleConstraintInternal</a>();
<a name="l00479"></a>00479 }
<a name="l00480"></a>00480 
<a name="l00481"></a><a class="code" href="classoperations__research_1_1RoutingModel.html#2e31d189d151a254758ed9f0352e5eac">00481</a> <span class="keywordtype">void</span> <a class="code" href="classoperations__research_1_1RoutingModel.html#2e31d189d151a254758ed9f0352e5eac">RoutingModel::AddNoCycleConstraintInternal</a>() {
<a name="l00482"></a>00482   <a class="code" href="classoperations__research_1_1RoutingModel.html#0996e6ce1d283e605868f7c45065ae96">CheckDepot</a>();
<a name="l00483"></a>00483   <span class="keywordflow">if</span> (<a class="code" href="classoperations__research_1_1RoutingModel.html#09f9ea4cb632de28e1068a504bd64b9c">no_cycle_constraint_</a> == NULL) {
<a name="l00484"></a>00484     <a class="code" href="classoperations__research_1_1RoutingModel.html#09f9ea4cb632de28e1068a504bd64b9c">no_cycle_constraint_</a> = <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;MakeNoCycle(<a class="code" href="classoperations__research_1_1RoutingModel.html#e77d116609e31411fd2c02483a8300e2">nexts_</a>.get(),
<a name="l00485"></a>00485                                                 <a class="code" href="classoperations__research_1_1RoutingModel.html#b3d271b9caa290d0a01e3da78a0cbbb4">active_</a>.get(),
<a name="l00486"></a>00486                                                 <a class="code" href="classoperations__research_1_1RoutingModel.html#5a560929b26804990f1e7d6972218f87">Size</a>());
<a name="l00487"></a>00487     <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;AddConstraint(<a class="code" href="classoperations__research_1_1RoutingModel.html#09f9ea4cb632de28e1068a504bd64b9c">no_cycle_constraint_</a>);
<a name="l00488"></a>00488   }
<a name="l00489"></a>00489 }
<a name="l00490"></a>00490 
<a name="l00491"></a><a class="code" href="classoperations__research_1_1RoutingModel.html#c9b68174cac597b629104a996720fb76">00491</a> <span class="keywordtype">void</span> <a class="code" href="classoperations__research_1_1RoutingModel.html#c9b68174cac597b629104a996720fb76">RoutingModel::AddDimension</a>(<a class="code" href="classoperations__research_1_1Solver.html#487b521ee809f0f4ee397b9f6ea06f59">Solver::IndexEvaluator2</a>* evaluator,
<a name="l00492"></a>00492                                 int64 slack_max,
<a name="l00493"></a>00493                                 int64 capacity,
<a name="l00494"></a>00494                                 <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; name) {
<a name="l00495"></a>00495   <a class="code" href="classoperations__research_1_1RoutingModel.html#0996e6ce1d283e605868f7c45065ae96">CheckDepot</a>();
<a name="l00496"></a>00496   <a class="code" href="classoperations__research_1_1IntVar.html" title="The class IntVar is a subset of IntExpr.">IntVar</a>** cumuls = <a class="code" href="classoperations__research_1_1RoutingModel.html#e23cc43b74d4f61399208afbc1fcccd3">GetOrMakeCumuls</a>(capacity, name);
<a name="l00497"></a>00497   <span class="keyword">const</span> <span class="keywordtype">int</span> size = <a class="code" href="classoperations__research_1_1RoutingModel.html#5a560929b26804990f1e7d6972218f87">Size</a>();
<a name="l00498"></a>00498   <a class="code" href="classoperations__research_1_1IntVar.html" title="The class IntVar is a subset of IntExpr.">IntVar</a>** transits = <a class="code" href="classoperations__research_1_1RoutingModel.html#0239db54cfc34bfe3e7858cb57fb97c9">GetOrMakeTransits</a>(<a class="code" href="classoperations__research_1_1RoutingModel.html#4f9dc42ffde5076f22a8611d367cd354">NewCachedCallback</a>(evaluator),
<a name="l00499"></a>00499                                         slack_max, capacity, name);
<a name="l00500"></a>00500   <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;AddConstraint(<a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;MakePathCumul(<a class="code" href="classoperations__research_1_1RoutingModel.html#e77d116609e31411fd2c02483a8300e2">nexts_</a>.get(),
<a name="l00501"></a>00501                                                 <a class="code" href="classoperations__research_1_1RoutingModel.html#b3d271b9caa290d0a01e3da78a0cbbb4">active_</a>.get(),
<a name="l00502"></a>00502                                                 cumuls,
<a name="l00503"></a>00503                                                 transits,
<a name="l00504"></a>00504                                                 size,
<a name="l00505"></a>00505                                                 size + <a class="code" href="classoperations__research_1_1RoutingModel.html#3b06cdcfe6fc0ea3051a33672108f7df">vehicles_</a>));
<a name="l00506"></a>00506   <span class="comment">// Start cumuls == 0</span>
<a name="l00507"></a>00507   <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; <a class="code" href="classoperations__research_1_1RoutingModel.html#3b06cdcfe6fc0ea3051a33672108f7df">vehicles_</a>; ++i) {
<a name="l00508"></a>00508     <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;AddConstraint(<a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;MakeEquality(cumuls[<a class="code" href="classoperations__research_1_1RoutingModel.html#fcb255b430c9c51561a344966f32940d" title="Inspection.">Start</a>(i)], <a class="code" href="namespaceoperations__research.html#009f247167f32509baf749083e4bc984" title="Misc.">Zero</a>()));
<a name="l00509"></a>00509   }
<a name="l00510"></a>00510 }
<a name="l00511"></a>00511 
<a name="l00512"></a><a class="code" href="classoperations__research_1_1RoutingModel.html#366617606fccc8017b91a5efeae6c4cf">00512</a> <span class="keywordtype">void</span> <a class="code" href="classoperations__research_1_1RoutingModel.html#366617606fccc8017b91a5efeae6c4cf">RoutingModel::AddConstantDimension</a>(int64 value,
<a name="l00513"></a>00513                                         int64 capacity,
<a name="l00514"></a>00514                                         <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; name) {
<a name="l00515"></a>00515   ConstantEvaluator* evaluator =
<a name="l00516"></a>00516       <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;RevAlloc(<span class="keyword">new</span> ConstantEvaluator(value));
<a name="l00517"></a>00517   <a class="code" href="classoperations__research_1_1RoutingModel.html#c9b68174cac597b629104a996720fb76">AddDimension</a>(NewPermanentCallback(evaluator, &amp;ConstantEvaluator::Value),
<a name="l00518"></a>00518                0, capacity, name);
<a name="l00519"></a>00519 }
<a name="l00520"></a>00520 
<a name="l00521"></a><a class="code" href="classoperations__research_1_1RoutingModel.html#665b56459ca82c4d791477466b8e621c">00521</a> <span class="keywordtype">void</span> <a class="code" href="classoperations__research_1_1RoutingModel.html#665b56459ca82c4d791477466b8e621c">RoutingModel::AddVectorDimension</a>(<span class="keyword">const</span> int64* values,
<a name="l00522"></a>00522                                       int64 capacity,
<a name="l00523"></a>00523                                       <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; name) {
<a name="l00524"></a>00524   VectorEvaluator* evaluator =
<a name="l00525"></a>00525       <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;RevAlloc(<span class="keyword">new</span> VectorEvaluator(values, <a class="code" href="classoperations__research_1_1RoutingModel.html#1bdc721bad2ac8c6ef6530174ccb8bbc">nodes_</a>, <span class="keyword">this</span>));
<a name="l00526"></a>00526   <a class="code" href="classoperations__research_1_1RoutingModel.html#c9b68174cac597b629104a996720fb76">AddDimension</a>(NewPermanentCallback(evaluator, &amp;VectorEvaluator::Value),
<a name="l00527"></a>00527                0, capacity, name);
<a name="l00528"></a>00528 }
<a name="l00529"></a>00529 
<a name="l00530"></a><a class="code" href="classoperations__research_1_1RoutingModel.html#7d00a87827f4216f9d209a82034e220a">00530</a> <span class="keywordtype">void</span> <a class="code" href="classoperations__research_1_1RoutingModel.html#7d00a87827f4216f9d209a82034e220a">RoutingModel::AddMatrixDimension</a>(<span class="keyword">const</span> int64* <span class="keyword">const</span>* values,
<a name="l00531"></a>00531                                       int64 capacity,
<a name="l00532"></a>00532                                       <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; name) {
<a name="l00533"></a>00533   MatrixEvaluator* evaluator =
<a name="l00534"></a>00534       <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;RevAlloc(<span class="keyword">new</span> MatrixEvaluator(values, <a class="code" href="classoperations__research_1_1RoutingModel.html#1bdc721bad2ac8c6ef6530174ccb8bbc">nodes_</a>, <span class="keyword">this</span>));
<a name="l00535"></a>00535   <a class="code" href="classoperations__research_1_1RoutingModel.html#c9b68174cac597b629104a996720fb76">AddDimension</a>(NewPermanentCallback(evaluator, &amp;MatrixEvaluator::Value),
<a name="l00536"></a>00536                0, capacity, name);
<a name="l00537"></a>00537 }
<a name="l00538"></a>00538 
<a name="l00539"></a><a class="code" href="classoperations__research_1_1RoutingModel.html#fa5489925a39e8484fea85ad916ab72b">00539</a> <span class="keywordtype">void</span> <a class="code" href="classoperations__research_1_1RoutingModel.html#fa5489925a39e8484fea85ad916ab72b">RoutingModel::AddAllActive</a>() {
<a name="l00540"></a>00540   <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; <a class="code" href="classoperations__research_1_1RoutingModel.html#5a560929b26804990f1e7d6972218f87">Size</a>(); ++i) {
<a name="l00541"></a>00541     <span class="keywordflow">if</span> (<a class="code" href="classoperations__research_1_1RoutingModel.html#b3d271b9caa290d0a01e3da78a0cbbb4">active_</a>[i]-&gt;Max() != 0) {
<a name="l00542"></a>00542       <a class="code" href="classoperations__research_1_1RoutingModel.html#b3d271b9caa290d0a01e3da78a0cbbb4">active_</a>[i]-&gt;SetValue(1);
<a name="l00543"></a>00543     }
<a name="l00544"></a>00544   }
<a name="l00545"></a>00545 }
<a name="l00546"></a>00546 
<a name="l00547"></a><a class="code" href="classoperations__research_1_1RoutingModel.html#ffb6070cc82b66227ae4751c3d6ad58d">00547</a> <span class="keywordtype">void</span> <a class="code" href="classoperations__research_1_1RoutingModel.html#ffb6070cc82b66227ae4751c3d6ad58d">RoutingModel::SetCost</a>(<a class="code" href="classoperations__research_1_1Solver.html#487b521ee809f0f4ee397b9f6ea06f59">Solver::IndexEvaluator2</a>* evaluator) {
<a name="l00548"></a>00548   evaluator-&gt;CheckIsRepeatable();
<a name="l00549"></a>00549   <a class="code" href="classoperations__research_1_1Solver.html#487b521ee809f0f4ee397b9f6ea06f59">Solver::IndexEvaluator2</a>* cached_evaluator = <a class="code" href="classoperations__research_1_1RoutingModel.html#4f9dc42ffde5076f22a8611d367cd354">NewCachedCallback</a>(evaluator);
<a name="l00550"></a>00550   <a class="code" href="classoperations__research_1_1RoutingModel.html#4f6517f5303674cdce51559650451245">homogeneous_costs_</a> = FLAGS_routing_use_homogeneous_costs;
<a name="l00551"></a>00551   <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; <a class="code" href="classoperations__research_1_1RoutingModel.html#3b06cdcfe6fc0ea3051a33672108f7df">vehicles_</a>; ++i) {
<a name="l00552"></a>00552     <a class="code" href="classoperations__research_1_1RoutingModel.html#eabd0306967dd37c06b00ffaeb814617">SetVehicleCostInternal</a>(i, cached_evaluator);
<a name="l00553"></a>00553   }
<a name="l00554"></a>00554 }
<a name="l00555"></a>00555 
<a name="l00556"></a><a class="code" href="classoperations__research_1_1RoutingModel.html#89f79076ce6ef6d5587f2ebe3439a073">00556</a> int64 <a class="code" href="classoperations__research_1_1RoutingModel.html#89f79076ce6ef6d5587f2ebe3439a073" title="Route fixed cost taken into account if the route is not empty, aka there&amp;#39;s at...">RoutingModel::GetRouteFixedCost</a>()<span class="keyword"> const </span>{
<a name="l00557"></a>00557   <span class="keywordflow">return</span> <a class="code" href="classoperations__research_1_1RoutingModel.html#619c7630314932daf1b6338eb2285027" title="Vehicle fixed cost taken into account if the route of the vehicle is not empty, aka...">GetVehicleFixedCost</a>(0);
<a name="l00558"></a>00558 }
<a name="l00559"></a>00559 
<a name="l00560"></a><a class="code" href="classoperations__research_1_1RoutingModel.html#4b32913c8744e2777597bee4e9a78225">00560</a> <span class="keywordtype">void</span> <a class="code" href="classoperations__research_1_1RoutingModel.html#4b32913c8744e2777597bee4e9a78225">RoutingModel::SetVehicleCost</a>(<span class="keywordtype">int</span> vehicle,
<a name="l00561"></a>00561                                   <a class="code" href="classoperations__research_1_1Solver.html#487b521ee809f0f4ee397b9f6ea06f59">Solver::IndexEvaluator2</a>* evaluator) {
<a name="l00562"></a>00562   evaluator-&gt;CheckIsRepeatable();
<a name="l00563"></a>00563   <a class="code" href="classoperations__research_1_1RoutingModel.html#4f6517f5303674cdce51559650451245">homogeneous_costs_</a> = <span class="keyword">false</span>;
<a name="l00564"></a>00564   <a class="code" href="classoperations__research_1_1RoutingModel.html#eabd0306967dd37c06b00ffaeb814617">SetVehicleCostInternal</a>(vehicle, <a class="code" href="classoperations__research_1_1RoutingModel.html#4f9dc42ffde5076f22a8611d367cd354">NewCachedCallback</a>(evaluator));
<a name="l00565"></a>00565 }
<a name="l00566"></a>00566 
<a name="l00567"></a><a class="code" href="classoperations__research_1_1RoutingModel.html#eabd0306967dd37c06b00ffaeb814617">00567</a> <span class="keywordtype">void</span> <a class="code" href="classoperations__research_1_1RoutingModel.html#eabd0306967dd37c06b00ffaeb814617">RoutingModel::SetVehicleCostInternal</a>(<span class="keywordtype">int</span> vehicle,
<a name="l00568"></a>00568                                           <a class="code" href="classoperations__research_1_1Solver.html#487b521ee809f0f4ee397b9f6ea06f59">Solver::IndexEvaluator2</a>* evaluator) {
<a name="l00569"></a>00569   CHECK_LT(vehicle, <a class="code" href="classoperations__research_1_1RoutingModel.html#3b06cdcfe6fc0ea3051a33672108f7df">vehicles_</a>);
<a name="l00570"></a>00570   <a class="code" href="classoperations__research_1_1RoutingModel.html#5c0ab0b8234ccce6d41bd4bf689d9798">costs_</a>[vehicle] = evaluator;
<a name="l00571"></a>00571 }
<a name="l00572"></a>00572 
<a name="l00573"></a><a class="code" href="classoperations__research_1_1RoutingModel.html#f387904bbb3960d15461d10e307f28f5">00573</a> <span class="keywordtype">void</span> <a class="code" href="classoperations__research_1_1RoutingModel.html#f387904bbb3960d15461d10e307f28f5">RoutingModel::SetRouteFixedCost</a>(int64 cost) {
<a name="l00574"></a>00574   <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; <a class="code" href="classoperations__research_1_1RoutingModel.html#3b06cdcfe6fc0ea3051a33672108f7df">vehicles_</a>; ++i) {
<a name="l00575"></a>00575     <a class="code" href="classoperations__research_1_1RoutingModel.html#51249142dcbabc08d16ae7f8dac64ab7">SetVehicleFixedCost</a>(i, cost);
<a name="l00576"></a>00576   }
<a name="l00577"></a>00577 }
<a name="l00578"></a>00578 
<a name="l00579"></a><a class="code" href="classoperations__research_1_1RoutingModel.html#619c7630314932daf1b6338eb2285027">00579</a> int64 <a class="code" href="classoperations__research_1_1RoutingModel.html#619c7630314932daf1b6338eb2285027" title="Vehicle fixed cost taken into account if the route of the vehicle is not empty, aka...">RoutingModel::GetVehicleFixedCost</a>(<span class="keywordtype">int</span> vehicle)<span class="keyword"> const </span>{
<a name="l00580"></a>00580   CHECK_LT(vehicle, <a class="code" href="classoperations__research_1_1RoutingModel.html#3b06cdcfe6fc0ea3051a33672108f7df">vehicles_</a>);
<a name="l00581"></a>00581   <span class="keywordflow">return</span> <a class="code" href="classoperations__research_1_1RoutingModel.html#1b707f8361fb08b4dd12b859ec338fa1">fixed_costs_</a>[vehicle];
<a name="l00582"></a>00582 }
<a name="l00583"></a>00583 
<a name="l00584"></a><a class="code" href="classoperations__research_1_1RoutingModel.html#51249142dcbabc08d16ae7f8dac64ab7">00584</a> <span class="keywordtype">void</span> <a class="code" href="classoperations__research_1_1RoutingModel.html#51249142dcbabc08d16ae7f8dac64ab7">RoutingModel::SetVehicleFixedCost</a>(<span class="keywordtype">int</span> vehicle, int64 cost) {
<a name="l00585"></a>00585   CHECK_LT(vehicle, <a class="code" href="classoperations__research_1_1RoutingModel.html#3b06cdcfe6fc0ea3051a33672108f7df">vehicles_</a>);
<a name="l00586"></a>00586   <a class="code" href="classoperations__research_1_1RoutingModel.html#1b707f8361fb08b4dd12b859ec338fa1">fixed_costs_</a>[vehicle] = cost;
<a name="l00587"></a>00587 }
<a name="l00588"></a>00588 
<a name="l00589"></a><a class="code" href="classoperations__research_1_1RoutingModel.html#9dcfc54270d8dac1b1e92ad38b5ab35d">00589</a> <span class="keywordtype">void</span> <a class="code" href="classoperations__research_1_1RoutingModel.html#9dcfc54270d8dac1b1e92ad38b5ab35d" title="Adds a disjunction constraint on the nodes: exactly one of the nodes is active.">RoutingModel::AddDisjunction</a>(<span class="keyword">const</span> vector&lt;int64&gt;&amp; <a class="code" href="classoperations__research_1_1RoutingModel.html#20c1bf5b1ac1353c9e132774f3f7e1df" title="Sizes and indices.">nodes</a>) {
<a name="l00590"></a>00590   <a class="code" href="classoperations__research_1_1RoutingModel.html#ef05bcd2d5a7d9c0bf93b1aa2dd2bb04">AddDisjunctionInternal</a>(nodes, <a class="code" href="namespaceoperations__research.html#2967bcaba6bfcb106346b3a54d7adbd8">kNoPenalty</a>);
<a name="l00591"></a>00591 }
<a name="l00592"></a>00592 
<a name="l00593"></a><a class="code" href="classoperations__research_1_1RoutingModel.html#4f424c9d690046a9a7c7827046ecbd61">00593</a> <span class="keywordtype">void</span> <a class="code" href="classoperations__research_1_1RoutingModel.html#9dcfc54270d8dac1b1e92ad38b5ab35d" title="Adds a disjunction constraint on the nodes: exactly one of the nodes is active.">RoutingModel::AddDisjunction</a>(<span class="keyword">const</span> vector&lt;int64&gt;&amp; <a class="code" href="classoperations__research_1_1RoutingModel.html#20c1bf5b1ac1353c9e132774f3f7e1df" title="Sizes and indices.">nodes</a>, int64 penalty) {
<a name="l00594"></a>00594   CHECK_GE(penalty, 0) &lt;&lt; <span class="stringliteral">"Penalty must be positive"</span>;
<a name="l00595"></a>00595   <a class="code" href="classoperations__research_1_1RoutingModel.html#ef05bcd2d5a7d9c0bf93b1aa2dd2bb04">AddDisjunctionInternal</a>(nodes, penalty);
<a name="l00596"></a>00596 }
<a name="l00597"></a>00597 
<a name="l00598"></a><a class="code" href="classoperations__research_1_1RoutingModel.html#ef05bcd2d5a7d9c0bf93b1aa2dd2bb04">00598</a> <span class="keywordtype">void</span> <a class="code" href="classoperations__research_1_1RoutingModel.html#ef05bcd2d5a7d9c0bf93b1aa2dd2bb04">RoutingModel::AddDisjunctionInternal</a>(<span class="keyword">const</span> vector&lt;int64&gt;&amp; <a class="code" href="classoperations__research_1_1RoutingModel.html#20c1bf5b1ac1353c9e132774f3f7e1df" title="Sizes and indices.">nodes</a>,
<a name="l00599"></a>00599                                           int64 penalty) {
<a name="l00600"></a>00600   <span class="keyword">const</span> <span class="keywordtype">int</span> size = <a class="code" href="classoperations__research_1_1RoutingModel.html#5a65ea247ed01f2f2b3a665952d84feb">disjunctions_</a>.size();
<a name="l00601"></a>00601   <a class="code" href="classoperations__research_1_1RoutingModel.html#5a65ea247ed01f2f2b3a665952d84feb">disjunctions_</a>.resize(size + 1);
<a name="l00602"></a>00602   vector&lt;int64&gt;&amp; disjunction_nodes = <a class="code" href="classoperations__research_1_1RoutingModel.html#5a65ea247ed01f2f2b3a665952d84feb">disjunctions_</a>[size].nodes;
<a name="l00603"></a>00603   disjunction_nodes.resize(nodes.size());
<a name="l00604"></a>00604   <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; nodes.size(); ++i) {
<a name="l00605"></a>00605     CHECK_NE(<a class="code" href="namespaceoperations__research.html#af7bc335dbf1cd813265847ceaacc807" title="namespace">kUnassigned</a>, <a class="code" href="classoperations__research_1_1RoutingModel.html#ecab1df191f3fa19f616f76b493897eb">node_to_index_</a>[nodes[i]]);
<a name="l00606"></a>00606     disjunction_nodes[i] = <a class="code" href="classoperations__research_1_1RoutingModel.html#ecab1df191f3fa19f616f76b493897eb">node_to_index_</a>[nodes[i]];
<a name="l00607"></a>00607   }
<a name="l00608"></a>00608   <a class="code" href="classoperations__research_1_1RoutingModel.html#5a65ea247ed01f2f2b3a665952d84feb">disjunctions_</a>[size].penalty = penalty;
<a name="l00609"></a>00609   <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; nodes.size(); ++i) {
<a name="l00610"></a>00610     <span class="comment">// TODO(user): support multiple disjunction per node</span>
<a name="l00611"></a>00611     <a class="code" href="classoperations__research_1_1RoutingModel.html#62d438f28c9ddef04ecbaae3a700112b">node_to_disjunction_</a>[<a class="code" href="classoperations__research_1_1RoutingModel.html#ecab1df191f3fa19f616f76b493897eb">node_to_index_</a>[nodes[i]]] = size;
<a name="l00612"></a>00612   }
<a name="l00613"></a>00613 }
<a name="l00614"></a>00614 
<a name="l00615"></a><a class="code" href="classoperations__research_1_1RoutingModel.html#aab7338ae6c2eb8b78cdb17d6641441a">00615</a> <a class="code" href="classoperations__research_1_1IntVar.html" title="The class IntVar is a subset of IntExpr.">IntVar</a>* <a class="code" href="classoperations__research_1_1RoutingModel.html#aab7338ae6c2eb8b78cdb17d6641441a" title="Returns NULL if no penalty cost, otherwise returns penalty variable.">RoutingModel::CreateDisjunction</a>(<span class="keywordtype">int</span> disjunction) {
<a name="l00616"></a>00616   <span class="keyword">const</span> vector&lt;int64&gt;&amp; <a class="code" href="classoperations__research_1_1RoutingModel.html#20c1bf5b1ac1353c9e132774f3f7e1df" title="Sizes and indices.">nodes</a> = <a class="code" href="classoperations__research_1_1RoutingModel.html#5a65ea247ed01f2f2b3a665952d84feb">disjunctions_</a>[disjunction].nodes;
<a name="l00617"></a>00617   <span class="keyword">const</span> <span class="keywordtype">int</span> nodes_size = nodes.size();
<a name="l00618"></a>00618   vector&lt;IntVar*&gt; disjunction_vars(nodes_size + 1);
<a name="l00619"></a>00619   <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; nodes_size; ++i) {
<a name="l00620"></a>00620     <span class="keyword">const</span> int64 node = nodes[i];
<a name="l00621"></a>00621     CHECK_LT(node, <a class="code" href="classoperations__research_1_1RoutingModel.html#5a560929b26804990f1e7d6972218f87">Size</a>());
<a name="l00622"></a>00622     disjunction_vars[i] = <a class="code" href="classoperations__research_1_1RoutingModel.html#b3c582ae2bfc4f87b0ae3585d44123a5">ActiveVar</a>(node);
<a name="l00623"></a>00623   }
<a name="l00624"></a>00624   <a class="code" href="classoperations__research_1_1IntVar.html" title="The class IntVar is a subset of IntExpr.">IntVar</a>* no_active_var = <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;MakeBoolVar();
<a name="l00625"></a>00625   disjunction_vars[nodes_size] = no_active_var;
<a name="l00626"></a>00626   <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;AddConstraint(<a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;MakeSumEquality(disjunction_vars, 1));
<a name="l00627"></a>00627   <span class="keyword">const</span> int64 penalty = <a class="code" href="classoperations__research_1_1RoutingModel.html#5a65ea247ed01f2f2b3a665952d84feb">disjunctions_</a>[disjunction].penalty;
<a name="l00628"></a>00628   <span class="keywordflow">if</span> (penalty &lt; 0) {
<a name="l00629"></a>00629     no_active_var-&gt;<a class="code" href="classoperations__research_1_1IntExpr.html#dee9a082160df545671781df47f2b985">SetMax</a>(0);
<a name="l00630"></a>00630     <span class="keywordflow">return</span> NULL;
<a name="l00631"></a>00631   } <span class="keywordflow">else</span> {
<a name="l00632"></a>00632     <span class="keywordflow">return</span> <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;MakeProd(no_active_var, penalty)-&gt;Var();
<a name="l00633"></a>00633   }
<a name="l00634"></a>00634 }
<a name="l00635"></a>00635 
<a name="l00636"></a><a class="code" href="classoperations__research_1_1RoutingModel.html#421504809966a6abc4cd725c48780060">00636</a> <span class="keywordtype">void</span> <a class="code" href="classoperations__research_1_1RoutingModel.html#421504809966a6abc4cd725c48780060">RoutingModel::AddLocalSearchOperator</a>(<a class="code" href="classoperations__research_1_1LocalSearchOperator.html" title="Local search operators.">LocalSearchOperator</a>* ls_operator) {
<a name="l00637"></a>00637   <a class="code" href="classoperations__research_1_1RoutingModel.html#60bdbaf0a15e148766eaf5ede61e2b2a">extra_operators_</a>.push_back(ls_operator);
<a name="l00638"></a>00638 }
<a name="l00639"></a>00639 
<a name="l00640"></a><a class="code" href="classoperations__research_1_1RoutingModel.html#dc0823e5fd3b472adf49430335f8d7ee">00640</a> <span class="keywordtype">void</span> <a class="code" href="classoperations__research_1_1RoutingModel.html#dc0823e5fd3b472adf49430335f8d7ee">RoutingModel::SetDepot</a>(<span class="keywordtype">int</span> depot) {
<a name="l00641"></a>00641   vector&lt;pair&lt;int, int&gt; &gt; start_end(<a class="code" href="classoperations__research_1_1RoutingModel.html#3b06cdcfe6fc0ea3051a33672108f7df">vehicles_</a>, std::make_pair(depot, depot));
<a name="l00642"></a>00642   <a class="code" href="classoperations__research_1_1RoutingModel.html#799de48eabd60f1f9f0217ceab445fb4">SetStartEnd</a>(start_end);
<a name="l00643"></a>00643 }
<a name="l00644"></a>00644 
<a name="l00645"></a><a class="code" href="classoperations__research_1_1RoutingModel.html#799de48eabd60f1f9f0217ceab445fb4">00645</a> <span class="keywordtype">void</span> <a class="code" href="classoperations__research_1_1RoutingModel.html#799de48eabd60f1f9f0217ceab445fb4">RoutingModel::SetStartEnd</a>(<span class="keyword">const</span> vector&lt;pair&lt;int, int&gt; &gt;&amp; start_end) {
<a name="l00646"></a>00646   <span class="keywordflow">if</span> (<a class="code" href="classoperations__research_1_1RoutingModel.html#86707a7b4b672e8105ba1788daff4b1f">is_depot_set_</a>) {
<a name="l00647"></a>00647     LOG(WARNING) &lt;&lt; <span class="stringliteral">"A depot has already been specified, ignoring new ones"</span>;
<a name="l00648"></a>00648     <span class="keywordflow">return</span>;
<a name="l00649"></a>00649   }
<a name="l00650"></a>00650   CHECK_EQ(start_end.size(), <a class="code" href="classoperations__research_1_1RoutingModel.html#3b06cdcfe6fc0ea3051a33672108f7df">vehicles_</a>);
<a name="l00651"></a>00651   <span class="keyword">const</span> <span class="keywordtype">int</span> size = <a class="code" href="classoperations__research_1_1RoutingModel.html#5a560929b26804990f1e7d6972218f87">Size</a>();
<a name="l00652"></a>00652   hash_set&lt;int&gt; starts;
<a name="l00653"></a>00653   hash_set&lt;int&gt; ends;
<a name="l00654"></a>00654   <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; <a class="code" href="classoperations__research_1_1RoutingModel.html#3b06cdcfe6fc0ea3051a33672108f7df">vehicles_</a>; ++i) {
<a name="l00655"></a>00655     <span class="keywordtype">int</span> start = start_end[i].first;
<a name="l00656"></a>00656     <span class="keywordtype">int</span> end = start_end[i].second;
<a name="l00657"></a>00657     CHECK_GE(start, 0);
<a name="l00658"></a>00658     CHECK_GE(end, 0);
<a name="l00659"></a>00659     CHECK_LE(start, <a class="code" href="classoperations__research_1_1RoutingModel.html#1bdc721bad2ac8c6ef6530174ccb8bbc">nodes_</a>);
<a name="l00660"></a>00660     CHECK_LE(end, <a class="code" href="classoperations__research_1_1RoutingModel.html#1bdc721bad2ac8c6ef6530174ccb8bbc">nodes_</a>);
<a name="l00661"></a>00661     starts.insert(start);
<a name="l00662"></a>00662     ends.insert(end);
<a name="l00663"></a>00663   }
<a name="l00664"></a>00664   <a class="code" href="classoperations__research_1_1RoutingModel.html#92bd4a2613f71af0737210f04f140e5d">index_to_node_</a>.resize(size + vehicles_);
<a name="l00665"></a>00665   <a class="code" href="classoperations__research_1_1RoutingModel.html#ecab1df191f3fa19f616f76b493897eb">node_to_index_</a>.resize(<a class="code" href="classoperations__research_1_1RoutingModel.html#1bdc721bad2ac8c6ef6530174ccb8bbc">nodes_</a>, <a class="code" href="namespaceoperations__research.html#af7bc335dbf1cd813265847ceaacc807" title="namespace">kUnassigned</a>);
<a name="l00666"></a>00666   <span class="keywordtype">int</span> index = 0;
<a name="l00667"></a>00667   <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; <a class="code" href="classoperations__research_1_1RoutingModel.html#1bdc721bad2ac8c6ef6530174ccb8bbc">nodes_</a>; ++i) {
<a name="l00668"></a>00668     <span class="keywordflow">if</span> (starts.count(i) != 0 || ends.count(i) == 0) {
<a name="l00669"></a>00669       <a class="code" href="classoperations__research_1_1RoutingModel.html#92bd4a2613f71af0737210f04f140e5d">index_to_node_</a>[index] = i;
<a name="l00670"></a>00670       <a class="code" href="classoperations__research_1_1RoutingModel.html#ecab1df191f3fa19f616f76b493897eb">node_to_index_</a>[i] = index;
<a name="l00671"></a>00671       ++index;
<a name="l00672"></a>00672     }
<a name="l00673"></a>00673   }
<a name="l00674"></a>00674   hash_set&lt;int&gt; node_set;
<a name="l00675"></a>00675   <a class="code" href="classoperations__research_1_1RoutingModel.html#1877e4587745efdcd86f15ecf25fe22d">index_to_vehicle_</a>.resize(size + vehicles_, <a class="code" href="namespaceoperations__research.html#af7bc335dbf1cd813265847ceaacc807" title="namespace">kUnassigned</a>);
<a name="l00676"></a>00676   <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; vehicles_; ++i) {
<a name="l00677"></a>00677     <span class="keywordtype">int</span> start = start_end[i].first;
<a name="l00678"></a>00678     <span class="keywordflow">if</span> (node_set.count(start) == 0) {
<a name="l00679"></a>00679       node_set.insert(start);
<a name="l00680"></a>00680       <span class="keyword">const</span> <span class="keywordtype">int</span> start_index = <a class="code" href="classoperations__research_1_1RoutingModel.html#ecab1df191f3fa19f616f76b493897eb">node_to_index_</a>[start];
<a name="l00681"></a>00681       <a class="code" href="classoperations__research_1_1RoutingModel.html#95698f9a2c29c061800f2a92c858f6f0">starts_</a>[i] = start_index;
<a name="l00682"></a>00682       CHECK_NE(<a class="code" href="namespaceoperations__research.html#af7bc335dbf1cd813265847ceaacc807" title="namespace">kUnassigned</a>, start_index);
<a name="l00683"></a>00683       <a class="code" href="classoperations__research_1_1RoutingModel.html#1877e4587745efdcd86f15ecf25fe22d">index_to_vehicle_</a>[start_index] = i;
<a name="l00684"></a>00684     } <span class="keywordflow">else</span> {
<a name="l00685"></a>00685       <a class="code" href="classoperations__research_1_1RoutingModel.html#95698f9a2c29c061800f2a92c858f6f0">starts_</a>[i] = index;
<a name="l00686"></a>00686       <a class="code" href="classoperations__research_1_1RoutingModel.html#92bd4a2613f71af0737210f04f140e5d">index_to_node_</a>[index] = start;
<a name="l00687"></a>00687       <a class="code" href="classoperations__research_1_1RoutingModel.html#1877e4587745efdcd86f15ecf25fe22d">index_to_vehicle_</a>[index] = i;
<a name="l00688"></a>00688       ++index;
<a name="l00689"></a>00689     }
<a name="l00690"></a>00690   }
<a name="l00691"></a>00691   <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; vehicles_; ++i) {
<a name="l00692"></a>00692     <span class="keywordtype">int</span> end = start_end[i].second;
<a name="l00693"></a>00693     <a class="code" href="classoperations__research_1_1RoutingModel.html#92bd4a2613f71af0737210f04f140e5d">index_to_node_</a>[index] = end;
<a name="l00694"></a>00694     <a class="code" href="classoperations__research_1_1RoutingModel.html#ab6ba66c4aef92cfa7d94cee544ba50e">ends_</a>[i] = index;
<a name="l00695"></a>00695     CHECK_LE(size, index);
<a name="l00696"></a>00696     <a class="code" href="classoperations__research_1_1RoutingModel.html#1877e4587745efdcd86f15ecf25fe22d">index_to_vehicle_</a>[index] = i;
<a name="l00697"></a>00697     ++index;
<a name="l00698"></a>00698   }
<a name="l00699"></a>00699   <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; size; ++i) {
<a name="l00700"></a>00700     <span class="keywordflow">for</span> (<span class="keywordtype">int</span> j = 0; j &lt; vehicles_; ++j) {
<a name="l00701"></a>00701       <span class="comment">// "start" node: nexts_[i] != start</span>
<a name="l00702"></a>00702       <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;AddConstraint(<a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;MakeNonEquality(<a class="code" href="classoperations__research_1_1RoutingModel.html#e77d116609e31411fd2c02483a8300e2">nexts_</a>[i], <a class="code" href="classoperations__research_1_1RoutingModel.html#95698f9a2c29c061800f2a92c858f6f0">starts_</a>[j]));
<a name="l00703"></a>00703     }
<a name="l00704"></a>00704     <span class="comment">// Extra constraint to state a node can't point to itself</span>
<a name="l00705"></a>00705     <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;AddConstraint(<a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;MakeIsDifferentCstCt(<a class="code" href="classoperations__research_1_1RoutingModel.html#e77d116609e31411fd2c02483a8300e2">nexts_</a>[i],
<a name="l00706"></a>00706                                                          i,
<a name="l00707"></a>00707                                                          <a class="code" href="classoperations__research_1_1RoutingModel.html#b3d271b9caa290d0a01e3da78a0cbbb4">active_</a>[i]));
<a name="l00708"></a>00708   }
<a name="l00709"></a>00709   <a class="code" href="classoperations__research_1_1RoutingModel.html#86707a7b4b672e8105ba1788daff4b1f">is_depot_set_</a> = <span class="keyword">true</span>;
<a name="l00710"></a>00710 
<a name="l00711"></a>00711   <span class="comment">// Logging model information.</span>
<a name="l00712"></a>00712   VLOG(1) &lt;&lt; <span class="stringliteral">"Number of nodes: "</span> &lt;&lt; nodes_;
<a name="l00713"></a>00713   VLOG(1) &lt;&lt; <span class="stringliteral">"Number of vehicles: "</span> &lt;&lt; vehicles_;
<a name="l00714"></a>00714   <span class="keywordflow">for</span> (<span class="keywordtype">int</span> index = 0; index &lt; <a class="code" href="classoperations__research_1_1RoutingModel.html#92bd4a2613f71af0737210f04f140e5d">index_to_node_</a>.size(); ++index) {
<a name="l00715"></a>00715     VLOG(1) &lt;&lt; <span class="stringliteral">"Variable index "</span> &lt;&lt; index
<a name="l00716"></a>00716             &lt;&lt; <span class="stringliteral">" -&gt; Node index "</span> &lt;&lt; <a class="code" href="classoperations__research_1_1RoutingModel.html#92bd4a2613f71af0737210f04f140e5d">index_to_node_</a>[index];
<a name="l00717"></a>00717   }
<a name="l00718"></a>00718 }
<a name="l00719"></a>00719 
<a name="l00720"></a><a class="code" href="classoperations__research_1_1RoutingModel.html#e84602b98050ad382d725e35326aab3d">00720</a> <span class="keywordtype">void</span> <a class="code" href="classoperations__research_1_1RoutingModel.html#e84602b98050ad382d725e35326aab3d">RoutingModel::CloseModel</a>() {
<a name="l00721"></a>00721   <span class="keywordflow">if</span> (<a class="code" href="classoperations__research_1_1RoutingModel.html#8767c777c841cf8841a4957019a7ea8b">closed_</a>) {
<a name="l00722"></a>00722     LOG(WARNING) &lt;&lt; <span class="stringliteral">"Model already closed"</span>;
<a name="l00723"></a>00723     <span class="keywordflow">return</span>;
<a name="l00724"></a>00724   }
<a name="l00725"></a>00725   <a class="code" href="classoperations__research_1_1RoutingModel.html#8767c777c841cf8841a4957019a7ea8b">closed_</a> = <span class="keyword">true</span>;
<a name="l00726"></a>00726 
<a name="l00727"></a>00727   <a class="code" href="classoperations__research_1_1RoutingModel.html#0996e6ce1d283e605868f7c45065ae96">CheckDepot</a>();
<a name="l00728"></a>00728 
<a name="l00729"></a>00729   <a class="code" href="classoperations__research_1_1RoutingModel.html#2e31d189d151a254758ed9f0352e5eac">AddNoCycleConstraintInternal</a>();
<a name="l00730"></a>00730 
<a name="l00731"></a>00731   <span class="keyword">const</span> <span class="keywordtype">int</span> size = <a class="code" href="classoperations__research_1_1RoutingModel.html#5a560929b26804990f1e7d6972218f87">Size</a>();
<a name="l00732"></a>00732 
<a name="l00733"></a>00733   <span class="comment">// Vehicle variable constraints</span>
<a name="l00734"></a>00734   <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; <a class="code" href="classoperations__research_1_1RoutingModel.html#3b06cdcfe6fc0ea3051a33672108f7df">vehicles_</a>; ++i) {
<a name="l00735"></a>00735     <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;AddConstraint(<a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;MakeEquality(
<a name="l00736"></a>00736         <a class="code" href="classoperations__research_1_1RoutingModel.html#6b112df31ad4958e036dea7d31e64ed0">vehicle_vars_</a>[<a class="code" href="classoperations__research_1_1RoutingModel.html#95698f9a2c29c061800f2a92c858f6f0">starts_</a>[i]], <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;MakeIntConst(i)));
<a name="l00737"></a>00737     <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;AddConstraint(<a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;MakeEquality(
<a name="l00738"></a>00738         <a class="code" href="classoperations__research_1_1RoutingModel.html#6b112df31ad4958e036dea7d31e64ed0">vehicle_vars_</a>[<a class="code" href="classoperations__research_1_1RoutingModel.html#ab6ba66c4aef92cfa7d94cee544ba50e">ends_</a>[i]], <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;MakeIntConst(i)));
<a name="l00739"></a>00739   }
<a name="l00740"></a>00740   vector&lt;IntVar*&gt; zero_transit(size, <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;MakeIntConst(<a class="code" href="namespaceoperations__research.html#009f247167f32509baf749083e4bc984" title="Misc.">Zero</a>()));
<a name="l00741"></a>00741   <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;AddConstraint(<a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;MakePathCumul(<a class="code" href="classoperations__research_1_1RoutingModel.html#e77d116609e31411fd2c02483a8300e2">nexts_</a>.get(),
<a name="l00742"></a>00742                                                 <a class="code" href="classoperations__research_1_1RoutingModel.html#b3d271b9caa290d0a01e3da78a0cbbb4">active_</a>.get(),
<a name="l00743"></a>00743                                                 <a class="code" href="classoperations__research_1_1RoutingModel.html#6b112df31ad4958e036dea7d31e64ed0">vehicle_vars_</a>.get(),
<a name="l00744"></a>00744                                                 zero_transit.data(),
<a name="l00745"></a>00745                                                 size,
<a name="l00746"></a>00746                                                 size + vehicles_));
<a name="l00747"></a>00747 
<a name="l00748"></a>00748   <span class="comment">// Set all active unless there are disjunctions</span>
<a name="l00749"></a>00749   <span class="keywordflow">if</span> (<a class="code" href="classoperations__research_1_1RoutingModel.html#5a65ea247ed01f2f2b3a665952d84feb">disjunctions_</a>.size() == 0) {
<a name="l00750"></a>00750     <a class="code" href="classoperations__research_1_1RoutingModel.html#fa5489925a39e8484fea85ad916ab72b">AddAllActive</a>();
<a name="l00751"></a>00751   }
<a name="l00752"></a>00752 
<a name="l00753"></a>00753   <span class="comment">// Associate first and "logical" last nodes</span>
<a name="l00754"></a>00754   <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; vehicles_; ++i) {
<a name="l00755"></a>00755     <span class="keywordflow">for</span> (<span class="keywordtype">int</span> j = 0; j &lt; vehicles_; ++j) {
<a name="l00756"></a>00756       <span class="keywordflow">if</span> (i != j) {
<a name="l00757"></a>00757         <a class="code" href="classoperations__research_1_1RoutingModel.html#e77d116609e31411fd2c02483a8300e2">nexts_</a>[<a class="code" href="classoperations__research_1_1RoutingModel.html#95698f9a2c29c061800f2a92c858f6f0">starts_</a>[i]]-&gt;RemoveValue(<a class="code" href="classoperations__research_1_1RoutingModel.html#ab6ba66c4aef92cfa7d94cee544ba50e">ends_</a>[j]);
<a name="l00758"></a>00758       }
<a name="l00759"></a>00759     }
<a name="l00760"></a>00760   }
<a name="l00761"></a>00761 
<a name="l00762"></a>00762   vector&lt;IntVar*&gt; cost_elements;
<a name="l00763"></a>00763   <span class="comment">// Arc costs: the cost of an arc (i, nexts_[i], vehicle_vars_[i]) is</span>
<a name="l00764"></a>00764   <span class="comment">// costs_(nexts_[i], vehicle_vars_[i]); the total cost is the sum of arc</span>
<a name="l00765"></a>00765   <span class="comment">// costs.</span>
<a name="l00766"></a>00766   <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; size; ++i) {
<a name="l00767"></a>00767     <a class="code" href="classoperations__research_1_1IntExpr.html" title="The class IntExpr is the base of all integer expressions in constraint programming...">IntExpr</a>* expr = NULL;
<a name="l00768"></a>00768     <span class="keywordflow">if</span> (<a class="code" href="classoperations__research_1_1RoutingModel.html#4f6517f5303674cdce51559650451245">homogeneous_costs_</a>) {
<a name="l00769"></a>00769       expr = <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;MakeElement(
<a name="l00770"></a>00770           NewPermanentCallback(<span class="keyword">this</span>,
<a name="l00771"></a>00771                                &amp;<a class="code" href="classoperations__research_1_1RoutingModel.html#6f274d2ace4d354140b9c086ef4dceee">RoutingModel::GetHomogeneousCost</a>,
<a name="l00772"></a>00772                                static_cast&lt;int64&gt;(i)),
<a name="l00773"></a>00773           <a class="code" href="classoperations__research_1_1RoutingModel.html#e77d116609e31411fd2c02483a8300e2">nexts_</a>[i]);
<a name="l00774"></a>00774     } <span class="keywordflow">else</span> {
<a name="l00775"></a>00775       expr = <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;MakeElement(
<a name="l00776"></a>00776           NewPermanentCallback(<span class="keyword">this</span>,
<a name="l00777"></a>00777                                &amp;<a class="code" href="classoperations__research_1_1RoutingModel.html#d93cf7b05fe7541d808bf73268cb62da">RoutingModel::GetCost</a>,
<a name="l00778"></a>00778                                static_cast&lt;int64&gt;(i)),
<a name="l00779"></a>00779           <a class="code" href="classoperations__research_1_1RoutingModel.html#e77d116609e31411fd2c02483a8300e2">nexts_</a>[i],
<a name="l00780"></a>00780           <a class="code" href="classoperations__research_1_1RoutingModel.html#6b112df31ad4958e036dea7d31e64ed0">vehicle_vars_</a>[i]);
<a name="l00781"></a>00781     }
<a name="l00782"></a>00782     <a class="code" href="classoperations__research_1_1IntVar.html" title="The class IntVar is a subset of IntExpr.">IntVar</a>* var = <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;MakeProd(expr, <a class="code" href="classoperations__research_1_1RoutingModel.html#b3d271b9caa290d0a01e3da78a0cbbb4">active_</a>[i])-&gt;Var();
<a name="l00783"></a>00783     cost_elements.push_back(var);
<a name="l00784"></a>00784   }
<a name="l00785"></a>00785   <span class="comment">// Penalty costs</span>
<a name="l00786"></a>00786   <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; <a class="code" href="classoperations__research_1_1RoutingModel.html#5a65ea247ed01f2f2b3a665952d84feb">disjunctions_</a>.size(); ++i) {
<a name="l00787"></a>00787     <a class="code" href="classoperations__research_1_1IntVar.html" title="The class IntVar is a subset of IntExpr.">IntVar</a>* penalty_var = <a class="code" href="classoperations__research_1_1RoutingModel.html#aab7338ae6c2eb8b78cdb17d6641441a" title="Returns NULL if no penalty cost, otherwise returns penalty variable.">CreateDisjunction</a>(i);
<a name="l00788"></a>00788     <span class="keywordflow">if</span> (penalty_var != NULL) {
<a name="l00789"></a>00789       cost_elements.push_back(penalty_var);
<a name="l00790"></a>00790     }
<a name="l00791"></a>00791   }
<a name="l00792"></a>00792   <a class="code" href="classoperations__research_1_1RoutingModel.html#af7a6accbaa5a124c814cd037fc4af5b">cost_</a> = <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;MakeSum(cost_elements)-&gt;Var();
<a name="l00793"></a>00793   <a class="code" href="classoperations__research_1_1RoutingModel.html#af7a6accbaa5a124c814cd037fc4af5b">cost_</a>-&gt;<a class="code" href="classoperations__research_1_1PropagationBaseObject.html#8b98dbf206a52e5f327b3640f71193da">set_name</a>(<span class="stringliteral">"Cost"</span>);
<a name="l00794"></a>00794 
<a name="l00795"></a>00795   <a class="code" href="classoperations__research_1_1RoutingModel.html#b7622681bbdbe57b55c5ec7811664162">SetUpSearch</a>();
<a name="l00796"></a>00796 }
<a name="l00797"></a>00797 
<a name="l00798"></a>00798 <span class="comment">// Flags override strategy selection</span>
<a name="l00799"></a>00799 <a class="code" href="classoperations__research_1_1RoutingModel.html#6f38b3ff9a2e455677856d97e339da6d">RoutingModel::RoutingStrategy</a>
<a name="l00800"></a><a class="code" href="classoperations__research_1_1RoutingModel.html#da509d882b2aed55dc59021c3a149c7e">00800</a> <a class="code" href="classoperations__research_1_1RoutingModel.html#da509d882b2aed55dc59021c3a149c7e" title="If a first solution flag has been set (to a value different from Default), returns...">RoutingModel::GetSelectedFirstSolutionStrategy</a>()<span class="keyword"> const </span>{
<a name="l00801"></a>00801   <span class="keywordflow">if</span> (FLAGS_routing_first_solution.compare(<span class="stringliteral">"GlobalCheapestArc"</span>) == 0) {
<a name="l00802"></a>00802     <span class="keywordflow">return</span> <a class="code" href="classoperations__research_1_1RoutingModel.html#6f38b3ff9a2e455677856d97e339da6dbb864ec796188b14106446600fd330f8">ROUTING_GLOBAL_CHEAPEST_ARC</a>;
<a name="l00803"></a>00803   } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (FLAGS_routing_first_solution.compare(<span class="stringliteral">"LocalCheapestArc"</span>) == 0) {
<a name="l00804"></a>00804     <span class="keywordflow">return</span> <a class="code" href="classoperations__research_1_1RoutingModel.html#6f38b3ff9a2e455677856d97e339da6d4c2534a4236ed8b1c937467da71a55a7">ROUTING_LOCAL_CHEAPEST_ARC</a>;
<a name="l00805"></a>00805   } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (FLAGS_routing_first_solution.compare(<span class="stringliteral">"PathCheapestArc"</span>) == 0) {
<a name="l00806"></a>00806     <span class="keywordflow">return</span> <a class="code" href="classoperations__research_1_1RoutingModel.html#6f38b3ff9a2e455677856d97e339da6db84d29872d22f4d9cf1a1fd21c05dcf4">ROUTING_PATH_CHEAPEST_ARC</a>;
<a name="l00807"></a>00807   }
<a name="l00808"></a>00808   <span class="keywordflow">return</span> <a class="code" href="classoperations__research_1_1RoutingModel.html#739100fc51e97819a93d43c5eb76b20f" title="Search data.">first_solution_strategy_</a>;
<a name="l00809"></a>00809 }
<a name="l00810"></a>00810 
<a name="l00811"></a>00811 <a class="code" href="classoperations__research_1_1RoutingModel.html#0f0bd97e25af059ab2e8e7f263afc8e1">RoutingModel::RoutingMetaheuristic</a>
<a name="l00812"></a><a class="code" href="classoperations__research_1_1RoutingModel.html#22f429a899b1c00cad6e6ff04a117ee4">00812</a> <a class="code" href="classoperations__research_1_1RoutingModel.html#22f429a899b1c00cad6e6ff04a117ee4" title="If a metaheuristic flag has been set, returns the corresponding metaheuristic, otherwise...">RoutingModel::GetSelectedMetaheuristic</a>()<span class="keyword"> const </span>{
<a name="l00813"></a>00813   <span class="keywordflow">if</span> (FLAGS_routing_tabu_search) {
<a name="l00814"></a>00814     <span class="keywordflow">return</span> <a class="code" href="classoperations__research_1_1RoutingModel.html#0f0bd97e25af059ab2e8e7f263afc8e10dd042e16dd28cfdd370382de2f51a35">ROUTING_TABU_SEARCH</a>;
<a name="l00815"></a>00815   } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (FLAGS_routing_simulated_annealing) {
<a name="l00816"></a>00816     <span class="keywordflow">return</span> <a class="code" href="classoperations__research_1_1RoutingModel.html#0f0bd97e25af059ab2e8e7f263afc8e1a166bff87b6170318a34b1af38fc98fe">ROUTING_SIMULATED_ANNEALING</a>;
<a name="l00817"></a>00817   } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (FLAGS_routing_guided_local_search) {
<a name="l00818"></a>00818     <span class="keywordflow">return</span> <a class="code" href="classoperations__research_1_1RoutingModel.html#0f0bd97e25af059ab2e8e7f263afc8e189a5042196881240e6b78a52c87b1588">ROUTING_GUIDED_LOCAL_SEARCH</a>;
<a name="l00819"></a>00819   }
<a name="l00820"></a>00820   <span class="keywordflow">return</span> <a class="code" href="classoperations__research_1_1RoutingModel.html#606256780e1940df9d2efd03ee2d5558">metaheuristic_</a>;
<a name="l00821"></a>00821 }
<a name="l00822"></a>00822 
<a name="l00823"></a><a class="code" href="classoperations__research_1_1RoutingModel.html#4928a8a9f21302a215a6f26dda90eef1">00823</a> <span class="keywordtype">void</span> <a class="code" href="classoperations__research_1_1RoutingModel.html#4928a8a9f21302a215a6f26dda90eef1">RoutingModel::AddSearchMonitor</a>(<a class="code" href="classoperations__research_1_1SearchMonitor.html" title="A search monitor is a simple set of callbacks to monitor all search events.">SearchMonitor</a>* <span class="keyword">const</span> monitor) {
<a name="l00824"></a>00824   <a class="code" href="classoperations__research_1_1RoutingModel.html#bbd0b2c8c7626a563a43a93805d30c8e">monitors_</a>.push_back(monitor);
<a name="l00825"></a>00825 }
<a name="l00826"></a>00826 
<a name="l00827"></a><a class="code" href="classoperations__research_1_1RoutingModel.html#79e79d503b81e378485b402293a5828c">00827</a> <span class="keyword">const</span> <a class="code" href="classoperations__research_1_1Assignment.html" title="Assignment.">Assignment</a>* <a class="code" href="classoperations__research_1_1RoutingModel.html#79e79d503b81e378485b402293a5828c">RoutingModel::Solve</a>(<span class="keyword">const</span> <a class="code" href="classoperations__research_1_1Assignment.html" title="Assignment.">Assignment</a>* assignment) {
<a name="l00828"></a>00828   <span class="keywordflow">if</span> (!<a class="code" href="classoperations__research_1_1RoutingModel.html#8767c777c841cf8841a4957019a7ea8b">closed_</a>) {
<a name="l00829"></a>00829     <a class="code" href="classoperations__research_1_1RoutingModel.html#e84602b98050ad382d725e35326aab3d">CloseModel</a>();
<a name="l00830"></a>00830   }
<a name="l00831"></a>00831   <span class="keywordflow">if</span> (NULL == assignment) {
<a name="l00832"></a>00832     <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;Solve(<a class="code" href="classoperations__research_1_1RoutingModel.html#280574ad73607f977e7224cb89ad804d">solve_db_</a>, <a class="code" href="classoperations__research_1_1RoutingModel.html#bbd0b2c8c7626a563a43a93805d30c8e">monitors_</a>);
<a name="l00833"></a>00833   } <span class="keywordflow">else</span> {
<a name="l00834"></a>00834     <a class="code" href="classoperations__research_1_1RoutingModel.html#9aab3a8f9b7d7feb67e7730ba39fa7bf">assignment_</a>-&gt;<a class="code" href="classoperations__research_1_1Assignment.html#8640e47c57ef2d95a6c94d383a9641a4" title="Copies the intersection of the 2 assignments to the current assignment.">Copy</a>(assignment);
<a name="l00835"></a>00835     <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;Solve(<a class="code" href="classoperations__research_1_1RoutingModel.html#0eca34a05f9011d97cfed6c49a1f7849">improve_db_</a>, <a class="code" href="classoperations__research_1_1RoutingModel.html#bbd0b2c8c7626a563a43a93805d30c8e">monitors_</a>);
<a name="l00836"></a>00836   }
<a name="l00837"></a>00837 
<a name="l00838"></a>00838   <span class="keywordflow">if</span> (<a class="code" href="classoperations__research_1_1RoutingModel.html#bfed56ec00f6fcb4b51601701a5191c5">collect_assignments_</a>-&gt;<a class="code" href="classoperations__research_1_1SolutionCollector.html#0a75621ec7abf1bb8454570a70fed047" title="Returns how many solutions were stored during the search.">solution_count</a>() == 1) {
<a name="l00839"></a>00839     <span class="keywordflow">return</span> <a class="code" href="classoperations__research_1_1RoutingModel.html#bfed56ec00f6fcb4b51601701a5191c5">collect_assignments_</a>-&gt;<a class="code" href="classoperations__research_1_1SolutionCollector.html#4cc0a1301d3dd4d213cd4b043715b0fc" title="Returns the nth solution.">solution</a>(0);
<a name="l00840"></a>00840   } <span class="keywordflow">else</span> {
<a name="l00841"></a>00841     <span class="keywordflow">return</span> NULL;
<a name="l00842"></a>00842   }
<a name="l00843"></a>00843 }
<a name="l00844"></a>00844 
<a name="l00845"></a><a class="code" href="classoperations__research_1_1RoutingModel.html#e8f9291d7a24a81947b261fe4113dbe7">00845</a> <span class="keywordtype">int</span> <a class="code" href="classoperations__research_1_1RoutingModel.html#e8f9291d7a24a81947b261fe4113dbe7" title="Returns the first active node in nodes starting from index + 1.">RoutingModel::FindNextActive</a>(<span class="keywordtype">int</span> index, <span class="keyword">const</span> vector&lt;int&gt;&amp; <a class="code" href="classoperations__research_1_1RoutingModel.html#20c1bf5b1ac1353c9e132774f3f7e1df" title="Sizes and indices.">nodes</a>)<span class="keyword"> const </span>{
<a name="l00846"></a>00846   ++index;
<a name="l00847"></a>00847   CHECK_LE(0, index);
<a name="l00848"></a>00848   <span class="keyword">const</span> <span class="keywordtype">int</span> size = nodes.size();
<a name="l00849"></a>00849   <span class="keywordflow">while</span> (index &lt; size &amp;&amp; <a class="code" href="classoperations__research_1_1RoutingModel.html#b3c582ae2bfc4f87b0ae3585d44123a5">ActiveVar</a>(nodes[index])-&gt;Max() == 0) {
<a name="l00850"></a>00850     ++index;
<a name="l00851"></a>00851   }
<a name="l00852"></a>00852   <span class="keywordflow">return</span> index;
<a name="l00853"></a>00853 }
<a name="l00854"></a>00854 
<a name="l00855"></a><a class="code" href="classoperations__research_1_1RoutingModel.html#41e08b32672844949871c70780f755c7">00855</a> <a class="code" href="classoperations__research_1_1IntVar.html" title="The class IntVar is a subset of IntExpr.">IntVar</a>* <a class="code" href="classoperations__research_1_1RoutingModel.html#41e08b32672844949871c70780f755c7" title="Applies lock chain to the next search.">RoutingModel::ApplyLocks</a>(<span class="keyword">const</span> vector&lt;int&gt;&amp; locks) {
<a name="l00856"></a>00856   <a class="code" href="classoperations__research_1_1RoutingModel.html#75b098f7ca3b7d91130e5335e48dba14">preassignment_</a>-&gt;<a class="code" href="classoperations__research_1_1Assignment.html#95769d12b65e9e41966f082e6be717e3">Clear</a>();
<a name="l00857"></a>00857   <a class="code" href="classoperations__research_1_1IntVar.html" title="The class IntVar is a subset of IntExpr.">IntVar</a>* next_var = NULL;
<a name="l00858"></a>00858   <span class="keywordtype">int</span> lock_index = <a class="code" href="classoperations__research_1_1RoutingModel.html#e8f9291d7a24a81947b261fe4113dbe7" title="Returns the first active node in nodes starting from index + 1.">FindNextActive</a>(-1, locks);
<a name="l00859"></a>00859   <span class="keyword">const</span> <span class="keywordtype">int</span> size = locks.size();
<a name="l00860"></a>00860   <span class="keywordflow">if</span> (lock_index &lt; size) {
<a name="l00861"></a>00861     next_var = <a class="code" href="classoperations__research_1_1RoutingModel.html#dbd98d68e02fd83f6459bf3fda7cfe5d">NextVar</a>(locks[lock_index]);
<a name="l00862"></a>00862     <a class="code" href="classoperations__research_1_1RoutingModel.html#75b098f7ca3b7d91130e5335e48dba14">preassignment_</a>-&gt;<a class="code" href="classoperations__research_1_1Assignment.html#626ead11d524ef2d4d81aa201baecc3b">Add</a>(next_var);
<a name="l00863"></a>00863     <span class="keywordflow">for</span> (lock_index = <a class="code" href="classoperations__research_1_1RoutingModel.html#e8f9291d7a24a81947b261fe4113dbe7" title="Returns the first active node in nodes starting from index + 1.">FindNextActive</a>(lock_index, locks);
<a name="l00864"></a>00864          lock_index &lt; size;
<a name="l00865"></a>00865          lock_index = <a class="code" href="classoperations__research_1_1RoutingModel.html#e8f9291d7a24a81947b261fe4113dbe7" title="Returns the first active node in nodes starting from index + 1.">FindNextActive</a>(lock_index, locks)) {
<a name="l00866"></a>00866       <a class="code" href="classoperations__research_1_1RoutingModel.html#75b098f7ca3b7d91130e5335e48dba14">preassignment_</a>-&gt;<a class="code" href="classoperations__research_1_1Assignment.html#b16aad5c423f18a73d198695b77676d4">SetValue</a>(next_var, locks[lock_index]);
<a name="l00867"></a>00867       next_var = <a class="code" href="classoperations__research_1_1RoutingModel.html#dbd98d68e02fd83f6459bf3fda7cfe5d">NextVar</a>(locks[lock_index]);
<a name="l00868"></a>00868       <a class="code" href="classoperations__research_1_1RoutingModel.html#75b098f7ca3b7d91130e5335e48dba14">preassignment_</a>-&gt;<a class="code" href="classoperations__research_1_1Assignment.html#626ead11d524ef2d4d81aa201baecc3b">Add</a>(next_var);
<a name="l00869"></a>00869     }
<a name="l00870"></a>00870   }
<a name="l00871"></a>00871   <span class="keywordflow">return</span> next_var;
<a name="l00872"></a>00872 }
<a name="l00873"></a>00873 
<a name="l00874"></a><a class="code" href="classoperations__research_1_1RoutingModel.html#daff11f77b3ff5eec418ca0fe74d5890">00874</a> <span class="keywordtype">void</span> <a class="code" href="classoperations__research_1_1RoutingModel.html#daff11f77b3ff5eec418ca0fe74d5890">RoutingModel::UpdateTimeLimit</a>(int64 limit_ms) {
<a name="l00875"></a>00875   <a class="code" href="classoperations__research_1_1RoutingModel.html#3f7c8de95c6af4e6a797545d82764e09">time_limit_ms_</a> = limit_ms;
<a name="l00876"></a>00876   <span class="keywordflow">if</span> (<a class="code" href="classoperations__research_1_1RoutingModel.html#9df588e78069c86a4c2142619172e247">limit_</a> != NULL) {
<a name="l00877"></a>00877     <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;UpdateLimits(<a class="code" href="classoperations__research_1_1RoutingModel.html#3f7c8de95c6af4e6a797545d82764e09">time_limit_ms_</a>,
<a name="l00878"></a>00878                           kint64max,
<a name="l00879"></a>00879                           kint64max,
<a name="l00880"></a>00880                           FLAGS_routing_solution_limit,
<a name="l00881"></a>00881                           <a class="code" href="classoperations__research_1_1RoutingModel.html#9df588e78069c86a4c2142619172e247">limit_</a>);
<a name="l00882"></a>00882   }
<a name="l00883"></a>00883   <span class="keywordflow">if</span> (<a class="code" href="classoperations__research_1_1RoutingModel.html#c1c2ef0d3f5198da307dde6bd9ee75d1">ls_limit_</a> != NULL) {
<a name="l00884"></a>00884     <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;UpdateLimits(<a class="code" href="classoperations__research_1_1RoutingModel.html#3f7c8de95c6af4e6a797545d82764e09">time_limit_ms_</a>,
<a name="l00885"></a>00885                           kint64max,
<a name="l00886"></a>00886                           kint64max,
<a name="l00887"></a>00887                           1,
<a name="l00888"></a>00888                           <a class="code" href="classoperations__research_1_1RoutingModel.html#c1c2ef0d3f5198da307dde6bd9ee75d1">ls_limit_</a>);
<a name="l00889"></a>00889   }
<a name="l00890"></a>00890 }
<a name="l00891"></a>00891 
<a name="l00892"></a><a class="code" href="classoperations__research_1_1RoutingModel.html#e5d2063233d64b4c746080d0e3bb429c">00892</a> <span class="keywordtype">void</span> <a class="code" href="classoperations__research_1_1RoutingModel.html#e5d2063233d64b4c746080d0e3bb429c">RoutingModel::UpdateLNSTimeLimit</a>(int64 limit_ms) {
<a name="l00893"></a>00893   <a class="code" href="classoperations__research_1_1RoutingModel.html#8774b41eec8e980438fb7455ac6084a3">lns_time_limit_ms_</a> = limit_ms;
<a name="l00894"></a>00894   <span class="keywordflow">if</span> (<a class="code" href="classoperations__research_1_1RoutingModel.html#40937151169427015513c95c8f2e4e0a">lns_limit_</a> != NULL) {
<a name="l00895"></a>00895     <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;UpdateLimits(<a class="code" href="classoperations__research_1_1RoutingModel.html#8774b41eec8e980438fb7455ac6084a3">lns_time_limit_ms_</a>,
<a name="l00896"></a>00896                           kint64max,
<a name="l00897"></a>00897                           kint64max,
<a name="l00898"></a>00898                           kint64max,
<a name="l00899"></a>00899                           <a class="code" href="classoperations__research_1_1RoutingModel.html#40937151169427015513c95c8f2e4e0a">lns_limit_</a>);
<a name="l00900"></a>00900   }
<a name="l00901"></a>00901 }
<a name="l00902"></a>00902 
<a name="l00903"></a><a class="code" href="classoperations__research_1_1RoutingModel.html#6d58b03c066bfedc30d6555244bee0f8">00903</a> <span class="keywordtype">void</span> <a class="code" href="classoperations__research_1_1RoutingModel.html#6d58b03c066bfedc30d6555244bee0f8" title="Utilities for swig.">RoutingModel::SetCommandLineOption</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; name,
<a name="l00904"></a>00904                                         <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; value) {
<a name="l00905"></a>00905   google::SetCommandLineOption(name.c_str(), value.c_str());
<a name="l00906"></a>00906 }
<a name="l00907"></a>00907 
<a name="l00908"></a>00908 
<a name="l00909"></a><a class="code" href="classoperations__research_1_1RoutingModel.html#7bfcb5eaee4b0459ddf4c67d2dd19b67">00909</a> int64 <a class="code" href="classoperations__research_1_1RoutingModel.html#7bfcb5eaee4b0459ddf4c67d2dd19b67" title="Returns the node index from an index value resulting fron a next variable.">RoutingModel::IndexToNode</a>(int64 index)<span class="keyword"> const </span>{
<a name="l00910"></a>00910   DCHECK_LT(index, <a class="code" href="classoperations__research_1_1RoutingModel.html#92bd4a2613f71af0737210f04f140e5d">index_to_node_</a>.size());
<a name="l00911"></a>00911   <span class="keywordflow">return</span> <a class="code" href="classoperations__research_1_1RoutingModel.html#92bd4a2613f71af0737210f04f140e5d">index_to_node_</a>[index];
<a name="l00912"></a>00912 }
<a name="l00913"></a>00913 
<a name="l00914"></a><a class="code" href="classoperations__research_1_1RoutingModel.html#ef39595ac7e992dca18201ee3fd26913">00914</a> int64 <a class="code" href="classoperations__research_1_1RoutingModel.html#ef39595ac7e992dca18201ee3fd26913">RoutingModel::GetArcCost</a>(int64 i, int64 j, int64 vehicle) {
<a name="l00915"></a>00915   <a class="code" href="structoperations__research_1_1RoutingModel_1_1CostCacheElement.html">CostCacheElement</a>&amp; cache = <a class="code" href="classoperations__research_1_1RoutingModel.html#fc3dc3e3eabf41aecf7454b6945f2053">cost_cache_</a>[i];
<a name="l00916"></a>00916   <span class="keywordflow">if</span> (cache.<a class="code" href="structoperations__research_1_1RoutingModel_1_1CostCacheElement.html#3e32558465a21bedd5dcd5d27c5cae16">node</a> == j &amp;&amp; cache.<a class="code" href="structoperations__research_1_1RoutingModel_1_1CostCacheElement.html#9bb61720d4944afcffa3644e59fe0ef0">vehicle</a> == vehicle) {
<a name="l00917"></a>00917     <span class="keywordflow">return</span> cache.<a class="code" href="structoperations__research_1_1RoutingModel_1_1CostCacheElement.html#390240638eaf8184db91ad0dc5f84895">cost</a>;
<a name="l00918"></a>00918   }
<a name="l00919"></a>00919   <span class="keyword">const</span> int64 node_i = <a class="code" href="classoperations__research_1_1RoutingModel.html#7bfcb5eaee4b0459ddf4c67d2dd19b67" title="Returns the node index from an index value resulting fron a next variable.">IndexToNode</a>(i);
<a name="l00920"></a>00920   <span class="keyword">const</span> int64 node_j = <a class="code" href="classoperations__research_1_1RoutingModel.html#7bfcb5eaee4b0459ddf4c67d2dd19b67" title="Returns the node index from an index value resulting fron a next variable.">IndexToNode</a>(j);
<a name="l00921"></a>00921   int64 cost = 0;
<a name="l00922"></a>00922   <span class="keywordflow">if</span> (!<a class="code" href="classoperations__research_1_1RoutingModel.html#7f1ed907da5e1918e60d7a206e7dc0d7">IsStart</a>(i)) {
<a name="l00923"></a>00923     cost = <a class="code" href="classoperations__research_1_1RoutingModel.html#5c0ab0b8234ccce6d41bd4bf689d9798">costs_</a>[vehicle]-&gt;Run(node_i, node_j);
<a name="l00924"></a>00924   } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (!<a class="code" href="classoperations__research_1_1RoutingModel.html#d542c0716ca8948f8e6240b2ff24d878">IsEnd</a>(j)) {
<a name="l00925"></a>00925     <span class="comment">// Apply route fixed cost on first non-first/last node, in other words on</span>
<a name="l00926"></a>00926     <span class="comment">// the arc from the first node to its next node if it's not the last node.</span>
<a name="l00927"></a>00927     cost = <a class="code" href="classoperations__research_1_1RoutingModel.html#5c0ab0b8234ccce6d41bd4bf689d9798">costs_</a>[vehicle]-&gt;Run(node_i, node_j)
<a name="l00928"></a>00928       + <a class="code" href="classoperations__research_1_1RoutingModel.html#1b707f8361fb08b4dd12b859ec338fa1">fixed_costs_</a>[<a class="code" href="classoperations__research_1_1RoutingModel.html#1877e4587745efdcd86f15ecf25fe22d">index_to_vehicle_</a>[i]];
<a name="l00929"></a>00929   } <span class="keywordflow">else</span> {
<a name="l00930"></a>00930     cost = 0;
<a name="l00931"></a>00931   }
<a name="l00932"></a>00932   cache.<a class="code" href="structoperations__research_1_1RoutingModel_1_1CostCacheElement.html#3e32558465a21bedd5dcd5d27c5cae16">node</a> = j;
<a name="l00933"></a>00933   cache.<a class="code" href="structoperations__research_1_1RoutingModel_1_1CostCacheElement.html#9bb61720d4944afcffa3644e59fe0ef0">vehicle</a> = vehicle;
<a name="l00934"></a>00934   cache.<a class="code" href="structoperations__research_1_1RoutingModel_1_1CostCacheElement.html#390240638eaf8184db91ad0dc5f84895">cost</a> = cost;
<a name="l00935"></a>00935   <span class="keywordflow">return</span> cost;
<a name="l00936"></a>00936 }
<a name="l00937"></a>00937 
<a name="l00938"></a><a class="code" href="classoperations__research_1_1RoutingModel.html#a80ea9add9966a798ac89d51cb9e7087">00938</a> int64 <a class="code" href="classoperations__research_1_1RoutingModel.html#a80ea9add9966a798ac89d51cb9e7087">RoutingModel::GetPenaltyCost</a>(int64 i)<span class="keyword"> const </span>{
<a name="l00939"></a>00939   <span class="keywordtype">int</span> index = <a class="code" href="namespaceoperations__research.html#af7bc335dbf1cd813265847ceaacc807" title="namespace">kUnassigned</a>;
<a name="l00940"></a>00940   <span class="keywordflow">if</span> (FindCopy(<a class="code" href="classoperations__research_1_1RoutingModel.html#62d438f28c9ddef04ecbaae3a700112b">node_to_disjunction_</a>, i, &amp;index)) {
<a name="l00941"></a>00941     <span class="keyword">const</span> <a class="code" href="structoperations__research_1_1RoutingModel_1_1Disjunction.html">Disjunction</a>&amp; disjunction = <a class="code" href="classoperations__research_1_1RoutingModel.html#5a65ea247ed01f2f2b3a665952d84feb">disjunctions_</a>[index];
<a name="l00942"></a>00942     int64 penalty = disjunction.<a class="code" href="structoperations__research_1_1RoutingModel_1_1Disjunction.html#3ddcee0f7e36296a6d1b1c9572764059">penalty</a>;
<a name="l00943"></a>00943     <span class="keywordflow">if</span> (penalty &gt; 0 &amp;&amp; disjunction.<a class="code" href="structoperations__research_1_1RoutingModel_1_1Disjunction.html#0181f84bbafcdf938540b0f6f1e5d421">nodes</a>.size() == 1) {
<a name="l00944"></a>00944       <span class="keywordflow">return</span> penalty;
<a name="l00945"></a>00945     } <span class="keywordflow">else</span> {
<a name="l00946"></a>00946       <span class="keywordflow">return</span> 0;
<a name="l00947"></a>00947     }
<a name="l00948"></a>00948   } <span class="keywordflow">else</span> {
<a name="l00949"></a>00949     <span class="keywordflow">return</span> 0;
<a name="l00950"></a>00950   }
<a name="l00951"></a>00951 }
<a name="l00952"></a>00952 
<a name="l00953"></a><a class="code" href="classoperations__research_1_1RoutingModel.html#7f1ed907da5e1918e60d7a206e7dc0d7">00953</a> <span class="keywordtype">bool</span> <a class="code" href="classoperations__research_1_1RoutingModel.html#7f1ed907da5e1918e60d7a206e7dc0d7">RoutingModel::IsStart</a>(int64 index)<span class="keyword"> const </span>{
<a name="l00954"></a>00954   <span class="keywordflow">return</span> !<a class="code" href="classoperations__research_1_1RoutingModel.html#d542c0716ca8948f8e6240b2ff24d878">IsEnd</a>(index) &amp;&amp; <a class="code" href="classoperations__research_1_1RoutingModel.html#1877e4587745efdcd86f15ecf25fe22d">index_to_vehicle_</a>[index] != <a class="code" href="namespaceoperations__research.html#af7bc335dbf1cd813265847ceaacc807" title="namespace">kUnassigned</a>;
<a name="l00955"></a>00955 }
<a name="l00956"></a>00956 
<a name="l00957"></a><a class="code" href="classoperations__research_1_1RoutingModel.html#d93cf7b05fe7541d808bf73268cb62da">00957</a> int64 <a class="code" href="classoperations__research_1_1RoutingModel.html#d93cf7b05fe7541d808bf73268cb62da">RoutingModel::GetCost</a>(int64 i, int64 j, int64 vehicle) {
<a name="l00958"></a>00958   <span class="keywordflow">if</span> (i != j) {
<a name="l00959"></a>00959     <span class="keywordflow">return</span> <a class="code" href="classoperations__research_1_1RoutingModel.html#ef39595ac7e992dca18201ee3fd26913">GetArcCost</a>(i, j, vehicle);
<a name="l00960"></a>00960   } <span class="keywordflow">else</span> {
<a name="l00961"></a>00961     <span class="keywordflow">return</span> 0;
<a name="l00962"></a>00962   }
<a name="l00963"></a>00963 }
<a name="l00964"></a>00964 
<a name="l00965"></a><a class="code" href="classoperations__research_1_1RoutingModel.html#a48f081ff3936f9133459882f403f000">00965</a> int64 <a class="code" href="classoperations__research_1_1RoutingModel.html#a48f081ff3936f9133459882f403f000">RoutingModel::GetFilterCost</a>(int64 i, int64 j, int64 vehicle) {
<a name="l00966"></a>00966   <span class="keywordflow">if</span> (i != j) {
<a name="l00967"></a>00967     <span class="keywordflow">return</span> <a class="code" href="classoperations__research_1_1RoutingModel.html#ef39595ac7e992dca18201ee3fd26913">GetArcCost</a>(i, j, vehicle);
<a name="l00968"></a>00968   } <span class="keywordflow">else</span> {
<a name="l00969"></a>00969     <span class="keywordflow">return</span> <a class="code" href="classoperations__research_1_1RoutingModel.html#a80ea9add9966a798ac89d51cb9e7087">GetPenaltyCost</a>(i);
<a name="l00970"></a>00970   }
<a name="l00971"></a>00971 }
<a name="l00972"></a>00972 
<a name="l00973"></a>00973 <span class="comment">// Return high cost if connecting to end node; used in cost-based first solution</span>
<a name="l00974"></a><a class="code" href="classoperations__research_1_1RoutingModel.html#1d7c2d652d782ca3930583b98ee3f15d">00974</a> int64 <a class="code" href="classoperations__research_1_1RoutingModel.html#1d7c2d652d782ca3930583b98ee3f15d" title="Return high cost if connecting to end node; used in cost-based first solution.">RoutingModel::GetFirstSolutionCost</a>(int64 i, int64 j) {
<a name="l00975"></a>00975   <span class="keywordflow">if</span> (j &lt; <a class="code" href="classoperations__research_1_1RoutingModel.html#1bdc721bad2ac8c6ef6530174ccb8bbc">nodes_</a>) {
<a name="l00976"></a>00976     <span class="comment">// TODO(user): Take vehicle into account.</span>
<a name="l00977"></a>00977     <span class="keywordflow">return</span> <a class="code" href="classoperations__research_1_1RoutingModel.html#d93cf7b05fe7541d808bf73268cb62da">GetCost</a>(i, j, 0);
<a name="l00978"></a>00978   } <span class="keywordflow">else</span> {
<a name="l00979"></a>00979     <span class="keywordflow">return</span> kint64max;
<a name="l00980"></a>00980   }
<a name="l00981"></a>00981 }
<a name="l00982"></a>00982 
<a name="l00983"></a><a class="code" href="classoperations__research_1_1RoutingModel.html#0996e6ce1d283e605868f7c45065ae96">00983</a> <span class="keywordtype">void</span> <a class="code" href="classoperations__research_1_1RoutingModel.html#0996e6ce1d283e605868f7c45065ae96">RoutingModel::CheckDepot</a>() {
<a name="l00984"></a>00984   <span class="keywordflow">if</span> (!<a class="code" href="classoperations__research_1_1RoutingModel.html#86707a7b4b672e8105ba1788daff4b1f">is_depot_set_</a>) {
<a name="l00985"></a>00985     LOG(WARNING) &lt;&lt; <span class="stringliteral">"A depot must be specified, setting one at node 0"</span>;
<a name="l00986"></a>00986     <a class="code" href="classoperations__research_1_1RoutingModel.html#dc0823e5fd3b472adf49430335f8d7ee">SetDepot</a>(0);
<a name="l00987"></a>00987   }
<a name="l00988"></a>00988 }
<a name="l00989"></a>00989 
<a name="l00990"></a><a class="code" href="routing_8cc.html#da22f526c521d1b965523c4164b286f7">00990</a> <span class="preprocessor">#define CP_ROUTING_PUSH_BACK_OPERATOR(operator_type)                    \</span>
<a name="l00991"></a>00991 <span class="preprocessor">  if (homogeneous_costs_) {                                             \</span>
<a name="l00992"></a>00992 <span class="preprocessor">    operators.push_back(solver_-&gt;MakeOperator(nexts_.get(),             \</span>
<a name="l00993"></a>00993 <span class="preprocessor">                                              size,                     \</span>
<a name="l00994"></a>00994 <span class="preprocessor">                                              operator_type));          \</span>
<a name="l00995"></a>00995 <span class="preprocessor">  } else {                                                              \</span>
<a name="l00996"></a>00996 <span class="preprocessor">    operators.push_back(solver_-&gt;MakeOperator(nexts_.get(),             \</span>
<a name="l00997"></a>00997 <span class="preprocessor">                                              vehicle_vars_.get(),      \</span>
<a name="l00998"></a>00998 <span class="preprocessor">                                              size,                     \</span>
<a name="l00999"></a>00999 <span class="preprocessor">                                              operator_type));          \</span>
<a name="l01000"></a>01000 <span class="preprocessor">  }</span>
<a name="l01001"></a>01001 <span class="preprocessor"></span>
<a name="l01002"></a><a class="code" href="routing_8cc.html#fd4fdd197d1378301502aafb232f5456">01002</a> <span class="preprocessor">#define CP_ROUTING_PUSH_BACK_CALLBACK_OPERATOR(operator_type)           \</span>
<a name="l01003"></a>01003 <span class="preprocessor">  if (homogeneous_costs_) {                                             \</span>
<a name="l01004"></a>01004 <span class="preprocessor">    operators.push_back(solver_-&gt;MakeOperator(nexts_.get(),             \</span>
<a name="l01005"></a>01005 <span class="preprocessor">                                              size,                     \</span>
<a name="l01006"></a>01006 <span class="preprocessor">                                              BuildCostCallback(),      \</span>
<a name="l01007"></a>01007 <span class="preprocessor">                                              operator_type));          \</span>
<a name="l01008"></a>01008 <span class="preprocessor">  } else {                                                              \</span>
<a name="l01009"></a>01009 <span class="preprocessor">    operators.push_back(solver_-&gt;MakeOperator(nexts_.get(),             \</span>
<a name="l01010"></a>01010 <span class="preprocessor">                                              vehicle_vars_.get(),      \</span>
<a name="l01011"></a>01011 <span class="preprocessor">                                              size,                     \</span>
<a name="l01012"></a>01012 <span class="preprocessor">                                              BuildCostCallback(),      \</span>
<a name="l01013"></a>01013 <span class="preprocessor">                                              operator_type));          \</span>
<a name="l01014"></a>01014 <span class="preprocessor">  }</span>
<a name="l01015"></a>01015 <span class="preprocessor"></span>
<a name="l01016"></a><a class="code" href="classoperations__research_1_1RoutingModel.html#b7622681bbdbe57b55c5ec7811664162">01016</a> <span class="keywordtype">void</span> <a class="code" href="classoperations__research_1_1RoutingModel.html#b7622681bbdbe57b55c5ec7811664162">RoutingModel::SetUpSearch</a>() {
<a name="l01017"></a>01017   <span class="keyword">const</span> <span class="keywordtype">int</span> size = <a class="code" href="classoperations__research_1_1RoutingModel.html#5a560929b26804990f1e7d6972218f87">Size</a>();
<a name="l01018"></a>01018   <a class="code" href="classoperations__research_1_1RoutingModel.html#9aab3a8f9b7d7feb67e7730ba39fa7bf">assignment_</a> = <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;RevAlloc(<span class="keyword">new</span> <a class="code" href="classoperations__research_1_1Assignment.html" title="Assignment.">Assignment</a>(<a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>.get()));
<a name="l01019"></a>01019   <a class="code" href="classoperations__research_1_1RoutingModel.html#9aab3a8f9b7d7feb67e7730ba39fa7bf">assignment_</a>-&gt;<a class="code" href="classoperations__research_1_1Assignment.html#626ead11d524ef2d4d81aa201baecc3b">Add</a>(<a class="code" href="classoperations__research_1_1RoutingModel.html#e77d116609e31411fd2c02483a8300e2">nexts_</a>.get(), size);
<a name="l01020"></a>01020   <span class="keywordflow">if</span> (!<a class="code" href="classoperations__research_1_1RoutingModel.html#4f6517f5303674cdce51559650451245">homogeneous_costs_</a>) {
<a name="l01021"></a>01021     <a class="code" href="classoperations__research_1_1RoutingModel.html#9aab3a8f9b7d7feb67e7730ba39fa7bf">assignment_</a>-&gt;<a class="code" href="classoperations__research_1_1Assignment.html#626ead11d524ef2d4d81aa201baecc3b">Add</a>(<a class="code" href="classoperations__research_1_1RoutingModel.html#6b112df31ad4958e036dea7d31e64ed0">vehicle_vars_</a>.get(), size + <a class="code" href="classoperations__research_1_1RoutingModel.html#3b06cdcfe6fc0ea3051a33672108f7df">vehicles_</a>);
<a name="l01022"></a>01022   }
<a name="l01023"></a>01023   <a class="code" href="classoperations__research_1_1RoutingModel.html#9aab3a8f9b7d7feb67e7730ba39fa7bf">assignment_</a>-&gt;<a class="code" href="classoperations__research_1_1Assignment.html#dae0600f8be577e57febc34f92d59203">AddObjective</a>(<a class="code" href="classoperations__research_1_1RoutingModel.html#af7a6accbaa5a124c814cd037fc4af5b">cost_</a>);
<a name="l01024"></a>01024 
<a name="l01025"></a>01025   <a class="code" href="classoperations__research_1_1Assignment.html" title="Assignment.">Assignment</a>* full_assignment =
<a name="l01026"></a>01026       <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;RevAlloc(<span class="keyword">new</span> <a class="code" href="classoperations__research_1_1Assignment.html" title="Assignment.">Assignment</a>(<a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>.get()));
<a name="l01027"></a>01027   <span class="keywordflow">for</span> (ConstIter&lt;VarMap&gt; it(<a class="code" href="classoperations__research_1_1RoutingModel.html#95e3e659045ca99695b0bccf50bb6953">cumuls_</a>); !it.at_end(); ++it) {
<a name="l01028"></a>01028     full_assignment-&gt;<a class="code" href="classoperations__research_1_1Assignment.html#626ead11d524ef2d4d81aa201baecc3b">Add</a>(it-&gt;second, size + <a class="code" href="classoperations__research_1_1RoutingModel.html#3b06cdcfe6fc0ea3051a33672108f7df">vehicles_</a>);
<a name="l01029"></a>01029   }
<a name="l01030"></a>01030   <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; <a class="code" href="classoperations__research_1_1RoutingModel.html#063a8f05b64de1787c206e6ec218cc2a">extra_vars_</a>.size(); ++i) {
<a name="l01031"></a>01031     full_assignment-&gt;<a class="code" href="classoperations__research_1_1Assignment.html#626ead11d524ef2d4d81aa201baecc3b">Add</a>(<a class="code" href="classoperations__research_1_1RoutingModel.html#063a8f05b64de1787c206e6ec218cc2a">extra_vars_</a>[i]);
<a name="l01032"></a>01032   }
<a name="l01033"></a>01033   full_assignment-&gt;<a class="code" href="classoperations__research_1_1Assignment.html#626ead11d524ef2d4d81aa201baecc3b">Add</a>(<a class="code" href="classoperations__research_1_1RoutingModel.html#e77d116609e31411fd2c02483a8300e2">nexts_</a>.get(), size);
<a name="l01034"></a>01034   full_assignment-&gt;<a class="code" href="classoperations__research_1_1Assignment.html#626ead11d524ef2d4d81aa201baecc3b">Add</a>(<a class="code" href="classoperations__research_1_1RoutingModel.html#b3d271b9caa290d0a01e3da78a0cbbb4">active_</a>.get(), size);
<a name="l01035"></a>01035   full_assignment-&gt;<a class="code" href="classoperations__research_1_1Assignment.html#626ead11d524ef2d4d81aa201baecc3b">Add</a>(<a class="code" href="classoperations__research_1_1RoutingModel.html#6b112df31ad4958e036dea7d31e64ed0">vehicle_vars_</a>.get(), size + <a class="code" href="classoperations__research_1_1RoutingModel.html#3b06cdcfe6fc0ea3051a33672108f7df">vehicles_</a>);
<a name="l01036"></a>01036   full_assignment-&gt;<a class="code" href="classoperations__research_1_1Assignment.html#dae0600f8be577e57febc34f92d59203">AddObjective</a>(<a class="code" href="classoperations__research_1_1RoutingModel.html#af7a6accbaa5a124c814cd037fc4af5b">cost_</a>);
<a name="l01037"></a>01037 
<a name="l01038"></a>01038   <a class="code" href="classoperations__research_1_1RoutingModel.html#bfed56ec00f6fcb4b51601701a5191c5">collect_assignments_</a> =
<a name="l01039"></a>01039       <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;MakeBestValueSolutionCollector(full_assignment, <span class="keyword">false</span>);
<a name="l01040"></a>01040   <a class="code" href="classoperations__research_1_1RoutingModel.html#bbd0b2c8c7626a563a43a93805d30c8e">monitors_</a>.push_back(<a class="code" href="classoperations__research_1_1RoutingModel.html#bfed56ec00f6fcb4b51601701a5191c5">collect_assignments_</a>);
<a name="l01041"></a>01041 
<a name="l01042"></a>01042   <a class="code" href="classoperations__research_1_1SearchMonitor.html" title="A search monitor is a simple set of callbacks to monitor all search events.">SearchMonitor</a>* optimize;
<a name="l01043"></a>01043   <span class="keywordflow">switch</span> (<a class="code" href="classoperations__research_1_1RoutingModel.html#22f429a899b1c00cad6e6ff04a117ee4" title="If a metaheuristic flag has been set, returns the corresponding metaheuristic, otherwise...">GetSelectedMetaheuristic</a>()) {
<a name="l01044"></a>01044     <span class="keywordflow">case</span> <a class="code" href="classoperations__research_1_1RoutingModel.html#0f0bd97e25af059ab2e8e7f263afc8e189a5042196881240e6b78a52c87b1588">ROUTING_GUIDED_LOCAL_SEARCH</a>:
<a name="l01045"></a>01045       LG &lt;&lt; <span class="stringliteral">"Using Guided Local Search"</span>;
<a name="l01046"></a>01046       <span class="keywordflow">if</span> (<a class="code" href="classoperations__research_1_1RoutingModel.html#4f6517f5303674cdce51559650451245">homogeneous_costs_</a>) {
<a name="l01047"></a>01047         optimize = <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;MakeGuidedLocalSearch(
<a name="l01048"></a>01048             <span class="keyword">false</span>,
<a name="l01049"></a>01049             <a class="code" href="classoperations__research_1_1RoutingModel.html#af7a6accbaa5a124c814cd037fc4af5b">cost_</a>,
<a name="l01050"></a>01050             NewPermanentCallback(<span class="keyword">this</span>, &amp;<a class="code" href="classoperations__research_1_1RoutingModel.html#6f274d2ace4d354140b9c086ef4dceee">RoutingModel::GetHomogeneousCost</a>),
<a name="l01051"></a>01051             FLAGS_routing_optimization_step,
<a name="l01052"></a>01052             <a class="code" href="classoperations__research_1_1RoutingModel.html#e77d116609e31411fd2c02483a8300e2">nexts_</a>.get(), size,
<a name="l01053"></a>01053             FLAGS_routing_guided_local_search_lamda_coefficient);
<a name="l01054"></a>01054       } <span class="keywordflow">else</span> {
<a name="l01055"></a>01055         optimize = <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;MakeGuidedLocalSearch(
<a name="l01056"></a>01056             <span class="keyword">false</span>,
<a name="l01057"></a>01057             <a class="code" href="classoperations__research_1_1RoutingModel.html#af7a6accbaa5a124c814cd037fc4af5b">cost_</a>,
<a name="l01058"></a>01058             <a class="code" href="classoperations__research_1_1RoutingModel.html#a1645b33c03b559bc234695f8358124b">BuildCostCallback</a>(),
<a name="l01059"></a>01059             FLAGS_routing_optimization_step,
<a name="l01060"></a>01060             <a class="code" href="classoperations__research_1_1RoutingModel.html#e77d116609e31411fd2c02483a8300e2">nexts_</a>.get(), <a class="code" href="classoperations__research_1_1RoutingModel.html#6b112df31ad4958e036dea7d31e64ed0">vehicle_vars_</a>.get(), size,
<a name="l01061"></a>01061             FLAGS_routing_guided_local_search_lamda_coefficient);
<a name="l01062"></a>01062       }
<a name="l01063"></a>01063       <span class="keywordflow">break</span>;
<a name="l01064"></a>01064     <span class="keywordflow">case</span> <a class="code" href="classoperations__research_1_1RoutingModel.html#0f0bd97e25af059ab2e8e7f263afc8e1a166bff87b6170318a34b1af38fc98fe">ROUTING_SIMULATED_ANNEALING</a>:
<a name="l01065"></a>01065       LG &lt;&lt; <span class="stringliteral">"Using Simulated Annealing"</span>;
<a name="l01066"></a>01066       optimize =
<a name="l01067"></a>01067           <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;MakeSimulatedAnnealing(<span class="keyword">false</span>, <a class="code" href="classoperations__research_1_1RoutingModel.html#af7a6accbaa5a124c814cd037fc4af5b">cost_</a>,
<a name="l01068"></a>01068                                           FLAGS_routing_optimization_step,
<a name="l01069"></a>01069                                           100);
<a name="l01070"></a>01070       <span class="keywordflow">break</span>;
<a name="l01071"></a>01071     <span class="keywordflow">case</span> <a class="code" href="classoperations__research_1_1RoutingModel.html#0f0bd97e25af059ab2e8e7f263afc8e10dd042e16dd28cfdd370382de2f51a35">ROUTING_TABU_SEARCH</a>:
<a name="l01072"></a>01072       LG &lt;&lt; <span class="stringliteral">"Using Tabu Search"</span>;
<a name="l01073"></a>01073       optimize = <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;MakeTabuSearch(<span class="keyword">false</span>, <a class="code" href="classoperations__research_1_1RoutingModel.html#af7a6accbaa5a124c814cd037fc4af5b">cost_</a>,
<a name="l01074"></a>01074                                          FLAGS_routing_optimization_step,
<a name="l01075"></a>01075                                          <a class="code" href="classoperations__research_1_1RoutingModel.html#e77d116609e31411fd2c02483a8300e2">nexts_</a>.get(), size,
<a name="l01076"></a>01076                                          10, 10, .8);
<a name="l01077"></a>01077       <span class="keywordflow">break</span>;
<a name="l01078"></a>01078     <span class="keywordflow">default</span>:
<a name="l01079"></a>01079       LG &lt;&lt; <span class="stringliteral">"Using greedy descent"</span>;
<a name="l01080"></a>01080       optimize = <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;MakeMinimize(<a class="code" href="classoperations__research_1_1RoutingModel.html#af7a6accbaa5a124c814cd037fc4af5b">cost_</a>, FLAGS_routing_optimization_step);
<a name="l01081"></a>01081   }
<a name="l01082"></a>01082   <a class="code" href="classoperations__research_1_1RoutingModel.html#bbd0b2c8c7626a563a43a93805d30c8e">monitors_</a>.push_back(optimize);
<a name="l01083"></a>01083 
<a name="l01084"></a>01084   <a class="code" href="classoperations__research_1_1RoutingModel.html#9df588e78069c86a4c2142619172e247">limit_</a> = <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;MakeLimit(<a class="code" href="classoperations__research_1_1RoutingModel.html#3f7c8de95c6af4e6a797545d82764e09">time_limit_ms_</a>,
<a name="l01085"></a>01085                               kint64max,
<a name="l01086"></a>01086                               kint64max,
<a name="l01087"></a>01087                               FLAGS_routing_solution_limit,
<a name="l01088"></a>01088                               <span class="keyword">true</span>);
<a name="l01089"></a>01089   <a class="code" href="classoperations__research_1_1RoutingModel.html#bbd0b2c8c7626a563a43a93805d30c8e">monitors_</a>.push_back(<a class="code" href="classoperations__research_1_1RoutingModel.html#9df588e78069c86a4c2142619172e247">limit_</a>);
<a name="l01090"></a>01090 
<a name="l01091"></a>01091   <a class="code" href="classoperations__research_1_1RoutingModel.html#c1c2ef0d3f5198da307dde6bd9ee75d1">ls_limit_</a> = <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;MakeLimit(<a class="code" href="classoperations__research_1_1RoutingModel.html#3f7c8de95c6af4e6a797545d82764e09">time_limit_ms_</a>,
<a name="l01092"></a>01092                                  kint64max,
<a name="l01093"></a>01093                                  kint64max,
<a name="l01094"></a>01094                                  1,
<a name="l01095"></a>01095                                  <span class="keyword">true</span>);
<a name="l01096"></a>01096 
<a name="l01097"></a>01097   <a class="code" href="classoperations__research_1_1RoutingModel.html#40937151169427015513c95c8f2e4e0a">lns_limit_</a> = <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;MakeLimit(<a class="code" href="classoperations__research_1_1RoutingModel.html#8774b41eec8e980438fb7455ac6084a3">lns_time_limit_ms_</a>,
<a name="l01098"></a>01098                                   kint64max,
<a name="l01099"></a>01099                                   kint64max,
<a name="l01100"></a>01100                                   kint64max);
<a name="l01101"></a>01101 
<a name="l01102"></a>01102   vector&lt;LocalSearchOperator*&gt; operators = <a class="code" href="classoperations__research_1_1RoutingModel.html#60bdbaf0a15e148766eaf5ede61e2b2a">extra_operators_</a>;
<a name="l01103"></a>01103   <span class="keywordflow">if</span> (<a class="code" href="classoperations__research_1_1RoutingModel.html#3b06cdcfe6fc0ea3051a33672108f7df">vehicles_</a> &gt; 1) {
<a name="l01104"></a>01104     <span class="keywordflow">if</span> (!FLAGS_routing_no_relocate) {
<a name="l01105"></a>01105       <a class="code" href="routing_8cc.html#da22f526c521d1b965523c4164b286f7">CP_ROUTING_PUSH_BACK_OPERATOR</a>(<a class="code" href="classoperations__research_1_1Solver.html#c3c5b22fad8060ca1a66bd928182d8a4e38682b404f0255b45c6c5a3d4d31399">Solver::RELOCATE</a>);
<a name="l01106"></a>01106     }
<a name="l01107"></a>01107     <span class="keywordflow">if</span> (!FLAGS_routing_no_exchange) {
<a name="l01108"></a>01108       <a class="code" href="routing_8cc.html#da22f526c521d1b965523c4164b286f7">CP_ROUTING_PUSH_BACK_OPERATOR</a>(<a class="code" href="classoperations__research_1_1Solver.html#c3c5b22fad8060ca1a66bd928182d8a427e459c0332eecea29a0b793ec635b49">Solver::EXCHANGE</a>);
<a name="l01109"></a>01109     }
<a name="l01110"></a>01110     <span class="keywordflow">if</span> (!FLAGS_routing_no_cross) {
<a name="l01111"></a>01111       <a class="code" href="routing_8cc.html#da22f526c521d1b965523c4164b286f7">CP_ROUTING_PUSH_BACK_OPERATOR</a>(<a class="code" href="classoperations__research_1_1Solver.html#c3c5b22fad8060ca1a66bd928182d8a45dcd871e02933eb704b45ea8ea68a852">Solver::CROSS</a>);
<a name="l01112"></a>01112     }
<a name="l01113"></a>01113   }
<a name="l01114"></a>01114   <span class="keywordflow">if</span> (!FLAGS_routing_no_lkh
<a name="l01115"></a>01115       &amp;&amp; !FLAGS_routing_tabu_search
<a name="l01116"></a>01116       &amp;&amp; !FLAGS_routing_simulated_annealing) {
<a name="l01117"></a>01117     <a class="code" href="routing_8cc.html#fd4fdd197d1378301502aafb232f5456">CP_ROUTING_PUSH_BACK_CALLBACK_OPERATOR</a>(<a class="code" href="classoperations__research_1_1Solver.html#c1b3220ae80fb8430bc06310c5bea5f1ae6bcc97b395e12e9a8e54093a327512">Solver::LK</a>);
<a name="l01118"></a>01118   }
<a name="l01119"></a>01119   <span class="keywordflow">if</span> (!FLAGS_routing_no_2opt) {
<a name="l01120"></a>01120     <a class="code" href="routing_8cc.html#da22f526c521d1b965523c4164b286f7">CP_ROUTING_PUSH_BACK_OPERATOR</a>(<a class="code" href="classoperations__research_1_1Solver.html#c3c5b22fad8060ca1a66bd928182d8a46954bf415a41a3e683060ce706cec2b6">Solver::TWOOPT</a>);
<a name="l01121"></a>01121   }
<a name="l01122"></a>01122   <span class="keywordflow">if</span> (!FLAGS_routing_no_oropt) {
<a name="l01123"></a>01123     <a class="code" href="routing_8cc.html#da22f526c521d1b965523c4164b286f7">CP_ROUTING_PUSH_BACK_OPERATOR</a>(<a class="code" href="classoperations__research_1_1Solver.html#c3c5b22fad8060ca1a66bd928182d8a4721d9e61cd2a9b9c221793b9b8086b09">Solver::OROPT</a>);
<a name="l01124"></a>01124   }
<a name="l01125"></a>01125   <span class="keywordflow">if</span> (!FLAGS_routing_no_make_active &amp;&amp; <a class="code" href="classoperations__research_1_1RoutingModel.html#5a65ea247ed01f2f2b3a665952d84feb">disjunctions_</a>.size() != 0) {
<a name="l01126"></a>01126     <a class="code" href="routing_8cc.html#da22f526c521d1b965523c4164b286f7">CP_ROUTING_PUSH_BACK_OPERATOR</a>(<a class="code" href="classoperations__research_1_1Solver.html#c3c5b22fad8060ca1a66bd928182d8a41a2beb32468f536c96644b3faa9c8d6e">Solver::MAKEINACTIVE</a>);
<a name="l01127"></a>01127     <a class="code" href="routing_8cc.html#da22f526c521d1b965523c4164b286f7">CP_ROUTING_PUSH_BACK_OPERATOR</a>(<a class="code" href="classoperations__research_1_1Solver.html#c3c5b22fad8060ca1a66bd928182d8a441dc08543fce010d8ce65df80935ff38">Solver::MAKEACTIVE</a>);
<a name="l01128"></a>01128     <span class="keywordflow">if</span> (!FLAGS_routing_use_extended_swap_active) {
<a name="l01129"></a>01129       <a class="code" href="routing_8cc.html#da22f526c521d1b965523c4164b286f7">CP_ROUTING_PUSH_BACK_OPERATOR</a>(<a class="code" href="classoperations__research_1_1Solver.html#c3c5b22fad8060ca1a66bd928182d8a4eac9baf3ea4fa072bb9e4eccf691205d">Solver::SWAPACTIVE</a>);
<a name="l01130"></a>01130     } <span class="keywordflow">else</span> {
<a name="l01131"></a>01131       <a class="code" href="routing_8cc.html#da22f526c521d1b965523c4164b286f7">CP_ROUTING_PUSH_BACK_OPERATOR</a>(<a class="code" href="classoperations__research_1_1Solver.html#c3c5b22fad8060ca1a66bd928182d8a499c891d39d424a087b7fd551b27906ec">Solver::EXTENDEDSWAPACTIVE</a>);
<a name="l01132"></a>01132     }
<a name="l01133"></a>01133   }
<a name="l01134"></a>01134   <span class="comment">// TODO(user): move the following operators to a second local search loop.</span>
<a name="l01135"></a>01135   <span class="keywordflow">if</span> (!FLAGS_routing_no_tsp
<a name="l01136"></a>01136       &amp;&amp; !FLAGS_routing_tabu_search
<a name="l01137"></a>01137       &amp;&amp; !FLAGS_routing_simulated_annealing) {
<a name="l01138"></a>01138     <a class="code" href="routing_8cc.html#fd4fdd197d1378301502aafb232f5456">CP_ROUTING_PUSH_BACK_CALLBACK_OPERATOR</a>(<a class="code" href="classoperations__research_1_1Solver.html#c1b3220ae80fb8430bc06310c5bea5f1c712194c4e0edea857001e9cf2ed5811">Solver::TSPOPT</a>);
<a name="l01139"></a>01139   }
<a name="l01140"></a>01140   <span class="keywordflow">if</span> (!FLAGS_routing_no_tsplns
<a name="l01141"></a>01141       &amp;&amp; !FLAGS_routing_tabu_search
<a name="l01142"></a>01142       &amp;&amp; !FLAGS_routing_simulated_annealing) {
<a name="l01143"></a>01143     <a class="code" href="routing_8cc.html#fd4fdd197d1378301502aafb232f5456">CP_ROUTING_PUSH_BACK_CALLBACK_OPERATOR</a>(<a class="code" href="classoperations__research_1_1Solver.html#c1b3220ae80fb8430bc06310c5bea5f129c43618e41fc69d29d248c0031d5af1">Solver::TSPLNS</a>);
<a name="l01144"></a>01144   }
<a name="l01145"></a>01145   <span class="keywordflow">if</span> (!FLAGS_routing_no_lns) {
<a name="l01146"></a>01146     <a class="code" href="routing_8cc.html#da22f526c521d1b965523c4164b286f7">CP_ROUTING_PUSH_BACK_OPERATOR</a>(<a class="code" href="classoperations__research_1_1Solver.html#c3c5b22fad8060ca1a66bd928182d8a4ae749f308386810f29338c96daf0e4f8">Solver::PATHLNS</a>);
<a name="l01147"></a>01147     <span class="keywordflow">if</span> (<a class="code" href="classoperations__research_1_1RoutingModel.html#5a65ea247ed01f2f2b3a665952d84feb">disjunctions_</a>.size() != 0) {
<a name="l01148"></a>01148       <a class="code" href="routing_8cc.html#da22f526c521d1b965523c4164b286f7">CP_ROUTING_PUSH_BACK_OPERATOR</a>(<a class="code" href="classoperations__research_1_1Solver.html#c3c5b22fad8060ca1a66bd928182d8a45dbb9333b0dd7a380a85b4e1bd298667">Solver::UNACTIVELNS</a>);
<a name="l01149"></a>01149     }
<a name="l01150"></a>01150   }
<a name="l01151"></a>01151   <a class="code" href="classoperations__research_1_1LocalSearchOperator.html" title="Local search operators.">LocalSearchOperator</a>* local_search_operator =
<a name="l01152"></a>01152       <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;ConcatenateOperators(operators);
<a name="l01153"></a>01153 
<a name="l01154"></a>01154   <a class="code" href="classoperations__research_1_1DecisionBuilder.html" title="A DecisionBuilder is responsible for creating the search tree.">DecisionBuilder</a>* finalize_solution =
<a name="l01155"></a>01155       <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;MakePhase(<a class="code" href="classoperations__research_1_1RoutingModel.html#e77d116609e31411fd2c02483a8300e2">nexts_</a>.get(), size,
<a name="l01156"></a>01156                          <a class="code" href="classoperations__research_1_1Solver.html#8bda7ed6e7e533cca4c44eba6efffc8b8f69d3fc74e6a3faaa9be2583ce8fce3">Solver::CHOOSE_FIRST_UNBOUND</a>,
<a name="l01157"></a>01157                          <a class="code" href="classoperations__research_1_1Solver.html#e63acd77b8c2ee40387795051298f659b68b8c2566158157a2ba1660aae07553">Solver::ASSIGN_MIN_VALUE</a>);
<a name="l01158"></a>01158 
<a name="l01159"></a>01159   <a class="code" href="classoperations__research_1_1DecisionBuilder.html" title="A DecisionBuilder is responsible for creating the search tree.">DecisionBuilder</a>* first_solution = finalize_solution;
<a name="l01160"></a>01160   <span class="keywordflow">switch</span> (<a class="code" href="classoperations__research_1_1RoutingModel.html#da509d882b2aed55dc59021c3a149c7e" title="If a first solution flag has been set (to a value different from Default), returns...">GetSelectedFirstSolutionStrategy</a>()) {
<a name="l01161"></a>01161     <span class="keywordflow">case</span> <a class="code" href="classoperations__research_1_1RoutingModel.html#6f38b3ff9a2e455677856d97e339da6dbb864ec796188b14106446600fd330f8">ROUTING_GLOBAL_CHEAPEST_ARC</a>:
<a name="l01162"></a>01162       LG &lt;&lt; <span class="stringliteral">"Using ROUTING_GLOBAL_CHEAPEST_ARC"</span>;
<a name="l01163"></a>01163       first_solution =
<a name="l01164"></a>01164           <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;MakePhase(<a class="code" href="classoperations__research_1_1RoutingModel.html#e77d116609e31411fd2c02483a8300e2">nexts_</a>.get(), size,
<a name="l01165"></a>01165                              NewPermanentCallback(
<a name="l01166"></a>01166                                  <span class="keyword">this</span>,
<a name="l01167"></a>01167                                  &amp;<a class="code" href="classoperations__research_1_1RoutingModel.html#1d7c2d652d782ca3930583b98ee3f15d" title="Return high cost if connecting to end node; used in cost-based first solution.">RoutingModel::GetFirstSolutionCost</a>),
<a name="l01168"></a>01168                              <a class="code" href="classoperations__research_1_1Solver.html#fabd2f40b8da33b224a5cafd2a053a21d2e527283c597c714aa93e9fa72ee0e7">Solver::CHOOSE_STATIC_GLOBAL_BEST</a>);
<a name="l01169"></a>01169       <span class="keywordflow">break</span>;
<a name="l01170"></a>01170     <span class="keywordflow">case</span> <a class="code" href="classoperations__research_1_1RoutingModel.html#6f38b3ff9a2e455677856d97e339da6d4c2534a4236ed8b1c937467da71a55a7">ROUTING_LOCAL_CHEAPEST_ARC</a>:
<a name="l01171"></a>01171       LG &lt;&lt; <span class="stringliteral">"Using ROUTING_LOCAL_CHEAPEST_ARC"</span>;
<a name="l01172"></a>01172       first_solution =
<a name="l01173"></a>01173           <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;MakePhase(<a class="code" href="classoperations__research_1_1RoutingModel.html#e77d116609e31411fd2c02483a8300e2">nexts_</a>.get(), size,
<a name="l01174"></a>01174                              Solver::CHOOSE_FIRST_UNBOUND,
<a name="l01175"></a>01175                              NewPermanentCallback(
<a name="l01176"></a>01176                                  <span class="keyword">this</span>,
<a name="l01177"></a>01177                                  &amp;<a class="code" href="classoperations__research_1_1RoutingModel.html#1d7c2d652d782ca3930583b98ee3f15d" title="Return high cost if connecting to end node; used in cost-based first solution.">RoutingModel::GetFirstSolutionCost</a>));
<a name="l01178"></a>01178       <span class="keywordflow">break</span>;
<a name="l01179"></a>01179     <span class="keywordflow">case</span> <a class="code" href="classoperations__research_1_1RoutingModel.html#6f38b3ff9a2e455677856d97e339da6db84d29872d22f4d9cf1a1fd21c05dcf4">ROUTING_PATH_CHEAPEST_ARC</a>:
<a name="l01180"></a>01180       LG &lt;&lt; <span class="stringliteral">"Using ROUTING_PATH_CHEAPEST_ARC"</span>;
<a name="l01181"></a>01181       first_solution =
<a name="l01182"></a>01182           <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;MakePhase(<a class="code" href="classoperations__research_1_1RoutingModel.html#e77d116609e31411fd2c02483a8300e2">nexts_</a>.get(), size,
<a name="l01183"></a>01183                              <a class="code" href="classoperations__research_1_1Solver.html#8bda7ed6e7e533cca4c44eba6efffc8b46e6f2fa2b646a2114a32d816ba399ee">Solver::CHOOSE_PATH</a>,
<a name="l01184"></a>01184                              NewPermanentCallback(
<a name="l01185"></a>01185                                  <span class="keyword">this</span>,
<a name="l01186"></a>01186                                  &amp;<a class="code" href="classoperations__research_1_1RoutingModel.html#1d7c2d652d782ca3930583b98ee3f15d" title="Return high cost if connecting to end node; used in cost-based first solution.">RoutingModel::GetFirstSolutionCost</a>));
<a name="l01187"></a>01187       <span class="keywordflow">break</span>;
<a name="l01188"></a>01188     <span class="keywordflow">case</span> <a class="code" href="classoperations__research_1_1RoutingModel.html#6f38b3ff9a2e455677856d97e339da6da62cb62928ab4fdd761e7568e8737083">ROUTING_EVALUATOR_STRATEGY</a>:
<a name="l01189"></a>01189       LG &lt;&lt; <span class="stringliteral">"Using ROUTING_EVALUATOR_STRATEGY"</span>;
<a name="l01190"></a>01190       CHECK(<a class="code" href="classoperations__research_1_1RoutingModel.html#99512a1a1c95a4bdc3ae90d750601da4">first_solution_evaluator_</a> != NULL);
<a name="l01191"></a>01191       first_solution =
<a name="l01192"></a>01192           <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;MakePhase(<a class="code" href="classoperations__research_1_1RoutingModel.html#e77d116609e31411fd2c02483a8300e2">nexts_</a>.get(), size,
<a name="l01193"></a>01193                              Solver::CHOOSE_PATH,
<a name="l01194"></a>01194                              NewPermanentCallback(
<a name="l01195"></a>01195                                  <a class="code" href="classoperations__research_1_1RoutingModel.html#99512a1a1c95a4bdc3ae90d750601da4">first_solution_evaluator_</a>.get(),
<a name="l01196"></a>01196                                  &amp;Solver::IndexEvaluator2::Run));
<a name="l01197"></a>01197       <span class="keywordflow">break</span>;
<a name="l01198"></a>01198     <span class="keywordflow">case</span> <a class="code" href="classoperations__research_1_1RoutingModel.html#6f38b3ff9a2e455677856d97e339da6d6f1cf5f6e92490db44f50b647f90f56c" title="choose first unbound, assign min value">ROUTING_DEFAULT_STRATEGY</a>:
<a name="l01199"></a>01199       LG &lt;&lt; <span class="stringliteral">"Using DEFAULT"</span>;
<a name="l01200"></a>01200       <span class="keywordflow">break</span>;
<a name="l01201"></a>01201     <span class="keywordflow">default</span>:
<a name="l01202"></a>01202       LOG(WARNING) &lt;&lt; <span class="stringliteral">"Unknown argument for routing_first_solution, "</span>
<a name="l01203"></a>01203           <span class="stringliteral">"using default"</span>;
<a name="l01204"></a>01204   }
<a name="l01205"></a>01205   <span class="keywordflow">if</span> (FLAGS_routing_use_first_solution_dive) {
<a name="l01206"></a>01206     <a class="code" href="classoperations__research_1_1DecisionBuilder.html" title="A DecisionBuilder is responsible for creating the search tree.">DecisionBuilder</a>* apply =
<a name="l01207"></a>01207         <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;MakeApplyBranchSelector(NewPermanentCallback(&amp;<a class="code" href="namespaceoperations__research_1_1anonymous__namespace_02routing_8cc_03.html#385d231a96de86be6bdb898742d0f620" title="Left-branch dive branch selector.">LeftDive</a>));
<a name="l01208"></a>01208     first_solution = <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;Compose(apply, first_solution);
<a name="l01209"></a>01209   }
<a name="l01210"></a>01210 
<a name="l01211"></a>01211   vector&lt;LocalSearchFilter*&gt; filters;
<a name="l01212"></a>01212   <span class="keywordflow">if</span> (FLAGS_routing_use_objective_filter) {
<a name="l01213"></a>01213     <span class="keywordflow">if</span> (<a class="code" href="classoperations__research_1_1RoutingModel.html#4f6517f5303674cdce51559650451245">homogeneous_costs_</a>) {
<a name="l01214"></a>01214       <a class="code" href="classoperations__research_1_1LocalSearchFilter.html" title="Local Search Filters For fast neighbor pruning.">LocalSearchFilter</a>* filter =
<a name="l01215"></a>01215           <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;MakeLocalSearchObjectiveFilter(
<a name="l01216"></a>01216               <a class="code" href="classoperations__research_1_1RoutingModel.html#e77d116609e31411fd2c02483a8300e2">nexts_</a>.get(),
<a name="l01217"></a>01217               size,
<a name="l01218"></a>01218               NewPermanentCallback(<span class="keyword">this</span>,
<a name="l01219"></a>01219                                    &amp;<a class="code" href="classoperations__research_1_1RoutingModel.html#a11733dd92f708c13e9c45aa02641e12">RoutingModel::GetHomogeneousFilterCost</a>),
<a name="l01220"></a>01220               <a class="code" href="classoperations__research_1_1RoutingModel.html#af7a6accbaa5a124c814cd037fc4af5b">cost_</a>,
<a name="l01221"></a>01221               <a class="code" href="classoperations__research_1_1Solver.html#8e9cbe2323b10c6b49da625f5bae14c01ed30b8b721fbabcd346c23b61ba8f7b">Solver::EQ</a>,
<a name="l01222"></a>01222               <a class="code" href="classoperations__research_1_1Solver.html#33dcc7075bc4e16ae357cfd975822abc41bf64edfd56ad686b40b68053e2402b">Solver::SUM</a>);
<a name="l01223"></a>01223       filters.push_back(filter);
<a name="l01224"></a>01224     } <span class="keywordflow">else</span> {
<a name="l01225"></a>01225       <a class="code" href="classoperations__research_1_1LocalSearchFilter.html" title="Local Search Filters For fast neighbor pruning.">LocalSearchFilter</a>* filter =
<a name="l01226"></a>01226           <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;MakeLocalSearchObjectiveFilter(
<a name="l01227"></a>01227               <a class="code" href="classoperations__research_1_1RoutingModel.html#e77d116609e31411fd2c02483a8300e2">nexts_</a>.get(),
<a name="l01228"></a>01228               <a class="code" href="classoperations__research_1_1RoutingModel.html#6b112df31ad4958e036dea7d31e64ed0">vehicle_vars_</a>.get(),
<a name="l01229"></a>01229               size,
<a name="l01230"></a>01230               NewPermanentCallback(<span class="keyword">this</span>, &amp;<a class="code" href="classoperations__research_1_1RoutingModel.html#a48f081ff3936f9133459882f403f000">RoutingModel::GetFilterCost</a>),
<a name="l01231"></a>01231               <a class="code" href="classoperations__research_1_1RoutingModel.html#af7a6accbaa5a124c814cd037fc4af5b">cost_</a>,
<a name="l01232"></a>01232               <a class="code" href="classoperations__research_1_1Solver.html#8e9cbe2323b10c6b49da625f5bae14c01ed30b8b721fbabcd346c23b61ba8f7b">Solver::EQ</a>,
<a name="l01233"></a>01233               <a class="code" href="classoperations__research_1_1Solver.html#33dcc7075bc4e16ae357cfd975822abc41bf64edfd56ad686b40b68053e2402b">Solver::SUM</a>);
<a name="l01234"></a>01234       filters.push_back(filter);
<a name="l01235"></a>01235     }
<a name="l01236"></a>01236   }
<a name="l01237"></a>01237   <span class="keywordflow">if</span> (FLAGS_routing_use_path_cumul_filter) {
<a name="l01238"></a>01238     <span class="keywordflow">for</span> (ConstIter&lt;VarMap&gt; iter(<a class="code" href="classoperations__research_1_1RoutingModel.html#95e3e659045ca99695b0bccf50bb6953">cumuls_</a>); !iter.at_end(); ++iter) {
<a name="l01239"></a>01239       <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; name = iter-&gt;first;
<a name="l01240"></a>01240       filters.push_back(<a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;RevAlloc(
<a name="l01241"></a>01241           <span class="keyword">new</span> PathCumulFilter(<a class="code" href="classoperations__research_1_1RoutingModel.html#e77d116609e31411fd2c02483a8300e2">nexts_</a>.get(),
<a name="l01242"></a>01242                               <a class="code" href="classoperations__research_1_1RoutingModel.html#5a560929b26804990f1e7d6972218f87">Size</a>(),
<a name="l01243"></a>01243                               iter-&gt;second,
<a name="l01244"></a>01244                               <a class="code" href="classoperations__research_1_1RoutingModel.html#5a560929b26804990f1e7d6972218f87">Size</a>() + <a class="code" href="classoperations__research_1_1RoutingModel.html#3b06cdcfe6fc0ea3051a33672108f7df">vehicles_</a>,
<a name="l01245"></a>01245                               <a class="code" href="classoperations__research_1_1RoutingModel.html#9e3fc497169104458d46cbf21d108c92">transit_evaluators_</a>[name],
<a name="l01246"></a>01246                               name)));
<a name="l01247"></a>01247     }
<a name="l01248"></a>01248   }
<a name="l01249"></a>01249 
<a name="l01250"></a>01250   <a class="code" href="classoperations__research_1_1LocalSearchPhaseParameters.html" title="Local Search Phase Parameters.">LocalSearchPhaseParameters</a>* parameters =
<a name="l01251"></a>01251       <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;MakeLocalSearchPhaseParameters(
<a name="l01252"></a>01252           local_search_operator,
<a name="l01253"></a>01253           <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;MakeSolveOnce(finalize_solution, <a class="code" href="classoperations__research_1_1RoutingModel.html#40937151169427015513c95c8f2e4e0a">lns_limit_</a>),
<a name="l01254"></a>01254           <a class="code" href="classoperations__research_1_1RoutingModel.html#c1c2ef0d3f5198da307dde6bd9ee75d1">ls_limit_</a>,
<a name="l01255"></a>01255           filters);
<a name="l01256"></a>01256 
<a name="l01257"></a>01257   <span class="keywordflow">if</span> (FLAGS_routing_dfs) {
<a name="l01258"></a>01258     <a class="code" href="classoperations__research_1_1RoutingModel.html#280574ad73607f977e7224cb89ad804d">solve_db_</a> = finalize_solution;
<a name="l01259"></a>01259   } <span class="keywordflow">else</span> {
<a name="l01260"></a>01260     <span class="keywordflow">if</span> (<a class="code" href="classoperations__research_1_1RoutingModel.html#4f6517f5303674cdce51559650451245">homogeneous_costs_</a>) {
<a name="l01261"></a>01261       <a class="code" href="classoperations__research_1_1RoutingModel.html#280574ad73607f977e7224cb89ad804d">solve_db_</a> = <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;MakeLocalSearchPhase(<a class="code" href="classoperations__research_1_1RoutingModel.html#e77d116609e31411fd2c02483a8300e2">nexts_</a>.get(),
<a name="l01262"></a>01262                                                 size,
<a name="l01263"></a>01263                                                 first_solution,
<a name="l01264"></a>01264                                                 parameters);
<a name="l01265"></a>01265     } <span class="keywordflow">else</span> {
<a name="l01266"></a>01266       <span class="keyword">const</span> <span class="keywordtype">int</span> all_size = size + size + <a class="code" href="classoperations__research_1_1RoutingModel.html#3b06cdcfe6fc0ea3051a33672108f7df">vehicles_</a>;
<a name="l01267"></a>01267       scoped_array&lt;IntVar*&gt; all_vars(<span class="keyword">new</span> <a class="code" href="classoperations__research_1_1IntVar.html" title="The class IntVar is a subset of IntExpr.">IntVar</a>*[all_size]);
<a name="l01268"></a>01268       <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; size; ++i) {
<a name="l01269"></a>01269         all_vars[i] = <a class="code" href="classoperations__research_1_1RoutingModel.html#e77d116609e31411fd2c02483a8300e2">nexts_</a>[i];
<a name="l01270"></a>01270       }
<a name="l01271"></a>01271       <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = size; i &lt; all_size; ++i) {
<a name="l01272"></a>01272         all_vars[i] = <a class="code" href="classoperations__research_1_1RoutingModel.html#6b112df31ad4958e036dea7d31e64ed0">vehicle_vars_</a>[i - size];
<a name="l01273"></a>01273       }
<a name="l01274"></a>01274       <a class="code" href="classoperations__research_1_1RoutingModel.html#280574ad73607f977e7224cb89ad804d">solve_db_</a> = <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;MakeLocalSearchPhase(all_vars.get(),
<a name="l01275"></a>01275                                                 all_size,
<a name="l01276"></a>01276                                                 first_solution,
<a name="l01277"></a>01277                                                 parameters);
<a name="l01278"></a>01278     }
<a name="l01279"></a>01279   }
<a name="l01280"></a>01280   <a class="code" href="classoperations__research_1_1DecisionBuilder.html" title="A DecisionBuilder is responsible for creating the search tree.">DecisionBuilder</a>* restore_preassignment =
<a name="l01281"></a>01281       <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;MakeRestoreAssignment(<a class="code" href="classoperations__research_1_1RoutingModel.html#75b098f7ca3b7d91130e5335e48dba14">preassignment_</a>);
<a name="l01282"></a>01282   <a class="code" href="classoperations__research_1_1RoutingModel.html#280574ad73607f977e7224cb89ad804d">solve_db_</a> = <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;Compose(restore_preassignment, <a class="code" href="classoperations__research_1_1RoutingModel.html#280574ad73607f977e7224cb89ad804d">solve_db_</a>);
<a name="l01283"></a>01283   <a class="code" href="classoperations__research_1_1RoutingModel.html#0eca34a05f9011d97cfed6c49a1f7849">improve_db_</a> =
<a name="l01284"></a>01284       <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;Compose(restore_preassignment,
<a name="l01285"></a>01285                        <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;MakeLocalSearchPhase(<a class="code" href="classoperations__research_1_1RoutingModel.html#9aab3a8f9b7d7feb67e7730ba39fa7bf">assignment_</a>, parameters));
<a name="l01286"></a>01286   <a class="code" href="classoperations__research_1_1RoutingModel.html#f2e9d2969ed40e73a63507e79668109e">restore_assignment_</a> =
<a name="l01287"></a>01287       <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;Compose(<a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;MakeRestoreAssignment(<a class="code" href="classoperations__research_1_1RoutingModel.html#9aab3a8f9b7d7feb67e7730ba39fa7bf">assignment_</a>),
<a name="l01288"></a>01288                        finalize_solution);
<a name="l01289"></a>01289 
<a name="l01290"></a>01290   <span class="keywordflow">if</span> (FLAGS_routing_trace) {
<a name="l01291"></a>01291     <span class="keyword">const</span> <span class="keywordtype">int</span> kLogPeriod = 10000;
<a name="l01292"></a>01292     <a class="code" href="classoperations__research_1_1SearchMonitor.html" title="A search monitor is a simple set of callbacks to monitor all search events.">SearchMonitor</a>* trace = <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;MakeSearchLog(kLogPeriod, <a class="code" href="classoperations__research_1_1RoutingModel.html#af7a6accbaa5a124c814cd037fc4af5b">cost_</a>);
<a name="l01293"></a>01293     <a class="code" href="classoperations__research_1_1RoutingModel.html#bbd0b2c8c7626a563a43a93805d30c8e">monitors_</a>.push_back(trace);
<a name="l01294"></a>01294   }
<a name="l01295"></a>01295 }
<a name="l01296"></a>01296 
<a name="l01297"></a>01297 <span class="preprocessor">#undef CP_ROUTING_PUSH_BACK_CALLBACK_OPERATOR</span>
<a name="l01298"></a>01298 <span class="preprocessor"></span><span class="preprocessor">#undef CP_ROUTING_PUSH_BACK_OPERATOR</span>
<a name="l01299"></a>01299 <span class="preprocessor"></span>
<a name="l01300"></a><a class="code" href="classoperations__research_1_1RoutingModel.html#bf1e733a07e2f75825ed10303bb27f06">01300</a> <a class="code" href="classoperations__research_1_1IntVar.html" title="The class IntVar is a subset of IntExpr.">IntVar</a>* <a class="code" href="classoperations__research_1_1RoutingModel.html#bf1e733a07e2f75825ed10303bb27f06" title="Returns the variable created by the AddDimension with the same name.">RoutingModel::CumulVar</a>(int64 node, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; name)<span class="keyword"> const </span>{
<a name="l01301"></a>01301   <a class="code" href="classoperations__research_1_1IntVar.html" title="The class IntVar is a subset of IntExpr.">IntVar</a>** named_cumuls = FindPtrOrNull(<a class="code" href="classoperations__research_1_1RoutingModel.html#95e3e659045ca99695b0bccf50bb6953">cumuls_</a>, name);
<a name="l01302"></a>01302   <span class="keywordflow">if</span> (named_cumuls != NULL) {
<a name="l01303"></a>01303     <span class="keywordflow">return</span> named_cumuls[node];
<a name="l01304"></a>01304   } <span class="keywordflow">else</span> {
<a name="l01305"></a>01305     <span class="keywordflow">return</span> NULL;
<a name="l01306"></a>01306   }
<a name="l01307"></a>01307 }
<a name="l01308"></a>01308 
<a name="l01309"></a><a class="code" href="classoperations__research_1_1RoutingModel.html#a316d2c540db812720684a4afa50fc56">01309</a> <a class="code" href="classoperations__research_1_1IntVar.html" title="The class IntVar is a subset of IntExpr.">IntVar</a>* <a class="code" href="classoperations__research_1_1RoutingModel.html#a316d2c540db812720684a4afa50fc56">RoutingModel::TransitVar</a>(int64 node, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; name)<span class="keyword"> const </span>{
<a name="l01310"></a>01310   <a class="code" href="classoperations__research_1_1IntVar.html" title="The class IntVar is a subset of IntExpr.">IntVar</a>** named_transits = FindPtrOrNull(<a class="code" href="classoperations__research_1_1RoutingModel.html#a8c77534101e44e2db6edb6d44a2dabb">transits_</a>, name);
<a name="l01311"></a>01311   <span class="keywordflow">if</span> (named_transits != NULL) {
<a name="l01312"></a>01312     <span class="keywordflow">return</span> named_transits[node];
<a name="l01313"></a>01313   } <span class="keywordflow">else</span> {
<a name="l01314"></a>01314     <span class="keywordflow">return</span> NULL;
<a name="l01315"></a>01315   }
<a name="l01316"></a>01316 }
<a name="l01317"></a>01317 
<a name="l01318"></a><a class="code" href="classoperations__research_1_1RoutingModel.html#e88d50eeffe3862a00b82de6c69f0e93">01318</a> <span class="keywordtype">void</span> <a class="code" href="classoperations__research_1_1RoutingModel.html#e88d50eeffe3862a00b82de6c69f0e93" title="Add extra variables to assignments.">RoutingModel::AddToAssignment</a>(<a class="code" href="classoperations__research_1_1IntVar.html" title="The class IntVar is a subset of IntExpr.">IntVar</a>* var) {
<a name="l01319"></a>01319   <a class="code" href="classoperations__research_1_1RoutingModel.html#063a8f05b64de1787c206e6ec218cc2a">extra_vars_</a>.push_back(var);
<a name="l01320"></a>01320 }
<a name="l01321"></a>01321 
<a name="l01322"></a><a class="code" href="classoperations__research_1_1RoutingModel.html#4f9dc42ffde5076f22a8611d367cd354">01322</a> <a class="code" href="classoperations__research_1_1Solver.html#487b521ee809f0f4ee397b9f6ea06f59">Solver::IndexEvaluator2</a>* <a class="code" href="classoperations__research_1_1RoutingModel.html#4f9dc42ffde5076f22a8611d367cd354">RoutingModel::NewCachedCallback</a>(
<a name="l01323"></a>01323     <a class="code" href="classoperations__research_1_1Solver.html#487b521ee809f0f4ee397b9f6ea06f59">Solver::IndexEvaluator2</a>* callback) {
<a name="l01324"></a>01324   <span class="keyword">const</span> <span class="keywordtype">int</span> size = <a class="code" href="classoperations__research_1_1RoutingModel.html#5a560929b26804990f1e7d6972218f87">Size</a>() + <a class="code" href="classoperations__research_1_1RoutingModel.html#3b06cdcfe6fc0ea3051a33672108f7df">vehicles_</a>;
<a name="l01325"></a>01325   <span class="keywordflow">if</span> (FLAGS_routing_cache_callbacks &amp;&amp; size &lt;= FLAGS_routing_max_cache_size) {
<a name="l01326"></a>01326     <a class="code" href="classoperations__research_1_1RoutingModel.html#a936d0a4e5ecf5b8f377210acc75bd66">routing_caches_</a>.push_back(<span class="keyword">new</span> <a class="code" href="classoperations__research_1_1RoutingCache.html" title="Cached callbacks.">RoutingCache</a>(callback, size));
<a name="l01327"></a>01327     <a class="code" href="classoperations__research_1_1Solver.html#487b521ee809f0f4ee397b9f6ea06f59">Solver::IndexEvaluator2</a>* cached_evaluator =
<a name="l01328"></a>01328         NewPermanentCallback(<a class="code" href="classoperations__research_1_1RoutingModel.html#a936d0a4e5ecf5b8f377210acc75bd66">routing_caches_</a>.back(), &amp;<a class="code" href="classoperations__research_1_1RoutingCache.html#8d8b3953a8315c6d565429cb18fa5453">RoutingCache::Run</a>);
<a name="l01329"></a>01329     <a class="code" href="classoperations__research_1_1RoutingModel.html#c5da4b8a1d5400a2a48246ddee845ff3" title="Callbacks to be deleted.">owned_callbacks_</a>.insert(cached_evaluator);
<a name="l01330"></a>01330     <span class="keywordflow">return</span> cached_evaluator;
<a name="l01331"></a>01331   } <span class="keywordflow">else</span> {
<a name="l01332"></a>01332     <a class="code" href="classoperations__research_1_1RoutingModel.html#c5da4b8a1d5400a2a48246ddee845ff3" title="Callbacks to be deleted.">owned_callbacks_</a>.insert(callback);
<a name="l01333"></a>01333     <span class="keywordflow">return</span> callback;
<a name="l01334"></a>01334   }
<a name="l01335"></a>01335 }
<a name="l01336"></a>01336 
<a name="l01337"></a><a class="code" href="classoperations__research_1_1RoutingModel.html#a1645b33c03b559bc234695f8358124b">01337</a> <a class="code" href="classoperations__research_1_1Solver.html#fd80e55c6251fec492c4887f11b5b0e0">Solver::IndexEvaluator3</a>* <a class="code" href="classoperations__research_1_1RoutingModel.html#a1645b33c03b559bc234695f8358124b">RoutingModel::BuildCostCallback</a>() {
<a name="l01338"></a>01338   <span class="keywordflow">return</span> NewPermanentCallback(<span class="keyword">this</span>, &amp;<a class="code" href="classoperations__research_1_1RoutingModel.html#d93cf7b05fe7541d808bf73268cb62da">RoutingModel::GetCost</a>);
<a name="l01339"></a>01339 }
<a name="l01340"></a>01340 
<a name="l01341"></a><a class="code" href="classoperations__research_1_1RoutingModel.html#e23cc43b74d4f61399208afbc1fcccd3">01341</a> <a class="code" href="classoperations__research_1_1IntVar.html" title="The class IntVar is a subset of IntExpr.">IntVar</a>** <a class="code" href="classoperations__research_1_1RoutingModel.html#e23cc43b74d4f61399208afbc1fcccd3">RoutingModel::GetOrMakeCumuls</a>(int64 capacity, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; name) {
<a name="l01342"></a>01342   <a class="code" href="classoperations__research_1_1IntVar.html" title="The class IntVar is a subset of IntExpr.">IntVar</a>** named_cumuls = FindPtrOrNull(<a class="code" href="classoperations__research_1_1RoutingModel.html#95e3e659045ca99695b0bccf50bb6953">cumuls_</a>, name);
<a name="l01343"></a>01343   <span class="keywordflow">if</span> (named_cumuls == NULL) {
<a name="l01344"></a>01344     vector&lt;IntVar*&gt; cumuls;
<a name="l01345"></a>01345     <span class="keyword">const</span> <span class="keywordtype">int</span> size = <a class="code" href="classoperations__research_1_1RoutingModel.html#5a560929b26804990f1e7d6972218f87">Size</a>() + <a class="code" href="classoperations__research_1_1RoutingModel.html#3b06cdcfe6fc0ea3051a33672108f7df">vehicles_</a>;
<a name="l01346"></a>01346     <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;MakeIntVarArray(size, 0LL, capacity, name, &amp;cumuls);
<a name="l01347"></a>01347     <a class="code" href="classoperations__research_1_1IntVar.html" title="The class IntVar is a subset of IntExpr.">IntVar</a>** cumul_array = <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;RevAlloc(<span class="keyword">new</span> <a class="code" href="classoperations__research_1_1IntVar.html" title="The class IntVar is a subset of IntExpr.">IntVar</a>*[size]);
<a name="l01348"></a>01348     memcpy(cumul_array, cumuls.data(), cumuls.size() * <span class="keyword">sizeof</span>(*cumuls.data()));
<a name="l01349"></a>01349     <a class="code" href="classoperations__research_1_1RoutingModel.html#95e3e659045ca99695b0bccf50bb6953">cumuls_</a>[name] = cumul_array;
<a name="l01350"></a>01350     <span class="keywordflow">return</span> cumul_array;
<a name="l01351"></a>01351   }
<a name="l01352"></a>01352   <span class="keywordflow">return</span> named_cumuls;
<a name="l01353"></a>01353 }
<a name="l01354"></a>01354 
<a name="l01355"></a><a class="code" href="classoperations__research_1_1RoutingModel.html#96b37064f31b004bbaa92590ca18960e">01355</a> int64 <a class="code" href="classoperations__research_1_1RoutingModel.html#96b37064f31b004bbaa92590ca18960e">RoutingModel::WrappedEvaluator</a>(<a class="code" href="classoperations__research_1_1Solver.html#487b521ee809f0f4ee397b9f6ea06f59">Solver::IndexEvaluator2</a>* evaluator,
<a name="l01356"></a>01356                                      int64 from,
<a name="l01357"></a>01357                                      int64 to) {
<a name="l01358"></a>01358   <span class="keywordflow">return</span> evaluator-&gt;Run(<a class="code" href="classoperations__research_1_1RoutingModel.html#7bfcb5eaee4b0459ddf4c67d2dd19b67" title="Returns the node index from an index value resulting fron a next variable.">IndexToNode</a>(from), <a class="code" href="classoperations__research_1_1RoutingModel.html#7bfcb5eaee4b0459ddf4c67d2dd19b67" title="Returns the node index from an index value resulting fron a next variable.">IndexToNode</a>(to));
<a name="l01359"></a>01359 }
<a name="l01360"></a>01360 
<a name="l01361"></a><a class="code" href="classoperations__research_1_1RoutingModel.html#0239db54cfc34bfe3e7858cb57fb97c9">01361</a> <a class="code" href="classoperations__research_1_1IntVar.html" title="The class IntVar is a subset of IntExpr.">IntVar</a>** <a class="code" href="classoperations__research_1_1RoutingModel.html#0239db54cfc34bfe3e7858cb57fb97c9">RoutingModel::GetOrMakeTransits</a>(<a class="code" href="classoperations__research_1_1Solver.html#487b521ee809f0f4ee397b9f6ea06f59">Solver::IndexEvaluator2</a>* evaluator,
<a name="l01362"></a>01362                                          int64 slack_max,
<a name="l01363"></a>01363                                          int64 capacity,
<a name="l01364"></a>01364                                          <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; name) {
<a name="l01365"></a>01365   evaluator-&gt;CheckIsRepeatable();
<a name="l01366"></a>01366   <a class="code" href="classoperations__research_1_1IntVar.html" title="The class IntVar is a subset of IntExpr.">IntVar</a>** named_transits = FindPtrOrNull(<a class="code" href="classoperations__research_1_1RoutingModel.html#a8c77534101e44e2db6edb6d44a2dabb">transits_</a>, name);
<a name="l01367"></a>01367   <span class="keywordflow">if</span> (named_transits == NULL) {
<a name="l01368"></a>01368     vector&lt;IntVar*&gt; transits;
<a name="l01369"></a>01369     <span class="keyword">const</span> <span class="keywordtype">int</span> size = <a class="code" href="classoperations__research_1_1RoutingModel.html#5a560929b26804990f1e7d6972218f87">Size</a>();
<a name="l01370"></a>01370     <a class="code" href="classoperations__research_1_1IntVar.html" title="The class IntVar is a subset of IntExpr.">IntVar</a>** transit_array = <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;RevAlloc(<span class="keyword">new</span> <a class="code" href="classoperations__research_1_1IntVar.html" title="The class IntVar is a subset of IntExpr.">IntVar</a>*[size]);
<a name="l01371"></a>01371     <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; size; ++i) {
<a name="l01372"></a>01372       <a class="code" href="classoperations__research_1_1IntVar.html" title="The class IntVar is a subset of IntExpr.">IntVar</a>* fixed_transit =
<a name="l01373"></a>01373           <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;MakeElement(NewPermanentCallback(
<a name="l01374"></a>01374               <span class="keyword">this</span>,
<a name="l01375"></a>01375               &amp;<a class="code" href="classoperations__research_1_1RoutingModel.html#96b37064f31b004bbaa92590ca18960e">RoutingModel::WrappedEvaluator</a>,
<a name="l01376"></a>01376               evaluator,
<a name="l01377"></a>01377               static_cast&lt;int64&gt;(i)),
<a name="l01378"></a>01378                                <a class="code" href="classoperations__research_1_1RoutingModel.html#e77d116609e31411fd2c02483a8300e2">nexts_</a>[i])-&gt;Var();
<a name="l01379"></a>01379       <span class="keywordflow">if</span> (slack_max == 0) {
<a name="l01380"></a>01380         transit_array[i] = fixed_transit;
<a name="l01381"></a>01381       } <span class="keywordflow">else</span> {
<a name="l01382"></a>01382         <a class="code" href="classoperations__research_1_1IntVar.html" title="The class IntVar is a subset of IntExpr.">IntVar</a>* slack_var = <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;MakeIntVar(0, slack_max, <span class="stringliteral">"slack"</span>);
<a name="l01383"></a>01383         transit_array[i] = <a class="code" href="classoperations__research_1_1RoutingModel.html#0f4a0b9d12d716d378b0572b686bf306" title="Model.">solver_</a>-&gt;MakeSum(slack_var, fixed_transit)-&gt;Var();
<a name="l01384"></a>01384       }
<a name="l01385"></a>01385       transit_array[i]-&gt;<a class="code" href="classoperations__research_1_1IntExpr.html#fec5a6eea8ee64fbc7fa34d7d28f8d8f">SetMin</a>(0);
<a name="l01386"></a>01386       transit_array[i]-&gt;<a class="code" href="classoperations__research_1_1IntExpr.html#dee9a082160df545671781df47f2b985">SetMax</a>(capacity);
<a name="l01387"></a>01387     }
<a name="l01388"></a>01388     <a class="code" href="classoperations__research_1_1RoutingModel.html#a8c77534101e44e2db6edb6d44a2dabb">transits_</a>[name] = transit_array;
<a name="l01389"></a>01389     <a class="code" href="classoperations__research_1_1RoutingModel.html#9e3fc497169104458d46cbf21d108c92">transit_evaluators_</a>[name] =
<a name="l01390"></a>01390         NewPermanentCallback(<span class="keyword">this</span>,
<a name="l01391"></a>01391                              &amp;<a class="code" href="classoperations__research_1_1RoutingModel.html#96b37064f31b004bbaa92590ca18960e">RoutingModel::WrappedEvaluator</a>,
<a name="l01392"></a>01392                              evaluator);
<a name="l01393"></a>01393     <a class="code" href="classoperations__research_1_1RoutingModel.html#c5da4b8a1d5400a2a48246ddee845ff3" title="Callbacks to be deleted.">owned_callbacks_</a>.insert(<a class="code" href="classoperations__research_1_1RoutingModel.html#9e3fc497169104458d46cbf21d108c92">transit_evaluators_</a>[name]);
<a name="l01394"></a>01394     <a class="code" href="classoperations__research_1_1RoutingModel.html#c5da4b8a1d5400a2a48246ddee845ff3" title="Callbacks to be deleted.">owned_callbacks_</a>.insert(evaluator);
<a name="l01395"></a>01395     <span class="keywordflow">return</span> transit_array;
<a name="l01396"></a>01396   }
<a name="l01397"></a>01397   <span class="keywordflow">return</span> named_transits;
<a name="l01398"></a>01398 }
<a name="l01399"></a>01399 
<a name="l01400"></a>01400 }  <span class="comment">// namespace operations_research</span>
</pre></div></div>

  <!-- Start of footer. -->
  <table width=100% cellpadding=0 cellspacing=0 border=0>
    <tr valign=top>
      <td colspan=2 height=10></td>
    </tr>
    <tr valign=top>
      <td colspan=2 bgcolor=#389613 height=3></td>
    </tr>
  </table>

  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br />

  
  </body>
</html>
