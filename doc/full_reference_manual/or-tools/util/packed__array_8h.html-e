<!-- Good morning, Mr. Phelps. -->
<html>
  <head>
    <meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
    <title>google3/util/packed_array.h File Reference - Doxy</title>
    <link rel="shortcut icon" href="../../favicon.ico">
    <!-- Both stylesheets are supplied by Doxygen, with maybe minor tweaks from Google. -->
    <link href="../../doxygen.css" rel="stylesheet" type="text/css">
    <link href="../../tabs.css" rel="stylesheet" type="text/css">
  </head>

  <body topmargin=0 leftmargin=20 bottommargin=0 rightmargin=20 marginwidth=20 marginheight=0>
  <!-- Second part of the secret behind Doxy logo always having the word "Doxy" with the color of the day. -->
  <style>
    a.doxy_logo:hover {
      background-color: #389613
    }
  </style>

  <table width=100% cellpadding=0 cellspacing=0 border=0>
    <!-- Top horizontal line with the color of the day. -->
    <tr valign=top>
      <td colspan=3 bgcolor=#389613 height=3></td>
    </tr>

    <!-- Header row with the links at the right. -->
    <tr valign=top>
      <td colspan=3 align=right>
        <font size=-1>
          Generated on: <font color=#389613><b>Fri Apr  1 14:13:18 PDT 2011</b></font>
            for <b>custom file set</b>
        </font>
      </td>
    </tr>

    <!-- Header row with the logo and the search form. -->
    <tr valign=top>
      <!-- Logo. -->
      <td align=left width=150>
        <table width=150 height=54 cellpadding=0 cellspacing=0 border=0>
          <tr valign=top>
            <!-- First part of the secret behind Doxy logo always having the word "Doxy" with the color of the day. -->
            <td bgcolor=#389613>
              <a class="doxy_logo" href="../../index.html"><img src="../../doxy_logo.png" alt="Doxy" border=0></a>
            </td>
          </tr>
        </table>
      </td>
    </tr>

    <!-- Tiny vertical space below the form. -->
    <tr valign=top>
      <td colspan=3 height=3></td>
    </tr>
  </table>

  <!-- Header navigation row. -->
  <div class="memproto">
    <table width=100% cellpadding=0 cellspacing=0 border=0>
      <tr>
        <td align=left style="padding-left: 20px"><font size=+1><b><tt><font color=#333333>//
            <a href="../../index.html"><font color=#389613>doxy</font></a>/</font>
            <a href="../../google3/index.html">google3</a>/
            <a href="../../google3/util/index.html">util</a>/
            </tt></b></font>
        </td>
      </tr>
    </table>
  </div>
  <br />
    <!-- No subdirs found. -->
  <!-- End of header. -->
<!-- Generated by Doxygen 1.5.6 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.html"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.html"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="namespaces.html"><span>Namespaces</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
</div>
<div class="contents">
<h1>google3/util/packed_array.h File Reference</h1><code>#include &lt;endian.h&gt;</code><br>
<code>#include &lt;limits.h&gt;</code><br>
<code>#include &lt;stdio.h&gt;</code><br>
<code>#include &lt;limits&gt;</code><br>
<code>#include &quot;base/integral_types.h&quot;</code><br>
<code>#include &quot;base/logging.h&quot;</code><br>
<code>#include &quot;base/scoped_ptr.h&quot;</code><br>

<p>
<a href="packed__array_8h-source.html">Go to the source code of this file.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Namespaces</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">namespace &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceoperations__research.html">operations_research</a></td></tr>

<tr><td colspan="2"><br><h2>Classes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1PackedArrayAllocator.html">operations_research::PackedArrayAllocator&lt; T, NumBytes &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1PackedArray.html">operations_research::PackedArray&lt; NumBytes &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1PackedArray_3_014_01_4.html">operations_research::PackedArray&lt; 4 &gt;</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">A specialization of the template for int32 (NumBytes = 4.  <a href="classoperations__research_1_1PackedArray_3_014_01_4.html#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classoperations__research_1_1PackedArray_3_018_01_4.html">operations_research::PackedArray&lt; 8 &gt;</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">A specialization of the template for int64 (NumBytes = 8.  <a href="classoperations__research_1_1PackedArray_3_018_01_4.html#_details">More...</a><br></td></tr>
<tr><td colspan="2"><br><h2>Defines</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="packed__array_8h.html#f0797ab5e0c586f69f18c3fb03262fc8">PACKED_ARRAY_WRITE_IF_ENOUGH_BYTES_AND_ADVANCE</a>(type, address, value)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Let n by the number of bytes (i.e.  <a href="#f0797ab5e0c586f69f18c3fb03262fc8"></a><br></td></tr>
<tr><td colspan="2"><br><h2>Typedefs</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">typedef unsigned char&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceoperations__research.html#038fd9956774dc3224cda8ac268babbc">operations_research::byte</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">typedef PackedArray&lt; 1 &gt;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceoperations__research.html#26b432c1b95b58d815893ed924c7db2b">operations_research::Int8PackedArray</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Shorthands for all the types of PackedArray's.  <a href="#26b432c1b95b58d815893ed924c7db2b"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">typedef PackedArray&lt; 2 &gt;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceoperations__research.html#c0fb83b00ec16e03c127486b4d23c457">operations_research::Int16PackedArray</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">typedef PackedArray&lt; 3 &gt;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceoperations__research.html#30634e925379f1343dd61fdc87d6f7dc">operations_research::Int24PackedArray</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">typedef PackedArray&lt; 4 &gt;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceoperations__research.html#c7c88a1df5bcc5b2ab8505991ec7133a">operations_research::Int32PackedArray</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">typedef PackedArray&lt; 5 &gt;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceoperations__research.html#4a9defe487ff25dabae1ba1f39563d5e">operations_research::Int40PackedArray</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">typedef PackedArray&lt; 6 &gt;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceoperations__research.html#0513f268ca9496ac9f86368091e38c45">operations_research::Int48PackedArray</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">typedef PackedArray&lt; 7 &gt;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceoperations__research.html#484b5a63e93ddf0e3cd22a70041b5eda">operations_research::Int56PackedArray</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">typedef PackedArray&lt; 8 &gt;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceoperations__research.html#e2b92c54f75364b40e3d65f0f6ca10d2">operations_research::Int64PackedArray</a></td></tr>

</table>
<hr><h2>Define Documentation</h2>
<a class="anchor" name="f0797ab5e0c586f69f18c3fb03262fc8"></a><!-- doxytag: member="packed_array.h::PACKED_ARRAY_WRITE_IF_ENOUGH_BYTES_AND_ADVANCE" ref="f0797ab5e0c586f69f18c3fb03262fc8" args="(type, address, value)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PACKED_ARRAY_WRITE_IF_ENOUGH_BYTES_AND_ADVANCE          </td>
          <td>(</td>
          <td class="paramtype">type,         <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">address,         <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">value&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<b>Value:</b><div class="fragment"><pre class="fragment">{                                                                             \
  <span class="keyword">const</span> int64 kSize = <span class="keyword">sizeof</span>(type);                                           \
  <span class="keywordflow">if</span> (NumBytes &amp; kSize) {                                                     \
    <span class="keyword">const</span> int64 k1 = GG_LONGLONG(1);                                          \
    <span class="keyword">const</span> int64 kSizeInBits = <span class="keyword">sizeof</span>(type) * CHAR_BIT;                        \
    <span class="keyword">const</span> int64 kMask = (k1 &lt;&lt; kSizeInBits) - 1;                              \
    <span class="keyword">reinterpret_cast&lt;</span>type*<span class="keyword">&gt;</span>(address)[0] = value &amp; kMask;                      \
    value &gt;&gt;= kSizeInBits;                                                    \
    address += kSize;                                                         \
  }                                                                           \
}
</pre></div>Let n by the number of bytes (i.e. 
<p>
sizeof) of type. PACKED_ARRAY_WRITE_IF_ENOUGH_BYTES_AND_ADVANCE writes the first n lowest significant bytes of value at address. It then shifts value by n bytes to the right, and advances address by n bytes. 
<p>Definition at line <a class="el" href="packed__array_8h-source.html#l00162">162</a> of file <a class="el" href="packed__array_8h-source.html">packed_array.h</a>.</p>

</div>
</div><p>
</div>

  <!-- Start of footer. -->
  <table width=100% cellpadding=0 cellspacing=0 border=0>
    <tr valign=top>
      <td colspan=2 height=10></td>
    </tr>
    <tr valign=top>
      <td colspan=2 bgcolor=#389613 height=3></td>
    </tr>
  </table>

  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br />

  
  </body>
</html>
