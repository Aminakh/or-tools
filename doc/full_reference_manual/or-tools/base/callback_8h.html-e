<!-- Good morning, Mr. Phelps. -->
<html>
  <head>
    <meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
    <title>google3/base/callback.h File Reference - Doxy</title>
    <link rel="shortcut icon" href="../../favicon.ico">
    <!-- Both stylesheets are supplied by Doxygen, with maybe minor tweaks from Google. -->
    <link href="../../doxygen.css" rel="stylesheet" type="text/css">
    <link href="../../tabs.css" rel="stylesheet" type="text/css">
  </head>

  <body topmargin=0 leftmargin=20 bottommargin=0 rightmargin=20 marginwidth=20 marginheight=0>
  <!-- Second part of the secret behind Doxy logo always having the word "Doxy" with the color of the day. -->
  <style>
    a.doxy_logo:hover {
      background-color: #389613
    }
  </style>

  <table width=100% cellpadding=0 cellspacing=0 border=0>
    <!-- Top horizontal line with the color of the day. -->
    <tr valign=top>
      <td colspan=3 bgcolor=#389613 height=3></td>
    </tr>

    <!-- Header row with the links at the right. -->
    <tr valign=top>
      <td colspan=3 align=right>
        <font size=-1>
          Generated on: <font color=#389613><b>Fri Apr  1 14:13:18 PDT 2011</b></font>
            for <b>custom file set</b>
        </font>
      </td>
    </tr>

    <!-- Header row with the logo and the search form. -->
    <tr valign=top>
      <!-- Logo. -->
      <td align=left width=150>
        <table width=150 height=54 cellpadding=0 cellspacing=0 border=0>
          <tr valign=top>
            <!-- First part of the secret behind Doxy logo always having the word "Doxy" with the color of the day. -->
            <td bgcolor=#389613>
              <a class="doxy_logo" href="../../index.html"><img src="../../doxy_logo.png" alt="Doxy" border=0></a>
            </td>
          </tr>
        </table>
      </td>
    </tr>

    <!-- Tiny vertical space below the form. -->
    <tr valign=top>
      <td colspan=3 height=3></td>
    </tr>
  </table>

  <!-- Header navigation row. -->
  <div class="memproto">
    <table width=100% cellpadding=0 cellspacing=0 border=0>
      <tr>
        <td align=left style="padding-left: 20px"><font size=+1><b><tt><font color=#333333>//
            <a href="../../index.html"><font color=#389613>doxy</font></a>/</font>
            <a href="../../google3/index.html">google3</a>/
            <a href="../../google3/base/index.html">base</a>/
            </tt></b></font>
        </td>
      </tr>
    </table>
  </div>
  <br />
    <!-- No subdirs found. -->
  <!-- End of header. -->
<!-- Generated by Doxygen 1.5.6 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.html"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.html"><span>Namespaces</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
</div>
<div class="contents">
<h1>google3/base/callback.h File Reference</h1><code>#include &quot;<a class="el" href="util_8h-source.html">base/util.h</a>&quot;</code><br>
<code>#include &quot;<a class="el" href="logging_8h-source.html">base/logging.h</a>&quot;</code><br>

<p>
<a href="callback_8h-source.html">Go to the source code of this file.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Namespaces</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">namespace &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceoperations__research.html">operations_research</a></td></tr>

<tr><td colspan="2"><br><h2>Classes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structoperations__research_1_1CallbackUtils__.html">operations_research::CallbackUtils_</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classClosure.html">Closure</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">base types  <a href="classClosure.html#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classResultCallback.html">ResultCallback&lt; R &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCallback1.html">Callback1&lt; A1 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classResultCallback1.html">ResultCallback1&lt; R, A1 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCallback2.html">Callback2&lt; A1, A2 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classResultCallback2.html">ResultCallback2&lt; R, A1, A2 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCallback3.html">Callback3&lt; A1, A2, A3 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classResultCallback3.html">ResultCallback3&lt; R, A1, A2, A3 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCallback4.html">Callback4&lt; A1, A2, A3, A4 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classResultCallback4.html">ResultCallback4&lt; R, A1, A2, A3, A4 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCallback5.html">Callback5&lt; A1, A2, A3, A4, A5 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classResultCallback5.html">ResultCallback5&lt; R, A1, A2, A3, A4, A5 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__0__0.html">_ConstMemberResultCallback_0_0&lt; del, R, T &gt;</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Callback specializations.  <a href="class__ConstMemberResultCallback__0__0.html#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__0__0_3_01del_00_01void_00_01T_01_4.html">_ConstMemberResultCallback_0_0&lt; del, void, T &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__0__0.html">_MemberResultCallback_0_0&lt; del, R, T &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__0__0_3_01del_00_01void_00_01T_01_4.html">_MemberResultCallback_0_0&lt; del, void, T &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__0__0.html">_FunctionResultCallback_0_0&lt; del, R &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__0__0_3_01del_00_01void_01_4.html">_FunctionResultCallback_0_0&lt; del, void &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__1__0.html">_ConstMemberResultCallback_1_0&lt; del, R, T, P1 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__1__0_3_01del_00_01void_00_01T_00_01P1_01_4.html">_ConstMemberResultCallback_1_0&lt; del, void, T, P1 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__1__0.html">_MemberResultCallback_1_0&lt; del, R, T, P1 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__1__0_3_01del_00_01void_00_01T_00_01P1_01_4.html">_MemberResultCallback_1_0&lt; del, void, T, P1 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__1__0.html">_FunctionResultCallback_1_0&lt; del, R, P1 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__1__0_3_01del_00_01void_00_01P1_01_4.html">_FunctionResultCallback_1_0&lt; del, void, P1 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__2__0.html">_ConstMemberResultCallback_2_0&lt; del, R, T, P1, P2 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__2__0_3_01del_00_01void_00_01T_00_01P1_00_01P2_01_4.html">_ConstMemberResultCallback_2_0&lt; del, void, T, P1, P2 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__2__0.html">_MemberResultCallback_2_0&lt; del, R, T, P1, P2 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__2__0_3_01del_00_01void_00_01T_00_01P1_00_01P2_01_4.html">_MemberResultCallback_2_0&lt; del, void, T, P1, P2 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__2__0.html">_FunctionResultCallback_2_0&lt; del, R, P1, P2 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__2__0_3_01del_00_01void_00_01P1_00_01P2_01_4.html">_FunctionResultCallback_2_0&lt; del, void, P1, P2 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__3__0.html">_ConstMemberResultCallback_3_0&lt; del, R, T, P1, P2, P3 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__3__0_3_01del_00_01void_00_01T_00_01P1_00_01P2_00_01P3_01_4.html">_ConstMemberResultCallback_3_0&lt; del, void, T, P1, P2, P3 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__3__0.html">_MemberResultCallback_3_0&lt; del, R, T, P1, P2, P3 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__3__0_3_01del_00_01void_00_01T_00_01P1_00_01P2_00_01P3_01_4.html">_MemberResultCallback_3_0&lt; del, void, T, P1, P2, P3 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__3__0.html">_FunctionResultCallback_3_0&lt; del, R, P1, P2, P3 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__3__0_3_01del_00_01void_00_01P1_00_01P2_00_01P3_01_4.html">_FunctionResultCallback_3_0&lt; del, void, P1, P2, P3 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__4__0.html">_ConstMemberResultCallback_4_0&lt; del, R, T, P1, P2, P3, P4 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__4__0_3_01del_00_01void_00_01T_00_01P1_00_01P2_00_01P3_00_01P4_01_4.html">_ConstMemberResultCallback_4_0&lt; del, void, T, P1, P2, P3, P4 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__4__0.html">_MemberResultCallback_4_0&lt; del, R, T, P1, P2, P3, P4 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__4__0_3_01del_00_01void_00_01T_00_01P1_00_01P2_00_01P3_00_01P4_01_4.html">_MemberResultCallback_4_0&lt; del, void, T, P1, P2, P3, P4 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__4__0.html">_FunctionResultCallback_4_0&lt; del, R, P1, P2, P3, P4 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__4__0_3_01del_00_01void_00_01P1_00_01P2_00_01P3_00_01P4_01_4.html">_FunctionResultCallback_4_0&lt; del, void, P1, P2, P3, P4 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__5__0.html">_ConstMemberResultCallback_5_0&lt; del, R, T, P1, P2, P3, P4, P5 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__5__0_3_01del_00_01void_00_01T_00_01P1_00_01P2_00_01P3_00_01P4_00_01P5_01_4.html">_ConstMemberResultCallback_5_0&lt; del, void, T, P1, P2, P3, P4, P5 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__5__0.html">_MemberResultCallback_5_0&lt; del, R, T, P1, P2, P3, P4, P5 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__5__0_3_01del_00_01void_00_01T_00_01P1_00_01P2_00_01P3_00_01P4_00_01P5_01_4.html">_MemberResultCallback_5_0&lt; del, void, T, P1, P2, P3, P4, P5 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__5__0.html">_FunctionResultCallback_5_0&lt; del, R, P1, P2, P3, P4, P5 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__5__0_3_01del_00_01void_00_01P1_00_01P2_00_01P3_00_01P4_00_01P5_01_4.html">_FunctionResultCallback_5_0&lt; del, void, P1, P2, P3, P4, P5 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__6__0.html">_ConstMemberResultCallback_6_0&lt; del, R, T, P1, P2, P3, P4, P5, P6 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__6__0_3_01del_00_01void_00_01T_00_01P1_00_01P2_00_01P3_00_01P4_00_01P5_00_01P6_01_4.html">_ConstMemberResultCallback_6_0&lt; del, void, T, P1, P2, P3, P4, P5, P6 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__6__0.html">_MemberResultCallback_6_0&lt; del, R, T, P1, P2, P3, P4, P5, P6 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__6__0_3_01del_00_01void_00_01T_00_01P1_00_01P2_00_01P3_00_01P4_00_01P5_00_01P6_01_4.html">_MemberResultCallback_6_0&lt; del, void, T, P1, P2, P3, P4, P5, P6 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__6__0.html">_FunctionResultCallback_6_0&lt; del, R, P1, P2, P3, P4, P5, P6 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__6__0_3_01del_00_01void_00_01P1_00_01P2_00_01P3_00_01P4_00_01P5_00_01P6_01_4.html">_FunctionResultCallback_6_0&lt; del, void, P1, P2, P3, P4, P5, P6 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__0__1.html">_ConstMemberResultCallback_0_1&lt; del, R, T, A1 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__0__1_3_01del_00_01void_00_01T_00_01A1_01_4.html">_ConstMemberResultCallback_0_1&lt; del, void, T, A1 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__0__1.html">_MemberResultCallback_0_1&lt; del, R, T, A1 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__0__1_3_01del_00_01void_00_01T_00_01A1_01_4.html">_MemberResultCallback_0_1&lt; del, void, T, A1 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__0__1.html">_FunctionResultCallback_0_1&lt; del, R, A1 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__0__1_3_01del_00_01void_00_01A1_01_4.html">_FunctionResultCallback_0_1&lt; del, void, A1 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__1__1.html">_ConstMemberResultCallback_1_1&lt; del, R, T, P1, A1 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__1__1_3_01del_00_01void_00_01T_00_01P1_00_01A1_01_4.html">_ConstMemberResultCallback_1_1&lt; del, void, T, P1, A1 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__1__1.html">_MemberResultCallback_1_1&lt; del, R, T, P1, A1 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__1__1_3_01del_00_01void_00_01T_00_01P1_00_01A1_01_4.html">_MemberResultCallback_1_1&lt; del, void, T, P1, A1 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__1__1.html">_FunctionResultCallback_1_1&lt; del, R, P1, A1 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__1__1_3_01del_00_01void_00_01P1_00_01A1_01_4.html">_FunctionResultCallback_1_1&lt; del, void, P1, A1 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__2__1.html">_ConstMemberResultCallback_2_1&lt; del, R, T, P1, P2, A1 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__2__1_3_01del_00_01void_00_01T_00_01P1_00_01P2_00_01A1_01_4.html">_ConstMemberResultCallback_2_1&lt; del, void, T, P1, P2, A1 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__2__1.html">_MemberResultCallback_2_1&lt; del, R, T, P1, P2, A1 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__2__1_3_01del_00_01void_00_01T_00_01P1_00_01P2_00_01A1_01_4.html">_MemberResultCallback_2_1&lt; del, void, T, P1, P2, A1 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__2__1.html">_FunctionResultCallback_2_1&lt; del, R, P1, P2, A1 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__2__1_3_01del_00_01void_00_01P1_00_01P2_00_01A1_01_4.html">_FunctionResultCallback_2_1&lt; del, void, P1, P2, A1 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__3__1.html">_ConstMemberResultCallback_3_1&lt; del, R, T, P1, P2, P3, A1 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__3__1_3_01del_00_01void_00_01T_00_01P1_00_01P2_00_01P3_00_01A1_01_4.html">_ConstMemberResultCallback_3_1&lt; del, void, T, P1, P2, P3, A1 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__3__1.html">_MemberResultCallback_3_1&lt; del, R, T, P1, P2, P3, A1 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__3__1_3_01del_00_01void_00_01T_00_01P1_00_01P2_00_01P3_00_01A1_01_4.html">_MemberResultCallback_3_1&lt; del, void, T, P1, P2, P3, A1 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__3__1.html">_FunctionResultCallback_3_1&lt; del, R, P1, P2, P3, A1 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__3__1_3_01del_00_01void_00_01P1_00_01P2_00_01P3_00_01A1_01_4.html">_FunctionResultCallback_3_1&lt; del, void, P1, P2, P3, A1 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__4__1.html">_ConstMemberResultCallback_4_1&lt; del, R, T, P1, P2, P3, P4, A1 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__4__1_3_01del_00_01void_00_01T_00_01P1_00_01P2_00_01P3_00_01P4_00_01A1_01_4.html">_ConstMemberResultCallback_4_1&lt; del, void, T, P1, P2, P3, P4, A1 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__4__1.html">_MemberResultCallback_4_1&lt; del, R, T, P1, P2, P3, P4, A1 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__4__1_3_01del_00_01void_00_01T_00_01P1_00_01P2_00_01P3_00_01P4_00_01A1_01_4.html">_MemberResultCallback_4_1&lt; del, void, T, P1, P2, P3, P4, A1 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__4__1.html">_FunctionResultCallback_4_1&lt; del, R, P1, P2, P3, P4, A1 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__4__1_3_01del_00_01void_00_01P1_00_01P2_00_01P3_00_01P4_00_01A1_01_4.html">_FunctionResultCallback_4_1&lt; del, void, P1, P2, P3, P4, A1 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__5__1.html">_ConstMemberResultCallback_5_1&lt; del, R, T, P1, P2, P3, P4, P5, A1 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__5__1_3_01del_00_01void_00_01T_00_01P1_00_01P2_00_01P3_00_01P4_00_01P5_00_01A1_01_4.html">_ConstMemberResultCallback_5_1&lt; del, void, T, P1, P2, P3, P4, P5, A1 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__5__1.html">_MemberResultCallback_5_1&lt; del, R, T, P1, P2, P3, P4, P5, A1 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__5__1_3_01del_00_01void_00_01T_00_01P1_00_01P2_00_01P3_00_01P4_00_01P5_00_01A1_01_4.html">_MemberResultCallback_5_1&lt; del, void, T, P1, P2, P3, P4, P5, A1 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__5__1.html">_FunctionResultCallback_5_1&lt; del, R, P1, P2, P3, P4, P5, A1 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__5__1_3_01del_00_01void_00_01P1_00_01P2_00_01P3_00_01P4_00_01P5_00_01A1_01_4.html">_FunctionResultCallback_5_1&lt; del, void, P1, P2, P3, P4, P5, A1 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__6__1.html">_ConstMemberResultCallback_6_1&lt; del, R, T, P1, P2, P3, P4, P5, P6, A1 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__6__1_3_01del_00_01void_00_01T_00_01P1_00_01P2_00_01P3_00_01P4_00_01P5_00_01P6_00_01A1_01_4.html">_ConstMemberResultCallback_6_1&lt; del, void, T, P1, P2, P3, P4, P5, P6, A1 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__6__1.html">_MemberResultCallback_6_1&lt; del, R, T, P1, P2, P3, P4, P5, P6, A1 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__6__1_3_01del_00_01void_00_01T_00_01P1_00_01P2_00_01P3_00_01P4_00_01P5_00_01P6_00_01A1_01_4.html">_MemberResultCallback_6_1&lt; del, void, T, P1, P2, P3, P4, P5, P6, A1 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__6__1.html">_FunctionResultCallback_6_1&lt; del, R, P1, P2, P3, P4, P5, P6, A1 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__6__1_3_01del_00_01void_00_01P1_00_01P2_00_01P3_00_01P4_00_01P5_00_01P6_00_01A1_01_4.html">_FunctionResultCallback_6_1&lt; del, void, P1, P2, P3, P4, P5, P6, A1 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__0__2.html">_ConstMemberResultCallback_0_2&lt; del, R, T, A1, A2 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__0__2_3_01del_00_01void_00_01T_00_01A1_00_01A2_01_4.html">_ConstMemberResultCallback_0_2&lt; del, void, T, A1, A2 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__0__2.html">_MemberResultCallback_0_2&lt; del, R, T, A1, A2 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__0__2_3_01del_00_01void_00_01T_00_01A1_00_01A2_01_4.html">_MemberResultCallback_0_2&lt; del, void, T, A1, A2 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__0__2.html">_FunctionResultCallback_0_2&lt; del, R, A1, A2 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__0__2_3_01del_00_01void_00_01A1_00_01A2_01_4.html">_FunctionResultCallback_0_2&lt; del, void, A1, A2 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__1__2.html">_ConstMemberResultCallback_1_2&lt; del, R, T, P1, A1, A2 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__1__2_3_01del_00_01void_00_01T_00_01P1_00_01A1_00_01A2_01_4.html">_ConstMemberResultCallback_1_2&lt; del, void, T, P1, A1, A2 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__1__2.html">_MemberResultCallback_1_2&lt; del, R, T, P1, A1, A2 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__1__2_3_01del_00_01void_00_01T_00_01P1_00_01A1_00_01A2_01_4.html">_MemberResultCallback_1_2&lt; del, void, T, P1, A1, A2 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__1__2.html">_FunctionResultCallback_1_2&lt; del, R, P1, A1, A2 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__1__2_3_01del_00_01void_00_01P1_00_01A1_00_01A2_01_4.html">_FunctionResultCallback_1_2&lt; del, void, P1, A1, A2 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__2__2.html">_ConstMemberResultCallback_2_2&lt; del, R, T, P1, P2, A1, A2 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__2__2_3_01del_00_01void_00_01T_00_01P1_00_01P2_00_01A1_00_01A2_01_4.html">_ConstMemberResultCallback_2_2&lt; del, void, T, P1, P2, A1, A2 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__2__2.html">_MemberResultCallback_2_2&lt; del, R, T, P1, P2, A1, A2 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__2__2_3_01del_00_01void_00_01T_00_01P1_00_01P2_00_01A1_00_01A2_01_4.html">_MemberResultCallback_2_2&lt; del, void, T, P1, P2, A1, A2 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__2__2.html">_FunctionResultCallback_2_2&lt; del, R, P1, P2, A1, A2 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__2__2_3_01del_00_01void_00_01P1_00_01P2_00_01A1_00_01A2_01_4.html">_FunctionResultCallback_2_2&lt; del, void, P1, P2, A1, A2 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__3__2.html">_ConstMemberResultCallback_3_2&lt; del, R, T, P1, P2, P3, A1, A2 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__3__2_3_01del_00_01void_00_01T_00_01P1_00_01P2_00_01P3_00_01A1_00_01A2_01_4.html">_ConstMemberResultCallback_3_2&lt; del, void, T, P1, P2, P3, A1, A2 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__3__2.html">_MemberResultCallback_3_2&lt; del, R, T, P1, P2, P3, A1, A2 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__3__2_3_01del_00_01void_00_01T_00_01P1_00_01P2_00_01P3_00_01A1_00_01A2_01_4.html">_MemberResultCallback_3_2&lt; del, void, T, P1, P2, P3, A1, A2 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__3__2.html">_FunctionResultCallback_3_2&lt; del, R, P1, P2, P3, A1, A2 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__3__2_3_01del_00_01void_00_01P1_00_01P2_00_01P3_00_01A1_00_01A2_01_4.html">_FunctionResultCallback_3_2&lt; del, void, P1, P2, P3, A1, A2 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__4__2.html">_ConstMemberResultCallback_4_2&lt; del, R, T, P1, P2, P3, P4, A1, A2 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__4__2_3_01del_00_01void_00_01T_00_01P1_00_01P2_00_01P3_00_01P4_00_01A1_00_01A2_01_4.html">_ConstMemberResultCallback_4_2&lt; del, void, T, P1, P2, P3, P4, A1, A2 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__4__2.html">_MemberResultCallback_4_2&lt; del, R, T, P1, P2, P3, P4, A1, A2 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__4__2_3_01del_00_01void_00_01T_00_01P1_00_01P2_00_01P3_00_01P4_00_01A1_00_01A2_01_4.html">_MemberResultCallback_4_2&lt; del, void, T, P1, P2, P3, P4, A1, A2 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__4__2.html">_FunctionResultCallback_4_2&lt; del, R, P1, P2, P3, P4, A1, A2 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__4__2_3_01del_00_01void_00_01P1_00_01P2_00_01P3_00_01P4_00_01A1_00_01A2_01_4.html">_FunctionResultCallback_4_2&lt; del, void, P1, P2, P3, P4, A1, A2 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__5__2.html">_ConstMemberResultCallback_5_2&lt; del, R, T, P1, P2, P3, P4, P5, A1, A2 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__5__2_3_01del_00_01void_00_01T_00_01P1_00_01P2_00_01P3_00_01P4_00_01P5_00_01A1_00_01A2_01_4.html">_ConstMemberResultCallback_5_2&lt; del, void, T, P1, P2, P3, P4, P5, A1, A2 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__5__2.html">_MemberResultCallback_5_2&lt; del, R, T, P1, P2, P3, P4, P5, A1, A2 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__5__2_3_01del_00_01void_00_01T_00_01P1_00_01P2_00_01P3_00_01P4_00_01P5_00_01A1_00_01A2_01_4.html">_MemberResultCallback_5_2&lt; del, void, T, P1, P2, P3, P4, P5, A1, A2 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__5__2.html">_FunctionResultCallback_5_2&lt; del, R, P1, P2, P3, P4, P5, A1, A2 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__5__2_3_01del_00_01void_00_01P1_00_01P2_00_01P3_00_01P4_00_01P5_00_01A1_00_01A2_01_4.html">_FunctionResultCallback_5_2&lt; del, void, P1, P2, P3, P4, P5, A1, A2 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__6__2.html">_ConstMemberResultCallback_6_2&lt; del, R, T, P1, P2, P3, P4, P5, P6, A1, A2 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__6__2_3_01del_00_01void_00_01T_00_01P1_00_01P2_00_01P3_00_01P4_7129378d8bfb4442480482b224389114.html">_ConstMemberResultCallback_6_2&lt; del, void, T, P1, P2, P3, P4, P5, P6, A1, A2 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__6__2.html">_MemberResultCallback_6_2&lt; del, R, T, P1, P2, P3, P4, P5, P6, A1, A2 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__6__2_3_01del_00_01void_00_01T_00_01P1_00_01P2_00_01P3_00_01P4_00_01P5_00_01P6_00_01A1_00_01A2_01_4.html">_MemberResultCallback_6_2&lt; del, void, T, P1, P2, P3, P4, P5, P6, A1, A2 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__6__2.html">_FunctionResultCallback_6_2&lt; del, R, P1, P2, P3, P4, P5, P6, A1, A2 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__6__2_3_01del_00_01void_00_01P1_00_01P2_00_01P3_00_01P4_00_01P5_00_01P6_00_01A1_00_01A2_01_4.html">_FunctionResultCallback_6_2&lt; del, void, P1, P2, P3, P4, P5, P6, A1, A2 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__0__3.html">_ConstMemberResultCallback_0_3&lt; del, R, T, A1, A2, A3 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__0__3_3_01del_00_01void_00_01T_00_01A1_00_01A2_00_01A3_01_4.html">_ConstMemberResultCallback_0_3&lt; del, void, T, A1, A2, A3 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__0__3.html">_MemberResultCallback_0_3&lt; del, R, T, A1, A2, A3 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__0__3_3_01del_00_01void_00_01T_00_01A1_00_01A2_00_01A3_01_4.html">_MemberResultCallback_0_3&lt; del, void, T, A1, A2, A3 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__0__3.html">_FunctionResultCallback_0_3&lt; del, R, A1, A2, A3 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__0__3_3_01del_00_01void_00_01A1_00_01A2_00_01A3_01_4.html">_FunctionResultCallback_0_3&lt; del, void, A1, A2, A3 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__1__3.html">_ConstMemberResultCallback_1_3&lt; del, R, T, P1, A1, A2, A3 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__1__3_3_01del_00_01void_00_01T_00_01P1_00_01A1_00_01A2_00_01A3_01_4.html">_ConstMemberResultCallback_1_3&lt; del, void, T, P1, A1, A2, A3 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__1__3.html">_MemberResultCallback_1_3&lt; del, R, T, P1, A1, A2, A3 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__1__3_3_01del_00_01void_00_01T_00_01P1_00_01A1_00_01A2_00_01A3_01_4.html">_MemberResultCallback_1_3&lt; del, void, T, P1, A1, A2, A3 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__1__3.html">_FunctionResultCallback_1_3&lt; del, R, P1, A1, A2, A3 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__1__3_3_01del_00_01void_00_01P1_00_01A1_00_01A2_00_01A3_01_4.html">_FunctionResultCallback_1_3&lt; del, void, P1, A1, A2, A3 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__2__3.html">_ConstMemberResultCallback_2_3&lt; del, R, T, P1, P2, A1, A2, A3 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__2__3_3_01del_00_01void_00_01T_00_01P1_00_01P2_00_01A1_00_01A2_00_01A3_01_4.html">_ConstMemberResultCallback_2_3&lt; del, void, T, P1, P2, A1, A2, A3 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__2__3.html">_MemberResultCallback_2_3&lt; del, R, T, P1, P2, A1, A2, A3 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__2__3_3_01del_00_01void_00_01T_00_01P1_00_01P2_00_01A1_00_01A2_00_01A3_01_4.html">_MemberResultCallback_2_3&lt; del, void, T, P1, P2, A1, A2, A3 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__2__3.html">_FunctionResultCallback_2_3&lt; del, R, P1, P2, A1, A2, A3 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__2__3_3_01del_00_01void_00_01P1_00_01P2_00_01A1_00_01A2_00_01A3_01_4.html">_FunctionResultCallback_2_3&lt; del, void, P1, P2, A1, A2, A3 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__3__3.html">_ConstMemberResultCallback_3_3&lt; del, R, T, P1, P2, P3, A1, A2, A3 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__3__3_3_01del_00_01void_00_01T_00_01P1_00_01P2_00_01P3_00_01A1_00_01A2_00_01A3_01_4.html">_ConstMemberResultCallback_3_3&lt; del, void, T, P1, P2, P3, A1, A2, A3 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__3__3.html">_MemberResultCallback_3_3&lt; del, R, T, P1, P2, P3, A1, A2, A3 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__3__3_3_01del_00_01void_00_01T_00_01P1_00_01P2_00_01P3_00_01A1_00_01A2_00_01A3_01_4.html">_MemberResultCallback_3_3&lt; del, void, T, P1, P2, P3, A1, A2, A3 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__3__3.html">_FunctionResultCallback_3_3&lt; del, R, P1, P2, P3, A1, A2, A3 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__3__3_3_01del_00_01void_00_01P1_00_01P2_00_01P3_00_01A1_00_01A2_00_01A3_01_4.html">_FunctionResultCallback_3_3&lt; del, void, P1, P2, P3, A1, A2, A3 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__4__3.html">_ConstMemberResultCallback_4_3&lt; del, R, T, P1, P2, P3, P4, A1, A2, A3 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__4__3_3_01del_00_01void_00_01T_00_01P1_00_01P2_00_01P3_00_01P4_00_01A1_00_01A2_00_01A3_01_4.html">_ConstMemberResultCallback_4_3&lt; del, void, T, P1, P2, P3, P4, A1, A2, A3 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__4__3.html">_MemberResultCallback_4_3&lt; del, R, T, P1, P2, P3, P4, A1, A2, A3 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__4__3_3_01del_00_01void_00_01T_00_01P1_00_01P2_00_01P3_00_01P4_00_01A1_00_01A2_00_01A3_01_4.html">_MemberResultCallback_4_3&lt; del, void, T, P1, P2, P3, P4, A1, A2, A3 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__4__3.html">_FunctionResultCallback_4_3&lt; del, R, P1, P2, P3, P4, A1, A2, A3 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__4__3_3_01del_00_01void_00_01P1_00_01P2_00_01P3_00_01P4_00_01A1_00_01A2_00_01A3_01_4.html">_FunctionResultCallback_4_3&lt; del, void, P1, P2, P3, P4, A1, A2, A3 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__5__3.html">_ConstMemberResultCallback_5_3&lt; del, R, T, P1, P2, P3, P4, P5, A1, A2, A3 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__5__3_3_01del_00_01void_00_01T_00_01P1_00_01P2_00_01P3_00_01P4_1c6f524a9b094dbf8022b0b0a1f287eb.html">_ConstMemberResultCallback_5_3&lt; del, void, T, P1, P2, P3, P4, P5, A1, A2, A3 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__5__3.html">_MemberResultCallback_5_3&lt; del, R, T, P1, P2, P3, P4, P5, A1, A2, A3 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__5__3_3_01del_00_01void_00_01T_00_01P1_00_01P2_00_01P3_00_01P4_00_01P5_00_01A1_00_01A2_00_01A3_01_4.html">_MemberResultCallback_5_3&lt; del, void, T, P1, P2, P3, P4, P5, A1, A2, A3 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__5__3.html">_FunctionResultCallback_5_3&lt; del, R, P1, P2, P3, P4, P5, A1, A2, A3 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__5__3_3_01del_00_01void_00_01P1_00_01P2_00_01P3_00_01P4_00_01P5_00_01A1_00_01A2_00_01A3_01_4.html">_FunctionResultCallback_5_3&lt; del, void, P1, P2, P3, P4, P5, A1, A2, A3 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__6__3.html">_ConstMemberResultCallback_6_3&lt; del, R, T, P1, P2, P3, P4, P5, P6, A1, A2, A3 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__6__3_3_01del_00_01void_00_01T_00_01P1_00_01P2_00_01P3_00_01P4_998a30ed1f07de4f2ef5a8dca8c5ced3.html">_ConstMemberResultCallback_6_3&lt; del, void, T, P1, P2, P3, P4, P5, P6, A1, A2, A3 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__6__3.html">_MemberResultCallback_6_3&lt; del, R, T, P1, P2, P3, P4, P5, P6, A1, A2, A3 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__6__3_3_01del_00_01void_00_01T_00_01P1_00_01P2_00_01P3_00_01P4_00_0122d85322900cc52c4f795017b1f80e67.html">_MemberResultCallback_6_3&lt; del, void, T, P1, P2, P3, P4, P5, P6, A1, A2, A3 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__6__3.html">_FunctionResultCallback_6_3&lt; del, R, P1, P2, P3, P4, P5, P6, A1, A2, A3 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__6__3_3_01del_00_01void_00_01P1_00_01P2_00_01P3_00_01P4_00_01P5_008771dfb82977bace7949d289a5530369.html">_FunctionResultCallback_6_3&lt; del, void, P1, P2, P3, P4, P5, P6, A1, A2, A3 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__0__4.html">_ConstMemberResultCallback_0_4&lt; del, R, T, A1, A2, A3, A4 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__0__4_3_01del_00_01void_00_01T_00_01A1_00_01A2_00_01A3_00_01A4_01_4.html">_ConstMemberResultCallback_0_4&lt; del, void, T, A1, A2, A3, A4 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__0__4.html">_MemberResultCallback_0_4&lt; del, R, T, A1, A2, A3, A4 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__0__4_3_01del_00_01void_00_01T_00_01A1_00_01A2_00_01A3_00_01A4_01_4.html">_MemberResultCallback_0_4&lt; del, void, T, A1, A2, A3, A4 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__0__4.html">_FunctionResultCallback_0_4&lt; del, R, A1, A2, A3, A4 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__0__4_3_01del_00_01void_00_01A1_00_01A2_00_01A3_00_01A4_01_4.html">_FunctionResultCallback_0_4&lt; del, void, A1, A2, A3, A4 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__1__4.html">_ConstMemberResultCallback_1_4&lt; del, R, T, P1, A1, A2, A3, A4 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__1__4_3_01del_00_01void_00_01T_00_01P1_00_01A1_00_01A2_00_01A3_00_01A4_01_4.html">_ConstMemberResultCallback_1_4&lt; del, void, T, P1, A1, A2, A3, A4 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__1__4.html">_MemberResultCallback_1_4&lt; del, R, T, P1, A1, A2, A3, A4 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__1__4_3_01del_00_01void_00_01T_00_01P1_00_01A1_00_01A2_00_01A3_00_01A4_01_4.html">_MemberResultCallback_1_4&lt; del, void, T, P1, A1, A2, A3, A4 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__1__4.html">_FunctionResultCallback_1_4&lt; del, R, P1, A1, A2, A3, A4 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__1__4_3_01del_00_01void_00_01P1_00_01A1_00_01A2_00_01A3_00_01A4_01_4.html">_FunctionResultCallback_1_4&lt; del, void, P1, A1, A2, A3, A4 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__2__4.html">_ConstMemberResultCallback_2_4&lt; del, R, T, P1, P2, A1, A2, A3, A4 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__2__4_3_01del_00_01void_00_01T_00_01P1_00_01P2_00_01A1_00_01A2_00_01A3_00_01A4_01_4.html">_ConstMemberResultCallback_2_4&lt; del, void, T, P1, P2, A1, A2, A3, A4 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__2__4.html">_MemberResultCallback_2_4&lt; del, R, T, P1, P2, A1, A2, A3, A4 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__2__4_3_01del_00_01void_00_01T_00_01P1_00_01P2_00_01A1_00_01A2_00_01A3_00_01A4_01_4.html">_MemberResultCallback_2_4&lt; del, void, T, P1, P2, A1, A2, A3, A4 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__2__4.html">_FunctionResultCallback_2_4&lt; del, R, P1, P2, A1, A2, A3, A4 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__2__4_3_01del_00_01void_00_01P1_00_01P2_00_01A1_00_01A2_00_01A3_00_01A4_01_4.html">_FunctionResultCallback_2_4&lt; del, void, P1, P2, A1, A2, A3, A4 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__3__4.html">_ConstMemberResultCallback_3_4&lt; del, R, T, P1, P2, P3, A1, A2, A3, A4 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__3__4_3_01del_00_01void_00_01T_00_01P1_00_01P2_00_01P3_00_01A1_00_01A2_00_01A3_00_01A4_01_4.html">_ConstMemberResultCallback_3_4&lt; del, void, T, P1, P2, P3, A1, A2, A3, A4 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__3__4.html">_MemberResultCallback_3_4&lt; del, R, T, P1, P2, P3, A1, A2, A3, A4 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__3__4_3_01del_00_01void_00_01T_00_01P1_00_01P2_00_01P3_00_01A1_00_01A2_00_01A3_00_01A4_01_4.html">_MemberResultCallback_3_4&lt; del, void, T, P1, P2, P3, A1, A2, A3, A4 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__3__4.html">_FunctionResultCallback_3_4&lt; del, R, P1, P2, P3, A1, A2, A3, A4 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__3__4_3_01del_00_01void_00_01P1_00_01P2_00_01P3_00_01A1_00_01A2_00_01A3_00_01A4_01_4.html">_FunctionResultCallback_3_4&lt; del, void, P1, P2, P3, A1, A2, A3, A4 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__4__4.html">_ConstMemberResultCallback_4_4&lt; del, R, T, P1, P2, P3, P4, A1, A2, A3, A4 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__4__4_3_01del_00_01void_00_01T_00_01P1_00_01P2_00_01P3_00_01P4_3fb01708d9ce5134bd95acd8dbc444b9.html">_ConstMemberResultCallback_4_4&lt; del, void, T, P1, P2, P3, P4, A1, A2, A3, A4 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__4__4.html">_MemberResultCallback_4_4&lt; del, R, T, P1, P2, P3, P4, A1, A2, A3, A4 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__4__4_3_01del_00_01void_00_01T_00_01P1_00_01P2_00_01P3_00_01P4_00_01A1_00_01A2_00_01A3_00_01A4_01_4.html">_MemberResultCallback_4_4&lt; del, void, T, P1, P2, P3, P4, A1, A2, A3, A4 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__4__4.html">_FunctionResultCallback_4_4&lt; del, R, P1, P2, P3, P4, A1, A2, A3, A4 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__4__4_3_01del_00_01void_00_01P1_00_01P2_00_01P3_00_01P4_00_01A1_00_01A2_00_01A3_00_01A4_01_4.html">_FunctionResultCallback_4_4&lt; del, void, P1, P2, P3, P4, A1, A2, A3, A4 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__5__4.html">_ConstMemberResultCallback_5_4&lt; del, R, T, P1, P2, P3, P4, P5, A1, A2, A3, A4 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__5__4_3_01del_00_01void_00_01T_00_01P1_00_01P2_00_01P3_00_01P4_d84c34105294856104db7054d15fe4de.html">_ConstMemberResultCallback_5_4&lt; del, void, T, P1, P2, P3, P4, P5, A1, A2, A3, A4 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__5__4.html">_MemberResultCallback_5_4&lt; del, R, T, P1, P2, P3, P4, P5, A1, A2, A3, A4 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__5__4_3_01del_00_01void_00_01T_00_01P1_00_01P2_00_01P3_00_01P4_00_016a4d0e5f4487c3dd78f2af9a6a627cb7.html">_MemberResultCallback_5_4&lt; del, void, T, P1, P2, P3, P4, P5, A1, A2, A3, A4 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__5__4.html">_FunctionResultCallback_5_4&lt; del, R, P1, P2, P3, P4, P5, A1, A2, A3, A4 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__5__4_3_01del_00_01void_00_01P1_00_01P2_00_01P3_00_01P4_00_01P5_00850ab01d6ca93a2c451a363c27f0af59.html">_FunctionResultCallback_5_4&lt; del, void, P1, P2, P3, P4, P5, A1, A2, A3, A4 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__6__4.html">_ConstMemberResultCallback_6_4&lt; del, R, T, P1, P2, P3, P4, P5, P6, A1, A2, A3, A4 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__6__4_3_01del_00_01void_00_01T_00_01P1_00_01P2_00_01P3_00_01P4_d2698337c15379cb271ec87f47f1bc4f.html">_ConstMemberResultCallback_6_4&lt; del, void, T, P1, P2, P3, P4, P5, P6, A1, A2, A3, A4 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__6__4.html">_MemberResultCallback_6_4&lt; del, R, T, P1, P2, P3, P4, P5, P6, A1, A2, A3, A4 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__6__4_3_01del_00_01void_00_01T_00_01P1_00_01P2_00_01P3_00_01P4_00_013c81b203dd787ecab7d2c461ff570e0b.html">_MemberResultCallback_6_4&lt; del, void, T, P1, P2, P3, P4, P5, P6, A1, A2, A3, A4 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__6__4.html">_FunctionResultCallback_6_4&lt; del, R, P1, P2, P3, P4, P5, P6, A1, A2, A3, A4 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__6__4_3_01del_00_01void_00_01P1_00_01P2_00_01P3_00_01P4_00_01P5_00dc7bb5d2e6366c48103e283abf443a90.html">_FunctionResultCallback_6_4&lt; del, void, P1, P2, P3, P4, P5, P6, A1, A2, A3, A4 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__0__5.html">_ConstMemberResultCallback_0_5&lt; del, R, T, A1, A2, A3, A4, A5 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__0__5_3_01del_00_01void_00_01T_00_01A1_00_01A2_00_01A3_00_01A4_00_01A5_01_4.html">_ConstMemberResultCallback_0_5&lt; del, void, T, A1, A2, A3, A4, A5 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__0__5.html">_MemberResultCallback_0_5&lt; del, R, T, A1, A2, A3, A4, A5 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__0__5_3_01del_00_01void_00_01T_00_01A1_00_01A2_00_01A3_00_01A4_00_01A5_01_4.html">_MemberResultCallback_0_5&lt; del, void, T, A1, A2, A3, A4, A5 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__0__5.html">_FunctionResultCallback_0_5&lt; del, R, A1, A2, A3, A4, A5 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__0__5_3_01del_00_01void_00_01A1_00_01A2_00_01A3_00_01A4_00_01A5_01_4.html">_FunctionResultCallback_0_5&lt; del, void, A1, A2, A3, A4, A5 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__1__5.html">_ConstMemberResultCallback_1_5&lt; del, R, T, P1, A1, A2, A3, A4, A5 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__1__5_3_01del_00_01void_00_01T_00_01P1_00_01A1_00_01A2_00_01A3_00_01A4_00_01A5_01_4.html">_ConstMemberResultCallback_1_5&lt; del, void, T, P1, A1, A2, A3, A4, A5 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__1__5.html">_MemberResultCallback_1_5&lt; del, R, T, P1, A1, A2, A3, A4, A5 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__1__5_3_01del_00_01void_00_01T_00_01P1_00_01A1_00_01A2_00_01A3_00_01A4_00_01A5_01_4.html">_MemberResultCallback_1_5&lt; del, void, T, P1, A1, A2, A3, A4, A5 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__1__5.html">_FunctionResultCallback_1_5&lt; del, R, P1, A1, A2, A3, A4, A5 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__1__5_3_01del_00_01void_00_01P1_00_01A1_00_01A2_00_01A3_00_01A4_00_01A5_01_4.html">_FunctionResultCallback_1_5&lt; del, void, P1, A1, A2, A3, A4, A5 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__2__5.html">_ConstMemberResultCallback_2_5&lt; del, R, T, P1, P2, A1, A2, A3, A4, A5 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__2__5_3_01del_00_01void_00_01T_00_01P1_00_01P2_00_01A1_00_01A2_00_01A3_00_01A4_00_01A5_01_4.html">_ConstMemberResultCallback_2_5&lt; del, void, T, P1, P2, A1, A2, A3, A4, A5 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__2__5.html">_MemberResultCallback_2_5&lt; del, R, T, P1, P2, A1, A2, A3, A4, A5 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__2__5_3_01del_00_01void_00_01T_00_01P1_00_01P2_00_01A1_00_01A2_00_01A3_00_01A4_00_01A5_01_4.html">_MemberResultCallback_2_5&lt; del, void, T, P1, P2, A1, A2, A3, A4, A5 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__2__5.html">_FunctionResultCallback_2_5&lt; del, R, P1, P2, A1, A2, A3, A4, A5 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__2__5_3_01del_00_01void_00_01P1_00_01P2_00_01A1_00_01A2_00_01A3_00_01A4_00_01A5_01_4.html">_FunctionResultCallback_2_5&lt; del, void, P1, P2, A1, A2, A3, A4, A5 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__3__5.html">_ConstMemberResultCallback_3_5&lt; del, R, T, P1, P2, P3, A1, A2, A3, A4, A5 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__3__5_3_01del_00_01void_00_01T_00_01P1_00_01P2_00_01P3_00_01A1_e31923c053ca333f5e4f63bbad95473c.html">_ConstMemberResultCallback_3_5&lt; del, void, T, P1, P2, P3, A1, A2, A3, A4, A5 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__3__5.html">_MemberResultCallback_3_5&lt; del, R, T, P1, P2, P3, A1, A2, A3, A4, A5 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__3__5_3_01del_00_01void_00_01T_00_01P1_00_01P2_00_01P3_00_01A1_00_01A2_00_01A3_00_01A4_00_01A5_01_4.html">_MemberResultCallback_3_5&lt; del, void, T, P1, P2, P3, A1, A2, A3, A4, A5 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__3__5.html">_FunctionResultCallback_3_5&lt; del, R, P1, P2, P3, A1, A2, A3, A4, A5 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__3__5_3_01del_00_01void_00_01P1_00_01P2_00_01P3_00_01A1_00_01A2_00_01A3_00_01A4_00_01A5_01_4.html">_FunctionResultCallback_3_5&lt; del, void, P1, P2, P3, A1, A2, A3, A4, A5 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__4__5.html">_ConstMemberResultCallback_4_5&lt; del, R, T, P1, P2, P3, P4, A1, A2, A3, A4, A5 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__4__5_3_01del_00_01void_00_01T_00_01P1_00_01P2_00_01P3_00_01P4_95f3d4a4b4ab00c3b1f051ff7245fbaa.html">_ConstMemberResultCallback_4_5&lt; del, void, T, P1, P2, P3, P4, A1, A2, A3, A4, A5 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__4__5.html">_MemberResultCallback_4_5&lt; del, R, T, P1, P2, P3, P4, A1, A2, A3, A4, A5 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__4__5_3_01del_00_01void_00_01T_00_01P1_00_01P2_00_01P3_00_01P4_00_01eefe357e09b84712eaf60b71b61fd60e.html">_MemberResultCallback_4_5&lt; del, void, T, P1, P2, P3, P4, A1, A2, A3, A4, A5 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__4__5.html">_FunctionResultCallback_4_5&lt; del, R, P1, P2, P3, P4, A1, A2, A3, A4, A5 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__4__5_3_01del_00_01void_00_01P1_00_01P2_00_01P3_00_01P4_00_01A1_0084dfdfcba4884b06d22a9636bd88196b.html">_FunctionResultCallback_4_5&lt; del, void, P1, P2, P3, P4, A1, A2, A3, A4, A5 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__5__5.html">_ConstMemberResultCallback_5_5&lt; del, R, T, P1, P2, P3, P4, P5, A1, A2, A3, A4, A5 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__5__5_3_01del_00_01void_00_01T_00_01P1_00_01P2_00_01P3_00_01P4_270afe1bee69348f1ea9b142a2ef4187.html">_ConstMemberResultCallback_5_5&lt; del, void, T, P1, P2, P3, P4, P5, A1, A2, A3, A4, A5 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__5__5.html">_MemberResultCallback_5_5&lt; del, R, T, P1, P2, P3, P4, P5, A1, A2, A3, A4, A5 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__5__5_3_01del_00_01void_00_01T_00_01P1_00_01P2_00_01P3_00_01P4_00_0117e6476d1cc22c54693387f865e7a00e.html">_MemberResultCallback_5_5&lt; del, void, T, P1, P2, P3, P4, P5, A1, A2, A3, A4, A5 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__5__5.html">_FunctionResultCallback_5_5&lt; del, R, P1, P2, P3, P4, P5, A1, A2, A3, A4, A5 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__5__5_3_01del_00_01void_00_01P1_00_01P2_00_01P3_00_01P4_00_01P5_00dfad4249527e42b3b680ab5e386c27b4.html">_FunctionResultCallback_5_5&lt; del, void, P1, P2, P3, P4, P5, A1, A2, A3, A4, A5 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__6__5.html">_ConstMemberResultCallback_6_5&lt; del, R, T, P1, P2, P3, P4, P5, P6, A1, A2, A3, A4, A5 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__ConstMemberResultCallback__6__5_3_01del_00_01void_00_01T_00_01P1_00_01P2_00_01P3_00_01P4_6d8f1f16afe34eba892c1e9b8c40f71a.html">_ConstMemberResultCallback_6_5&lt; del, void, T, P1, P2, P3, P4, P5, P6, A1, A2, A3, A4, A5 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__6__5.html">_MemberResultCallback_6_5&lt; del, R, T, P1, P2, P3, P4, P5, P6, A1, A2, A3, A4, A5 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__MemberResultCallback__6__5_3_01del_00_01void_00_01T_00_01P1_00_01P2_00_01P3_00_01P4_00_01b54d0da97f2e9403d3f443635f0e1068.html">_MemberResultCallback_6_5&lt; del, void, T, P1, P2, P3, P4, P5, P6, A1, A2, A3, A4, A5 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__6__5.html">_FunctionResultCallback_6_5&lt; del, R, P1, P2, P3, P4, P5, P6, A1, A2, A3, A4, A5 &gt;</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class__FunctionResultCallback__6__5_3_01del_00_01void_00_01P1_00_01P2_00_01P3_00_01P4_00_01P5_0059e51c1938ee99ed720c46752da2abd8.html">_FunctionResultCallback_6_5&lt; del, void, P1, P2, P3, P4, P5, P6, A1, A2, A3, A4, A5 &gt;</a></td></tr>

<tr><td colspan="2"><br><h2>Functions</h2></td></tr>
<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__0__0.html">_ConstMemberResultCallback_0_0</a><br>
&lt; true, R, T1 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#799bc4c709b203c1e50ee52a854df8c7">NewCallback</a> (const T1 *obj, R(T2::*member)() const)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__0__0.html">_ConstMemberResultCallback_0_0</a><br>
&lt; false, R, T1 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#51b33b1a31be64e79fe4ccd48b5d5b53">NewPermanentCallback</a> (const T1 *obj, R(T2::*member)() const)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__0__0.html">_MemberResultCallback_0_0</a><br>
&lt; true, R, T1 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#f469d23e75fd01c550904dfd0953aad8">NewCallback</a> (T1 *obj, R(T2::*member)())</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__0__0.html">_MemberResultCallback_0_0</a><br>
&lt; false, R, T1 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#9e4f78639ee766ba94105c8600a7cb40">NewPermanentCallback</a> (T1 *obj, R(T2::*member)())</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__0__0.html">_FunctionResultCallback_0_0</a><br>
&lt; true, R &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#578328280bfc6bfece7b552b9b5341c3">NewCallback</a> (R(*function)())</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__0__0.html">_FunctionResultCallback_0_0</a><br>
&lt; false, R &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#527f715d44903e5d0cb0fc094eada8af">NewPermanentCallback</a> (R(*function)())</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__1__0.html">_ConstMemberResultCallback_1_0</a><br>
&lt; true, R, T1, P1 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#4cef76127175c3cc90e05e61ed196dc8">NewCallback</a> (const T1 *obj, R(T2::*member)(P1) const, P1 p1)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__1__0.html">_ConstMemberResultCallback_1_0</a><br>
&lt; false, R, T1, P1 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#066ce1dbaa7ded0db5261cff149ccf56">NewPermanentCallback</a> (const T1 *obj, R(T2::*member)(P1) const, P1 p1)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__1__0.html">_MemberResultCallback_1_0</a><br>
&lt; true, R, T1, P1 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#363b07c51a0ad0280c9dd35b7c8d80a5">NewCallback</a> (T1 *obj, R(T2::*member)(P1), P1 p1)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__1__0.html">_MemberResultCallback_1_0</a><br>
&lt; false, R, T1, P1 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#96721a7027798fcf45889cec5cba31be">NewPermanentCallback</a> (T1 *obj, R(T2::*member)(P1), P1 p1)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__1__0.html">_FunctionResultCallback_1_0</a><br>
&lt; true, R, P1 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#c67017ca9c1aea987880dfbcdc7a240f">NewCallback</a> (R(*function)(P1), P1 p1)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__1__0.html">_FunctionResultCallback_1_0</a><br>
&lt; false, R, P1 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#92c23e9d262cdad78370cc55541ad2c7">NewPermanentCallback</a> (R(*function)(P1), P1 p1)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__2__0.html">_ConstMemberResultCallback_2_0</a><br>
&lt; true, R, T1, P1, P2 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#9a350d7d13aca9aa4e77d9176438897a">NewCallback</a> (const T1 *obj, R(T2::*member)(P1, P2) const, P1 p1, P2 p2)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__2__0.html">_ConstMemberResultCallback_2_0</a><br>
&lt; false, R, T1, P1, P2 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#05f0694b6b0913808f4986ed176d9982">NewPermanentCallback</a> (const T1 *obj, R(T2::*member)(P1, P2) const, P1 p1, P2 p2)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__2__0.html">_MemberResultCallback_2_0</a><br>
&lt; true, R, T1, P1, P2 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#5514b889c48c63218423d516f2d4b8e6">NewCallback</a> (T1 *obj, R(T2::*member)(P1, P2), P1 p1, P2 p2)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__2__0.html">_MemberResultCallback_2_0</a><br>
&lt; false, R, T1, P1, P2 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#b58dc0fb0f8beec8af03e35fd872562a">NewPermanentCallback</a> (T1 *obj, R(T2::*member)(P1, P2), P1 p1, P2 p2)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class P2&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__2__0.html">_FunctionResultCallback_2_0</a><br>
&lt; true, R, P1, P2 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#ecbb4036bf7a6f926ded6ad54bcb616a">NewCallback</a> (R(*function)(P1, P2), P1 p1, P2 p2)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class P2&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__2__0.html">_FunctionResultCallback_2_0</a><br>
&lt; false, R, P1, P2 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#c5d010f5e64df84ad625aec24a4a2e1f">NewPermanentCallback</a> (R(*function)(P1, P2), P1 p1, P2 p2)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__3__0.html">_ConstMemberResultCallback_3_0</a><br>
&lt; true, R, T1, P1, P2, P3 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#bafcf9910761047cde7ba0a0a31e834c">NewCallback</a> (const T1 *obj, R(T2::*member)(P1, P2, P3) const, P1 p1, P2 p2, P3 p3)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__3__0.html">_ConstMemberResultCallback_3_0</a><br>
&lt; false, R, T1, P1, P2, P3 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#cf2bc41676c439ade33758f94f4cf4a4">NewPermanentCallback</a> (const T1 *obj, R(T2::*member)(P1, P2, P3) const, P1 p1, P2 p2, P3 p3)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__3__0.html">_MemberResultCallback_3_0</a><br>
&lt; true, R, T1, P1, P2, P3 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#ffccbb57d0f5ec47c558c35903fbf1d8">NewCallback</a> (T1 *obj, R(T2::*member)(P1, P2, P3), P1 p1, P2 p2, P3 p3)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__3__0.html">_MemberResultCallback_3_0</a><br>
&lt; false, R, T1, P1, P2, P3 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#e2f4393c935f1b1d6595e101cafbed8e">NewPermanentCallback</a> (T1 *obj, R(T2::*member)(P1, P2, P3), P1 p1, P2 p2, P3 p3)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class P2, class P3&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__3__0.html">_FunctionResultCallback_3_0</a><br>
&lt; true, R, P1, P2, P3 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#8a286ebd6c228d28250d29d34f1ce44a">NewCallback</a> (R(*function)(P1, P2, P3), P1 p1, P2 p2, P3 p3)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class P2, class P3&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__3__0.html">_FunctionResultCallback_3_0</a><br>
&lt; false, R, P1, P2, P3 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#d562b5c86f6b2c505f885a7e8e4bcf5c">NewPermanentCallback</a> (R(*function)(P1, P2, P3), P1 p1, P2 p2, P3 p3)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__4__0.html">_ConstMemberResultCallback_4_0</a><br>
&lt; true, R, T1, P1, P2, P3, P4 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#db0fb1ff690468271e9fc0b27300fea2">NewCallback</a> (const T1 *obj, R(T2::*member)(P1, P2, P3, P4) const, P1 p1, P2 p2, P3 p3, P4 p4)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__4__0.html">_ConstMemberResultCallback_4_0</a><br>
&lt; false, R, T1, P1, P2, P3, P4 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#f5fe50d7ab11c7c730ee40ebf612faf5">NewPermanentCallback</a> (const T1 *obj, R(T2::*member)(P1, P2, P3, P4) const, P1 p1, P2 p2, P3 p3, P4 p4)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__4__0.html">_MemberResultCallback_4_0</a><br>
&lt; true, R, T1, P1, P2, P3, P4 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#9f16a0f671be5ad6642110819d9bd39b">NewCallback</a> (T1 *obj, R(T2::*member)(P1, P2, P3, P4), P1 p1, P2 p2, P3 p3, P4 p4)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__4__0.html">_MemberResultCallback_4_0</a><br>
&lt; false, R, T1, P1, P2, P3, P4 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#c66051939798bf3f9867116e8e9eca63">NewPermanentCallback</a> (T1 *obj, R(T2::*member)(P1, P2, P3, P4), P1 p1, P2 p2, P3 p3, P4 p4)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class P2, class P3, class P4&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__4__0.html">_FunctionResultCallback_4_0</a><br>
&lt; true, R, P1, P2, P3, P4 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#cce9c944fca2b1c7fad9966cf289983a">NewCallback</a> (R(*function)(P1, P2, P3, P4), P1 p1, P2 p2, P3 p3, P4 p4)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class P2, class P3, class P4&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__4__0.html">_FunctionResultCallback_4_0</a><br>
&lt; false, R, P1, P2, P3, P4 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#8df7fcdb426439614630d544e1593024">NewPermanentCallback</a> (R(*function)(P1, P2, P3, P4), P1 p1, P2 p2, P3 p3, P4 p4)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__5__0.html">_ConstMemberResultCallback_5_0</a><br>
&lt; true, R, T1, P1, P2, P3, P4, <br>
P5 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#b8cdab07e9839c558958c3485358ae35">NewCallback</a> (const T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5) const, P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__5__0.html">_ConstMemberResultCallback_5_0</a><br>
&lt; false, R, T1, P1, P2, P3, P4, <br>
P5 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#2e8444a1dff667f12f5ff648d81de48a">NewPermanentCallback</a> (const T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5) const, P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__5__0.html">_MemberResultCallback_5_0</a><br>
&lt; true, R, T1, P1, P2, P3, P4, <br>
P5 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#0869e2845d4b346048f225021546ced3">NewCallback</a> (T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__5__0.html">_MemberResultCallback_5_0</a><br>
&lt; false, R, T1, P1, P2, P3, P4, <br>
P5 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#713aff4a5507bae9b03fe11171f439d5">NewPermanentCallback</a> (T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class P2, class P3, class P4, class P5&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__5__0.html">_FunctionResultCallback_5_0</a><br>
&lt; true, R, P1, P2, P3, P4, P5 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#2de9e850b6dcacd07dc40c9433b69fad">NewCallback</a> (R(*function)(P1, P2, P3, P4, P5), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class P2, class P3, class P4, class P5&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__5__0.html">_FunctionResultCallback_5_0</a><br>
&lt; false, R, P1, P2, P3, P4, P5 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#0e93c9a8643e884df82151e19e4b6ff6">NewPermanentCallback</a> (R(*function)(P1, P2, P3, P4, P5), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class P6&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__6__0.html">_ConstMemberResultCallback_6_0</a><br>
&lt; true, R, T1, P1, P2, P3, P4, <br>
P5, P6 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#36efdc7f55572101ad6cb53677107836">NewCallback</a> (const T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, P6) const, P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class P6&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__6__0.html">_ConstMemberResultCallback_6_0</a><br>
&lt; false, R, T1, P1, P2, P3, P4, <br>
P5, P6 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#df85d392be54a7583872d4d87fcfa59a">NewPermanentCallback</a> (const T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, P6) const, P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class P6&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__6__0.html">_MemberResultCallback_6_0</a><br>
&lt; true, R, T1, P1, P2, P3, P4, <br>
P5, P6 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#52d78e42c2ea263eeff1bfe2a6813b37">NewCallback</a> (T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, P6), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class P6&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__6__0.html">_MemberResultCallback_6_0</a><br>
&lt; false, R, T1, P1, P2, P3, P4, <br>
P5, P6 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#f0e0e6a6028ce8eb57d48c65f96cdfeb">NewPermanentCallback</a> (T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, P6), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class P2, class P3, class P4, class P5, class P6&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__6__0.html">_FunctionResultCallback_6_0</a><br>
&lt; true, R, P1, P2, P3, P4, P5, <br>
P6 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#58a7b6157f43dbf16351e0aa8fc20133">NewCallback</a> (R(*function)(P1, P2, P3, P4, P5, P6), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class P2, class P3, class P4, class P5, class P6&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__6__0.html">_FunctionResultCallback_6_0</a><br>
&lt; false, R, P1, P2, P3, P4, P5, <br>
P6 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#5e368ae6868e814af3d61362f7fbfdfc">NewPermanentCallback</a> (R(*function)(P1, P2, P3, P4, P5, P6), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class A1&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__0__1.html">_ConstMemberResultCallback_0_1</a><br>
&lt; true, R, T1, A1 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#4f5942d0ad402cee3fac239fafc844a5">NewCallback</a> (const T1 *obj, R(T2::*member)(A1) const)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class A1&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__0__1.html">_ConstMemberResultCallback_0_1</a><br>
&lt; false, R, T1, A1 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#f1d0c78d9b0f85234e6275e5e0d801cc">NewPermanentCallback</a> (const T1 *obj, R(T2::*member)(A1) const)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class A1&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__0__1.html">_MemberResultCallback_0_1</a><br>
&lt; true, R, T1, A1 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#c43ec9ef0fdec307a252cb46d877b31c">NewCallback</a> (T1 *obj, R(T2::*member)(A1))</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class A1&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__0__1.html">_MemberResultCallback_0_1</a><br>
&lt; false, R, T1, A1 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#ce494826428b97c5d91dfb0a5dbd586c">NewPermanentCallback</a> (T1 *obj, R(T2::*member)(A1))</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class A1&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__0__1.html">_FunctionResultCallback_0_1</a><br>
&lt; true, R, A1 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#b9446c5b0c386af0ef37a91700f54789">NewCallback</a> (R(*function)(A1))</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class A1&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__0__1.html">_FunctionResultCallback_0_1</a><br>
&lt; false, R, A1 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#56a7d39d5ff3d372d1acbd1d82b8891d">NewPermanentCallback</a> (R(*function)(A1))</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class A1&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__1__1.html">_ConstMemberResultCallback_1_1</a><br>
&lt; true, R, T1, P1, A1 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#cd17baf2bc20418d05c6d2ce0190c2bb">NewCallback</a> (const T1 *obj, R(T2::*member)(P1, A1) const, P1 p1)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class A1&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__1__1.html">_ConstMemberResultCallback_1_1</a><br>
&lt; false, R, T1, P1, A1 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#6675aa74facb2277266c725c9757bad0">NewPermanentCallback</a> (const T1 *obj, R(T2::*member)(P1, A1) const, P1 p1)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class A1&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__1__1.html">_MemberResultCallback_1_1</a><br>
&lt; true, R, T1, P1, A1 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#9e10debeafaf7b37540da5de82999294">NewCallback</a> (T1 *obj, R(T2::*member)(P1, A1), P1 p1)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class A1&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__1__1.html">_MemberResultCallback_1_1</a><br>
&lt; false, R, T1, P1, A1 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#0102a96e6995528aacde0b4d16e4bb5f">NewPermanentCallback</a> (T1 *obj, R(T2::*member)(P1, A1), P1 p1)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class A1&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__1__1.html">_FunctionResultCallback_1_1</a><br>
&lt; true, R, P1, A1 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#2e9e7efc8da531d02a71a06fd0e836f2">NewCallback</a> (R(*function)(P1, A1), P1 p1)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class A1&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__1__1.html">_FunctionResultCallback_1_1</a><br>
&lt; false, R, P1, A1 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#15920ee8fe37fc3b0a033c9a30991526">NewPermanentCallback</a> (R(*function)(P1, A1), P1 p1)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class A1&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__2__1.html">_ConstMemberResultCallback_2_1</a><br>
&lt; true, R, T1, P1, P2, A1 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#c92e33160c65a321a4df102a4eca507d">NewCallback</a> (const T1 *obj, R(T2::*member)(P1, P2, A1) const, P1 p1, P2 p2)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class A1&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__2__1.html">_ConstMemberResultCallback_2_1</a><br>
&lt; false, R, T1, P1, P2, A1 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#7d6ddc01eaa89c7806e482019fdc8135">NewPermanentCallback</a> (const T1 *obj, R(T2::*member)(P1, P2, A1) const, P1 p1, P2 p2)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class A1&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__2__1.html">_MemberResultCallback_2_1</a><br>
&lt; true, R, T1, P1, P2, A1 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#0d02f25f64761e14c9fbb7286683430d">NewCallback</a> (T1 *obj, R(T2::*member)(P1, P2, A1), P1 p1, P2 p2)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class A1&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__2__1.html">_MemberResultCallback_2_1</a><br>
&lt; false, R, T1, P1, P2, A1 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#1ccb84cc9c1b278126ffaaf86b3db1e9">NewPermanentCallback</a> (T1 *obj, R(T2::*member)(P1, P2, A1), P1 p1, P2 p2)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class P2, class A1&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__2__1.html">_FunctionResultCallback_2_1</a><br>
&lt; true, R, P1, P2, A1 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#8434bb5b9d2c42c43304e8fbb50c9e25">NewCallback</a> (R(*function)(P1, P2, A1), P1 p1, P2 p2)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class P2, class A1&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__2__1.html">_FunctionResultCallback_2_1</a><br>
&lt; false, R, P1, P2, A1 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#ab641ceba179174d191cdc5fe926c313">NewPermanentCallback</a> (R(*function)(P1, P2, A1), P1 p1, P2 p2)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class A1&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__3__1.html">_ConstMemberResultCallback_3_1</a><br>
&lt; true, R, T1, P1, P2, P3, A1 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#8f505ba07827f2e8ac7127997bad1c70">NewCallback</a> (const T1 *obj, R(T2::*member)(P1, P2, P3, A1) const, P1 p1, P2 p2, P3 p3)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class A1&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__3__1.html">_ConstMemberResultCallback_3_1</a><br>
&lt; false, R, T1, P1, P2, P3, A1 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#e63f6ad906886534beec9cb4a65830ab">NewPermanentCallback</a> (const T1 *obj, R(T2::*member)(P1, P2, P3, A1) const, P1 p1, P2 p2, P3 p3)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class A1&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__3__1.html">_MemberResultCallback_3_1</a><br>
&lt; true, R, T1, P1, P2, P3, A1 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#2179fb81bb273a1f9b4ab1a1a4af0cb7">NewCallback</a> (T1 *obj, R(T2::*member)(P1, P2, P3, A1), P1 p1, P2 p2, P3 p3)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class A1&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__3__1.html">_MemberResultCallback_3_1</a><br>
&lt; false, R, T1, P1, P2, P3, A1 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#1fc39f19d1155035deb87b8c279fdb7b">NewPermanentCallback</a> (T1 *obj, R(T2::*member)(P1, P2, P3, A1), P1 p1, P2 p2, P3 p3)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class P2, class P3, class A1&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__3__1.html">_FunctionResultCallback_3_1</a><br>
&lt; true, R, P1, P2, P3, A1 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#abd3c9d31522d4a8a793b763fe04e494">NewCallback</a> (R(*function)(P1, P2, P3, A1), P1 p1, P2 p2, P3 p3)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class P2, class P3, class A1&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__3__1.html">_FunctionResultCallback_3_1</a><br>
&lt; false, R, P1, P2, P3, A1 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#45aaa919a222ae9bfcd75a264c1e6ecc">NewPermanentCallback</a> (R(*function)(P1, P2, P3, A1), P1 p1, P2 p2, P3 p3)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class A1&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__4__1.html">_ConstMemberResultCallback_4_1</a><br>
&lt; true, R, T1, P1, P2, P3, P4, <br>
A1 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#20f69f1d7b57efd99e155fcae331ba14">NewCallback</a> (const T1 *obj, R(T2::*member)(P1, P2, P3, P4, A1) const, P1 p1, P2 p2, P3 p3, P4 p4)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class A1&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__4__1.html">_ConstMemberResultCallback_4_1</a><br>
&lt; false, R, T1, P1, P2, P3, P4, <br>
A1 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#bcb00ebacc3d31978ff47ffcd07e6c63">NewPermanentCallback</a> (const T1 *obj, R(T2::*member)(P1, P2, P3, P4, A1) const, P1 p1, P2 p2, P3 p3, P4 p4)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class A1&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__4__1.html">_MemberResultCallback_4_1</a><br>
&lt; true, R, T1, P1, P2, P3, P4, <br>
A1 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#3662c1fe25a73036f328ea9acfa5168a">NewCallback</a> (T1 *obj, R(T2::*member)(P1, P2, P3, P4, A1), P1 p1, P2 p2, P3 p3, P4 p4)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class A1&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__4__1.html">_MemberResultCallback_4_1</a><br>
&lt; false, R, T1, P1, P2, P3, P4, <br>
A1 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#3db37b78c95139cfbb3fcae75a2efc14">NewPermanentCallback</a> (T1 *obj, R(T2::*member)(P1, P2, P3, P4, A1), P1 p1, P2 p2, P3 p3, P4 p4)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class P2, class P3, class P4, class A1&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__4__1.html">_FunctionResultCallback_4_1</a><br>
&lt; true, R, P1, P2, P3, P4, A1 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#077661fb29e1e0fe06a64d3d6daa5551">NewCallback</a> (R(*function)(P1, P2, P3, P4, A1), P1 p1, P2 p2, P3 p3, P4 p4)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class P2, class P3, class P4, class A1&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__4__1.html">_FunctionResultCallback_4_1</a><br>
&lt; false, R, P1, P2, P3, P4, A1 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#5e944ee1e6ebffa77c6b819efb0ee20d">NewPermanentCallback</a> (R(*function)(P1, P2, P3, P4, A1), P1 p1, P2 p2, P3 p3, P4 p4)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class A1&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__5__1.html">_ConstMemberResultCallback_5_1</a><br>
&lt; true, R, T1, P1, P2, P3, P4, <br>
P5, A1 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#02e505f30966b037d49a9406b70565c9">NewCallback</a> (const T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, A1) const, P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class A1&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__5__1.html">_ConstMemberResultCallback_5_1</a><br>
&lt; false, R, T1, P1, P2, P3, P4, <br>
P5, A1 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#5a49399885488beff06c8ff12c33ce39">NewPermanentCallback</a> (const T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, A1) const, P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class A1&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__5__1.html">_MemberResultCallback_5_1</a><br>
&lt; true, R, T1, P1, P2, P3, P4, <br>
P5, A1 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#7cff12d2e43c3b9ab7ba0b1715b4f003">NewCallback</a> (T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, A1), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class A1&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__5__1.html">_MemberResultCallback_5_1</a><br>
&lt; false, R, T1, P1, P2, P3, P4, <br>
P5, A1 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#cc890fe6ea40b264b9376677cd02e4ef">NewPermanentCallback</a> (T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, A1), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class P2, class P3, class P4, class P5, class A1&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__5__1.html">_FunctionResultCallback_5_1</a><br>
&lt; true, R, P1, P2, P3, P4, P5, <br>
A1 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#12f418f8e7080c39832a7dcaca8e05eb">NewCallback</a> (R(*function)(P1, P2, P3, P4, P5, A1), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class P2, class P3, class P4, class P5, class A1&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__5__1.html">_FunctionResultCallback_5_1</a><br>
&lt; false, R, P1, P2, P3, P4, P5, <br>
A1 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#69a09d604e58e3e02c35b4cb3fdd51e5">NewPermanentCallback</a> (R(*function)(P1, P2, P3, P4, P5, A1), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class P6, class A1&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__6__1.html">_ConstMemberResultCallback_6_1</a><br>
&lt; true, R, T1, P1, P2, P3, P4, <br>
P5, P6, A1 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#9941a61574a0a0fbefaf780d63c8435a">NewCallback</a> (const T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, P6, A1) const, P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class P6, class A1&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__6__1.html">_ConstMemberResultCallback_6_1</a><br>
&lt; false, R, T1, P1, P2, P3, P4, <br>
P5, P6, A1 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#ade322e050406dafb3592ddb0c7a62dc">NewPermanentCallback</a> (const T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, P6, A1) const, P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class P6, class A1&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__6__1.html">_MemberResultCallback_6_1</a><br>
&lt; true, R, T1, P1, P2, P3, P4, <br>
P5, P6, A1 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#ba908c8b40cba6258c15d25314dc6ce4">NewCallback</a> (T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, P6, A1), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class P6, class A1&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__6__1.html">_MemberResultCallback_6_1</a><br>
&lt; false, R, T1, P1, P2, P3, P4, <br>
P5, P6, A1 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#4ff1313f719c28a474cc32af597ed41a">NewPermanentCallback</a> (T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, P6, A1), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class P2, class P3, class P4, class P5, class P6, class A1&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__6__1.html">_FunctionResultCallback_6_1</a><br>
&lt; true, R, P1, P2, P3, P4, P5, <br>
P6, A1 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#cbaecfd02161d397ecfcb7054c701915">NewCallback</a> (R(*function)(P1, P2, P3, P4, P5, P6, A1), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class P2, class P3, class P4, class P5, class P6, class A1&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__6__1.html">_FunctionResultCallback_6_1</a><br>
&lt; false, R, P1, P2, P3, P4, P5, <br>
P6, A1 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#4b0582a201d1bb87faece02891bcb20a">NewPermanentCallback</a> (R(*function)(P1, P2, P3, P4, P5, P6, A1), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class A1, class A2&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__0__2.html">_ConstMemberResultCallback_0_2</a><br>
&lt; true, R, T1, A1, A2 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#5aab21d326a86fdc3384cd81c63d3809">NewCallback</a> (const T1 *obj, R(T2::*member)(A1, A2) const)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class A1, class A2&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__0__2.html">_ConstMemberResultCallback_0_2</a><br>
&lt; false, R, T1, A1, A2 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#58d97c400387097fc7c6956797be56f5">NewPermanentCallback</a> (const T1 *obj, R(T2::*member)(A1, A2) const)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class A1, class A2&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__0__2.html">_MemberResultCallback_0_2</a><br>
&lt; true, R, T1, A1, A2 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#6e4926fcd3f05138631518c83ee68318">NewCallback</a> (T1 *obj, R(T2::*member)(A1, A2))</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class A1, class A2&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__0__2.html">_MemberResultCallback_0_2</a><br>
&lt; false, R, T1, A1, A2 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#f58ce42b71c05e35abafa75d8a357a14">NewPermanentCallback</a> (T1 *obj, R(T2::*member)(A1, A2))</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class A1, class A2&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__0__2.html">_FunctionResultCallback_0_2</a><br>
&lt; true, R, A1, A2 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#ca9f7f72b88dd4196a3df3ce71eab529">NewCallback</a> (R(*function)(A1, A2))</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class A1, class A2&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__0__2.html">_FunctionResultCallback_0_2</a><br>
&lt; false, R, A1, A2 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#091b34ea1b50010eb8cb58d6e080556d">NewPermanentCallback</a> (R(*function)(A1, A2))</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class A1, class A2&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__1__2.html">_ConstMemberResultCallback_1_2</a><br>
&lt; true, R, T1, P1, A1, A2 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#0686fe1db09a184465cd0d75af5bfe8c">NewCallback</a> (const T1 *obj, R(T2::*member)(P1, A1, A2) const, P1 p1)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class A1, class A2&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__1__2.html">_ConstMemberResultCallback_1_2</a><br>
&lt; false, R, T1, P1, A1, A2 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#9ebe019211d715542e1b94b40b83b713">NewPermanentCallback</a> (const T1 *obj, R(T2::*member)(P1, A1, A2) const, P1 p1)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class A1, class A2&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__1__2.html">_MemberResultCallback_1_2</a><br>
&lt; true, R, T1, P1, A1, A2 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#3a09b30f84b250bfcecfe4c79c0cb589">NewCallback</a> (T1 *obj, R(T2::*member)(P1, A1, A2), P1 p1)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class A1, class A2&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__1__2.html">_MemberResultCallback_1_2</a><br>
&lt; false, R, T1, P1, A1, A2 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#0bba46c8d2dca66ef556093bafdfd23d">NewPermanentCallback</a> (T1 *obj, R(T2::*member)(P1, A1, A2), P1 p1)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class A1, class A2&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__1__2.html">_FunctionResultCallback_1_2</a><br>
&lt; true, R, P1, A1, A2 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#05677c69b5eb504a0ad6f577fda45161">NewCallback</a> (R(*function)(P1, A1, A2), P1 p1)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class A1, class A2&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__1__2.html">_FunctionResultCallback_1_2</a><br>
&lt; false, R, P1, A1, A2 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#9c92b266aff75fcce29302880bccc732">NewPermanentCallback</a> (R(*function)(P1, A1, A2), P1 p1)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class A1, class A2&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__2__2.html">_ConstMemberResultCallback_2_2</a><br>
&lt; true, R, T1, P1, P2, A1, A2 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#98a7e9b89eac5abcb67a4779854eee4d">NewCallback</a> (const T1 *obj, R(T2::*member)(P1, P2, A1, A2) const, P1 p1, P2 p2)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class A1, class A2&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__2__2.html">_ConstMemberResultCallback_2_2</a><br>
&lt; false, R, T1, P1, P2, A1, A2 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#9bbfe7588532dbe105d617ab7d5545fa">NewPermanentCallback</a> (const T1 *obj, R(T2::*member)(P1, P2, A1, A2) const, P1 p1, P2 p2)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class A1, class A2&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__2__2.html">_MemberResultCallback_2_2</a><br>
&lt; true, R, T1, P1, P2, A1, A2 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#6e193532dd8674c5946c9fb3a325f4cb">NewCallback</a> (T1 *obj, R(T2::*member)(P1, P2, A1, A2), P1 p1, P2 p2)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class A1, class A2&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__2__2.html">_MemberResultCallback_2_2</a><br>
&lt; false, R, T1, P1, P2, A1, A2 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#94696c7c9b61b37ee828ee1566b57acc">NewPermanentCallback</a> (T1 *obj, R(T2::*member)(P1, P2, A1, A2), P1 p1, P2 p2)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class P2, class A1, class A2&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__2__2.html">_FunctionResultCallback_2_2</a><br>
&lt; true, R, P1, P2, A1, A2 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#1b30204f23c4062946c699e377455079">NewCallback</a> (R(*function)(P1, P2, A1, A2), P1 p1, P2 p2)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class P2, class A1, class A2&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__2__2.html">_FunctionResultCallback_2_2</a><br>
&lt; false, R, P1, P2, A1, A2 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#0f0471dd898ebde0caa8b4244de292bc">NewPermanentCallback</a> (R(*function)(P1, P2, A1, A2), P1 p1, P2 p2)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class A1, class A2&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__3__2.html">_ConstMemberResultCallback_3_2</a><br>
&lt; true, R, T1, P1, P2, P3, A1, <br>
A2 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#558b4eb3073a58e18c0844c06d5867bc">NewCallback</a> (const T1 *obj, R(T2::*member)(P1, P2, P3, A1, A2) const, P1 p1, P2 p2, P3 p3)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class A1, class A2&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__3__2.html">_ConstMemberResultCallback_3_2</a><br>
&lt; false, R, T1, P1, P2, P3, A1, <br>
A2 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#438741e9127ed35d25d3a308d17d60ae">NewPermanentCallback</a> (const T1 *obj, R(T2::*member)(P1, P2, P3, A1, A2) const, P1 p1, P2 p2, P3 p3)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class A1, class A2&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__3__2.html">_MemberResultCallback_3_2</a><br>
&lt; true, R, T1, P1, P2, P3, A1, <br>
A2 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#fd44b8911f6870d7d8d3ce5a5225018f">NewCallback</a> (T1 *obj, R(T2::*member)(P1, P2, P3, A1, A2), P1 p1, P2 p2, P3 p3)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class A1, class A2&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__3__2.html">_MemberResultCallback_3_2</a><br>
&lt; false, R, T1, P1, P2, P3, A1, <br>
A2 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#d6a2d577fa544154075a535240b2ffa6">NewPermanentCallback</a> (T1 *obj, R(T2::*member)(P1, P2, P3, A1, A2), P1 p1, P2 p2, P3 p3)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class P2, class P3, class A1, class A2&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__3__2.html">_FunctionResultCallback_3_2</a><br>
&lt; true, R, P1, P2, P3, A1, A2 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#fa788b6351c3327c4273d9b2cde06de9">NewCallback</a> (R(*function)(P1, P2, P3, A1, A2), P1 p1, P2 p2, P3 p3)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class P2, class P3, class A1, class A2&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__3__2.html">_FunctionResultCallback_3_2</a><br>
&lt; false, R, P1, P2, P3, A1, A2 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#0528ab89a40fdf7986aca3ebdd624dab">NewPermanentCallback</a> (R(*function)(P1, P2, P3, A1, A2), P1 p1, P2 p2, P3 p3)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class A1, class A2&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__4__2.html">_ConstMemberResultCallback_4_2</a><br>
&lt; true, R, T1, P1, P2, P3, P4, <br>
A1, A2 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#34583137c3c62905b298a63400340abf">NewCallback</a> (const T1 *obj, R(T2::*member)(P1, P2, P3, P4, A1, A2) const, P1 p1, P2 p2, P3 p3, P4 p4)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class A1, class A2&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__4__2.html">_ConstMemberResultCallback_4_2</a><br>
&lt; false, R, T1, P1, P2, P3, P4, <br>
A1, A2 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#b843315e15bac494ea941eae7e6925df">NewPermanentCallback</a> (const T1 *obj, R(T2::*member)(P1, P2, P3, P4, A1, A2) const, P1 p1, P2 p2, P3 p3, P4 p4)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class A1, class A2&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__4__2.html">_MemberResultCallback_4_2</a><br>
&lt; true, R, T1, P1, P2, P3, P4, <br>
A1, A2 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#af8b48eeaf0fc88f2f0c73d8884f2e0d">NewCallback</a> (T1 *obj, R(T2::*member)(P1, P2, P3, P4, A1, A2), P1 p1, P2 p2, P3 p3, P4 p4)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class A1, class A2&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__4__2.html">_MemberResultCallback_4_2</a><br>
&lt; false, R, T1, P1, P2, P3, P4, <br>
A1, A2 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#047d069e13110cd5880ad8dcd8c3520b">NewPermanentCallback</a> (T1 *obj, R(T2::*member)(P1, P2, P3, P4, A1, A2), P1 p1, P2 p2, P3 p3, P4 p4)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class P2, class P3, class P4, class A1, class A2&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__4__2.html">_FunctionResultCallback_4_2</a><br>
&lt; true, R, P1, P2, P3, P4, A1, <br>
A2 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#112e7f4dd7d2d6e6df42df9d0216fdc7">NewCallback</a> (R(*function)(P1, P2, P3, P4, A1, A2), P1 p1, P2 p2, P3 p3, P4 p4)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class P2, class P3, class P4, class A1, class A2&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__4__2.html">_FunctionResultCallback_4_2</a><br>
&lt; false, R, P1, P2, P3, P4, A1, <br>
A2 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#dc770504015df05d4218ced85d29f3fe">NewPermanentCallback</a> (R(*function)(P1, P2, P3, P4, A1, A2), P1 p1, P2 p2, P3 p3, P4 p4)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class A1, class A2&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__5__2.html">_ConstMemberResultCallback_5_2</a><br>
&lt; true, R, T1, P1, P2, P3, P4, <br>
P5, A1, A2 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#fef5132855b95ceae5f3f7cf2ecc0b63">NewCallback</a> (const T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, A1, A2) const, P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class A1, class A2&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__5__2.html">_ConstMemberResultCallback_5_2</a><br>
&lt; false, R, T1, P1, P2, P3, P4, <br>
P5, A1, A2 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#325f0134bc3b9581edc8e8fcf347c5d8">NewPermanentCallback</a> (const T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, A1, A2) const, P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class A1, class A2&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__5__2.html">_MemberResultCallback_5_2</a><br>
&lt; true, R, T1, P1, P2, P3, P4, <br>
P5, A1, A2 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#e3586a372a094a44ed40b9e9d04110a9">NewCallback</a> (T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, A1, A2), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class A1, class A2&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__5__2.html">_MemberResultCallback_5_2</a><br>
&lt; false, R, T1, P1, P2, P3, P4, <br>
P5, A1, A2 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#ef69208c0f45912278a5313da29ba9bb">NewPermanentCallback</a> (T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, A1, A2), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class P2, class P3, class P4, class P5, class A1, class A2&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__5__2.html">_FunctionResultCallback_5_2</a><br>
&lt; true, R, P1, P2, P3, P4, P5, <br>
A1, A2 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#9b38ca616a575959117f9c8ee16d2472">NewCallback</a> (R(*function)(P1, P2, P3, P4, P5, A1, A2), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class P2, class P3, class P4, class P5, class A1, class A2&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__5__2.html">_FunctionResultCallback_5_2</a><br>
&lt; false, R, P1, P2, P3, P4, P5, <br>
A1, A2 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#30b7b2cc6ae33b680ff65bbf3d99d854">NewPermanentCallback</a> (R(*function)(P1, P2, P3, P4, P5, A1, A2), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class P6, class A1, class A2&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__6__2.html">_ConstMemberResultCallback_6_2</a><br>
&lt; true, R, T1, P1, P2, P3, P4, <br>
P5, P6, A1, A2 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#bddbaa6eea120f60c247478183b1cc38">NewCallback</a> (const T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, P6, A1, A2) const, P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class P6, class A1, class A2&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__6__2.html">_ConstMemberResultCallback_6_2</a><br>
&lt; false, R, T1, P1, P2, P3, P4, <br>
P5, P6, A1, A2 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#a281bfbf4d2824376f56b62cc5123d2d">NewPermanentCallback</a> (const T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, P6, A1, A2) const, P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class P6, class A1, class A2&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__6__2.html">_MemberResultCallback_6_2</a><br>
&lt; true, R, T1, P1, P2, P3, P4, <br>
P5, P6, A1, A2 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#c3460c2374ecb2babff20224ff25b88d">NewCallback</a> (T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, P6, A1, A2), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class P6, class A1, class A2&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__6__2.html">_MemberResultCallback_6_2</a><br>
&lt; false, R, T1, P1, P2, P3, P4, <br>
P5, P6, A1, A2 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#31ec1fc340c3a4d22327096c2526d6de">NewPermanentCallback</a> (T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, P6, A1, A2), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class P2, class P3, class P4, class P5, class P6, class A1, class A2&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__6__2.html">_FunctionResultCallback_6_2</a><br>
&lt; true, R, P1, P2, P3, P4, P5, <br>
P6, A1, A2 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#6908d45572b5f351e163512cbabe3dfd">NewCallback</a> (R(*function)(P1, P2, P3, P4, P5, P6, A1, A2), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class P2, class P3, class P4, class P5, class P6, class A1, class A2&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__6__2.html">_FunctionResultCallback_6_2</a><br>
&lt; false, R, P1, P2, P3, P4, P5, <br>
P6, A1, A2 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#f0cd334c25e6865f5c6f7fc5c17b7075">NewPermanentCallback</a> (R(*function)(P1, P2, P3, P4, P5, P6, A1, A2), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class A1, class A2, class A3&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__0__3.html">_ConstMemberResultCallback_0_3</a><br>
&lt; true, R, T1, A1, A2, A3 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#50b1996dd4dbb0b017d1f93919c81829">NewCallback</a> (const T1 *obj, R(T2::*member)(A1, A2, A3) const)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class A1, class A2, class A3&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__0__3.html">_ConstMemberResultCallback_0_3</a><br>
&lt; false, R, T1, A1, A2, A3 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#5293d4c84e914ca4c3a0485179570469">NewPermanentCallback</a> (const T1 *obj, R(T2::*member)(A1, A2, A3) const)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class A1, class A2, class A3&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__0__3.html">_MemberResultCallback_0_3</a><br>
&lt; true, R, T1, A1, A2, A3 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#e94c329fd62b36ddbf95641549fd608d">NewCallback</a> (T1 *obj, R(T2::*member)(A1, A2, A3))</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class A1, class A2, class A3&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__0__3.html">_MemberResultCallback_0_3</a><br>
&lt; false, R, T1, A1, A2, A3 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#b1efc893056d9dd2a125694328ed9e2b">NewPermanentCallback</a> (T1 *obj, R(T2::*member)(A1, A2, A3))</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class A1, class A2, class A3&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__0__3.html">_FunctionResultCallback_0_3</a><br>
&lt; true, R, A1, A2, A3 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#ab267ae37ded9abe5c88db1beeced616">NewCallback</a> (R(*function)(A1, A2, A3))</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class A1, class A2, class A3&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__0__3.html">_FunctionResultCallback_0_3</a><br>
&lt; false, R, A1, A2, A3 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#f8450bcae52dc3ae8287fa5c02833937">NewPermanentCallback</a> (R(*function)(A1, A2, A3))</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class A1, class A2, class A3&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__1__3.html">_ConstMemberResultCallback_1_3</a><br>
&lt; true, R, T1, P1, A1, A2, A3 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#471a9cb646befd492058a23a48aba495">NewCallback</a> (const T1 *obj, R(T2::*member)(P1, A1, A2, A3) const, P1 p1)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class A1, class A2, class A3&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__1__3.html">_ConstMemberResultCallback_1_3</a><br>
&lt; false, R, T1, P1, A1, A2, A3 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#632e640cd28e2c1470a47ee3591d2706">NewPermanentCallback</a> (const T1 *obj, R(T2::*member)(P1, A1, A2, A3) const, P1 p1)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class A1, class A2, class A3&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__1__3.html">_MemberResultCallback_1_3</a><br>
&lt; true, R, T1, P1, A1, A2, A3 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#678d39583c902d920acd0b8c86371bcf">NewCallback</a> (T1 *obj, R(T2::*member)(P1, A1, A2, A3), P1 p1)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class A1, class A2, class A3&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__1__3.html">_MemberResultCallback_1_3</a><br>
&lt; false, R, T1, P1, A1, A2, A3 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#ae3bdd4b949416e84e1ae85ceb3c0a79">NewPermanentCallback</a> (T1 *obj, R(T2::*member)(P1, A1, A2, A3), P1 p1)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class A1, class A2, class A3&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__1__3.html">_FunctionResultCallback_1_3</a><br>
&lt; true, R, P1, A1, A2, A3 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#7936348fa763ac9f5f1877734549909d">NewCallback</a> (R(*function)(P1, A1, A2, A3), P1 p1)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class A1, class A2, class A3&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__1__3.html">_FunctionResultCallback_1_3</a><br>
&lt; false, R, P1, A1, A2, A3 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#4caea93c99cd6e101047b6d540bda8c8">NewPermanentCallback</a> (R(*function)(P1, A1, A2, A3), P1 p1)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class A1, class A2, class A3&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__2__3.html">_ConstMemberResultCallback_2_3</a><br>
&lt; true, R, T1, P1, P2, A1, A2, <br>
A3 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#85811c3dbce87f227d55b4b1c2095904">NewCallback</a> (const T1 *obj, R(T2::*member)(P1, P2, A1, A2, A3) const, P1 p1, P2 p2)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class A1, class A2, class A3&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__2__3.html">_ConstMemberResultCallback_2_3</a><br>
&lt; false, R, T1, P1, P2, A1, A2, <br>
A3 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#7dff0d2e5ba6aa7149c2dce06b1b9c6a">NewPermanentCallback</a> (const T1 *obj, R(T2::*member)(P1, P2, A1, A2, A3) const, P1 p1, P2 p2)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class A1, class A2, class A3&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__2__3.html">_MemberResultCallback_2_3</a><br>
&lt; true, R, T1, P1, P2, A1, A2, <br>
A3 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#678a3a490f69eb205cc438c50d466bfd">NewCallback</a> (T1 *obj, R(T2::*member)(P1, P2, A1, A2, A3), P1 p1, P2 p2)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class A1, class A2, class A3&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__2__3.html">_MemberResultCallback_2_3</a><br>
&lt; false, R, T1, P1, P2, A1, A2, <br>
A3 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#8c77947f457a51664a739fa5fea2c0a3">NewPermanentCallback</a> (T1 *obj, R(T2::*member)(P1, P2, A1, A2, A3), P1 p1, P2 p2)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class P2, class A1, class A2, class A3&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__2__3.html">_FunctionResultCallback_2_3</a><br>
&lt; true, R, P1, P2, A1, A2, A3 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#705eeb7b9e4a8e7514e9b3d1331cf469">NewCallback</a> (R(*function)(P1, P2, A1, A2, A3), P1 p1, P2 p2)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class P2, class A1, class A2, class A3&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__2__3.html">_FunctionResultCallback_2_3</a><br>
&lt; false, R, P1, P2, A1, A2, A3 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#9b329bf1d96c87665d1a2fa7fede9c33">NewPermanentCallback</a> (R(*function)(P1, P2, A1, A2, A3), P1 p1, P2 p2)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class A1, class A2, class A3&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__3__3.html">_ConstMemberResultCallback_3_3</a><br>
&lt; true, R, T1, P1, P2, P3, A1, <br>
A2, A3 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#b21d1fcf5181e33637cdb5393935694e">NewCallback</a> (const T1 *obj, R(T2::*member)(P1, P2, P3, A1, A2, A3) const, P1 p1, P2 p2, P3 p3)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class A1, class A2, class A3&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__3__3.html">_ConstMemberResultCallback_3_3</a><br>
&lt; false, R, T1, P1, P2, P3, A1, <br>
A2, A3 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#0c1009cfd7660accb1d88f3632d2ad27">NewPermanentCallback</a> (const T1 *obj, R(T2::*member)(P1, P2, P3, A1, A2, A3) const, P1 p1, P2 p2, P3 p3)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class A1, class A2, class A3&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__3__3.html">_MemberResultCallback_3_3</a><br>
&lt; true, R, T1, P1, P2, P3, A1, <br>
A2, A3 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#79e58dd5d58a3248361f063a8604e2ce">NewCallback</a> (T1 *obj, R(T2::*member)(P1, P2, P3, A1, A2, A3), P1 p1, P2 p2, P3 p3)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class A1, class A2, class A3&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__3__3.html">_MemberResultCallback_3_3</a><br>
&lt; false, R, T1, P1, P2, P3, A1, <br>
A2, A3 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#cd6e88d25c281cca9218037a93467fe2">NewPermanentCallback</a> (T1 *obj, R(T2::*member)(P1, P2, P3, A1, A2, A3), P1 p1, P2 p2, P3 p3)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class P2, class P3, class A1, class A2, class A3&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__3__3.html">_FunctionResultCallback_3_3</a><br>
&lt; true, R, P1, P2, P3, A1, A2, <br>
A3 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#c658fce0affbb609bc30781603375f28">NewCallback</a> (R(*function)(P1, P2, P3, A1, A2, A3), P1 p1, P2 p2, P3 p3)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class P2, class P3, class A1, class A2, class A3&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__3__3.html">_FunctionResultCallback_3_3</a><br>
&lt; false, R, P1, P2, P3, A1, A2, <br>
A3 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#c67919d9994b56a7c293d0cf52fbf156">NewPermanentCallback</a> (R(*function)(P1, P2, P3, A1, A2, A3), P1 p1, P2 p2, P3 p3)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class A1, class A2, class A3&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__4__3.html">_ConstMemberResultCallback_4_3</a><br>
&lt; true, R, T1, P1, P2, P3, P4, <br>
A1, A2, A3 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#f63d0abcadd13cd52a8d2621df4d66c6">NewCallback</a> (const T1 *obj, R(T2::*member)(P1, P2, P3, P4, A1, A2, A3) const, P1 p1, P2 p2, P3 p3, P4 p4)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class A1, class A2, class A3&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__4__3.html">_ConstMemberResultCallback_4_3</a><br>
&lt; false, R, T1, P1, P2, P3, P4, <br>
A1, A2, A3 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#8aeab468f44aec70e7ca2f84f793f0fa">NewPermanentCallback</a> (const T1 *obj, R(T2::*member)(P1, P2, P3, P4, A1, A2, A3) const, P1 p1, P2 p2, P3 p3, P4 p4)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class A1, class A2, class A3&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__4__3.html">_MemberResultCallback_4_3</a><br>
&lt; true, R, T1, P1, P2, P3, P4, <br>
A1, A2, A3 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#d3442f9728158f4cd40f005c7d8fe0d7">NewCallback</a> (T1 *obj, R(T2::*member)(P1, P2, P3, P4, A1, A2, A3), P1 p1, P2 p2, P3 p3, P4 p4)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class A1, class A2, class A3&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__4__3.html">_MemberResultCallback_4_3</a><br>
&lt; false, R, T1, P1, P2, P3, P4, <br>
A1, A2, A3 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#e5476ebd002489dd3bde155373dd22b0">NewPermanentCallback</a> (T1 *obj, R(T2::*member)(P1, P2, P3, P4, A1, A2, A3), P1 p1, P2 p2, P3 p3, P4 p4)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class P2, class P3, class P4, class A1, class A2, class A3&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__4__3.html">_FunctionResultCallback_4_3</a><br>
&lt; true, R, P1, P2, P3, P4, A1, <br>
A2, A3 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#41c179de1911cdfd0c14f93a64313d25">NewCallback</a> (R(*function)(P1, P2, P3, P4, A1, A2, A3), P1 p1, P2 p2, P3 p3, P4 p4)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class P2, class P3, class P4, class A1, class A2, class A3&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__4__3.html">_FunctionResultCallback_4_3</a><br>
&lt; false, R, P1, P2, P3, P4, A1, <br>
A2, A3 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#4a11679a145909531babd905f3c8748f">NewPermanentCallback</a> (R(*function)(P1, P2, P3, P4, A1, A2, A3), P1 p1, P2 p2, P3 p3, P4 p4)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class A1, class A2, class A3&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__5__3.html">_ConstMemberResultCallback_5_3</a><br>
&lt; true, R, T1, P1, P2, P3, P4, <br>
P5, A1, A2, A3 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#a43f5eb9079d8b472bdd6c5592d848c7">NewCallback</a> (const T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, A1, A2, A3) const, P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class A1, class A2, class A3&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__5__3.html">_ConstMemberResultCallback_5_3</a><br>
&lt; false, R, T1, P1, P2, P3, P4, <br>
P5, A1, A2, A3 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#8f5cc1df0575f193bea637ad84e0357d">NewPermanentCallback</a> (const T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, A1, A2, A3) const, P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class A1, class A2, class A3&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__5__3.html">_MemberResultCallback_5_3</a><br>
&lt; true, R, T1, P1, P2, P3, P4, <br>
P5, A1, A2, A3 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#fd3887aad4e218697b5b9f9fba02f2ab">NewCallback</a> (T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, A1, A2, A3), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class A1, class A2, class A3&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__5__3.html">_MemberResultCallback_5_3</a><br>
&lt; false, R, T1, P1, P2, P3, P4, <br>
P5, A1, A2, A3 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#b3adf079fcc4e7a067a82d24a7c248b3">NewPermanentCallback</a> (T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, A1, A2, A3), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class P2, class P3, class P4, class P5, class A1, class A2, class A3&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__5__3.html">_FunctionResultCallback_5_3</a><br>
&lt; true, R, P1, P2, P3, P4, P5, <br>
A1, A2, A3 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#29129d88f0c7657dfd7744cc1eb0e6a9">NewCallback</a> (R(*function)(P1, P2, P3, P4, P5, A1, A2, A3), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class P2, class P3, class P4, class P5, class A1, class A2, class A3&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__5__3.html">_FunctionResultCallback_5_3</a><br>
&lt; false, R, P1, P2, P3, P4, P5, <br>
A1, A2, A3 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#edab4dbbf608b3ef12d02205fc8eb236">NewPermanentCallback</a> (R(*function)(P1, P2, P3, P4, P5, A1, A2, A3), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class P6, class A1, class A2, class A3&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__6__3.html">_ConstMemberResultCallback_6_3</a><br>
&lt; true, R, T1, P1, P2, P3, P4, <br>
P5, P6, A1, A2, A3 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#5b31282476a7354906e7af8072d640d2">NewCallback</a> (const T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, P6, A1, A2, A3) const, P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class P6, class A1, class A2, class A3&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__6__3.html">_ConstMemberResultCallback_6_3</a><br>
&lt; false, R, T1, P1, P2, P3, P4, <br>
P5, P6, A1, A2, A3 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#ba4baf7fc5f5dd476e870ce7171a040a">NewPermanentCallback</a> (const T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, P6, A1, A2, A3) const, P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class P6, class A1, class A2, class A3&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__6__3.html">_MemberResultCallback_6_3</a><br>
&lt; true, R, T1, P1, P2, P3, P4, <br>
P5, P6, A1, A2, A3 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#8c9de8f460f7082d006406a9a8e1ff23">NewCallback</a> (T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, P6, A1, A2, A3), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class P6, class A1, class A2, class A3&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__6__3.html">_MemberResultCallback_6_3</a><br>
&lt; false, R, T1, P1, P2, P3, P4, <br>
P5, P6, A1, A2, A3 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#391af2d130090c784e39a5021c77747f">NewPermanentCallback</a> (T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, P6, A1, A2, A3), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class P2, class P3, class P4, class P5, class P6, class A1, class A2, class A3&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__6__3.html">_FunctionResultCallback_6_3</a><br>
&lt; true, R, P1, P2, P3, P4, P5, <br>
P6, A1, A2, A3 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#8333c6df3a1f553f430fa0b08de0acc3">NewCallback</a> (R(*function)(P1, P2, P3, P4, P5, P6, A1, A2, A3), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class P2, class P3, class P4, class P5, class P6, class A1, class A2, class A3&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__6__3.html">_FunctionResultCallback_6_3</a><br>
&lt; false, R, P1, P2, P3, P4, P5, <br>
P6, A1, A2, A3 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#8b7aee3041d458badd2506070de616c9">NewPermanentCallback</a> (R(*function)(P1, P2, P3, P4, P5, P6, A1, A2, A3), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class A1, class A2, class A3, class A4&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__0__4.html">_ConstMemberResultCallback_0_4</a><br>
&lt; true, R, T1, A1, A2, A3, A4 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#38164be8415c6c627cf06b87995612f8">NewCallback</a> (const T1 *obj, R(T2::*member)(A1, A2, A3, A4) const)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class A1, class A2, class A3, class A4&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__0__4.html">_ConstMemberResultCallback_0_4</a><br>
&lt; false, R, T1, A1, A2, A3, A4 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#0c41f4e5518ce9025fb624d401e5c67c">NewPermanentCallback</a> (const T1 *obj, R(T2::*member)(A1, A2, A3, A4) const)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class A1, class A2, class A3, class A4&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__0__4.html">_MemberResultCallback_0_4</a><br>
&lt; true, R, T1, A1, A2, A3, A4 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#d6087b8fa630b86c41a3e146eff5ca8c">NewCallback</a> (T1 *obj, R(T2::*member)(A1, A2, A3, A4))</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class A1, class A2, class A3, class A4&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__0__4.html">_MemberResultCallback_0_4</a><br>
&lt; false, R, T1, A1, A2, A3, A4 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#dc841d5ae55b6da983177b95e377d5ee">NewPermanentCallback</a> (T1 *obj, R(T2::*member)(A1, A2, A3, A4))</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class A1, class A2, class A3, class A4&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__0__4.html">_FunctionResultCallback_0_4</a><br>
&lt; true, R, A1, A2, A3, A4 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#beb0a92a9ace362a81332d214b7c4b68">NewCallback</a> (R(*function)(A1, A2, A3, A4))</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class A1, class A2, class A3, class A4&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__0__4.html">_FunctionResultCallback_0_4</a><br>
&lt; false, R, A1, A2, A3, A4 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#4c30b5d7385fa252f3c601f7b8082135">NewPermanentCallback</a> (R(*function)(A1, A2, A3, A4))</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class A1, class A2, class A3, class A4&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__1__4.html">_ConstMemberResultCallback_1_4</a><br>
&lt; true, R, T1, P1, A1, A2, A3, <br>
A4 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#c0c249cc1fbfa82423c7b759d25e3060">NewCallback</a> (const T1 *obj, R(T2::*member)(P1, A1, A2, A3, A4) const, P1 p1)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class A1, class A2, class A3, class A4&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__1__4.html">_ConstMemberResultCallback_1_4</a><br>
&lt; false, R, T1, P1, A1, A2, A3, <br>
A4 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#bf07ad985b2c30a2bd53edf2e8bbea84">NewPermanentCallback</a> (const T1 *obj, R(T2::*member)(P1, A1, A2, A3, A4) const, P1 p1)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class A1, class A2, class A3, class A4&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__1__4.html">_MemberResultCallback_1_4</a><br>
&lt; true, R, T1, P1, A1, A2, A3, <br>
A4 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#597a99b06147b5009f96a5bcb163b4ef">NewCallback</a> (T1 *obj, R(T2::*member)(P1, A1, A2, A3, A4), P1 p1)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class A1, class A2, class A3, class A4&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__1__4.html">_MemberResultCallback_1_4</a><br>
&lt; false, R, T1, P1, A1, A2, A3, <br>
A4 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#bd3028f0747b7245eb132521cd603334">NewPermanentCallback</a> (T1 *obj, R(T2::*member)(P1, A1, A2, A3, A4), P1 p1)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class A1, class A2, class A3, class A4&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__1__4.html">_FunctionResultCallback_1_4</a><br>
&lt; true, R, P1, A1, A2, A3, A4 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#ecd9f1963d0fc9cebd077d5654110695">NewCallback</a> (R(*function)(P1, A1, A2, A3, A4), P1 p1)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class A1, class A2, class A3, class A4&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__1__4.html">_FunctionResultCallback_1_4</a><br>
&lt; false, R, P1, A1, A2, A3, A4 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#ea59712123f641862092b0cef77383a6">NewPermanentCallback</a> (R(*function)(P1, A1, A2, A3, A4), P1 p1)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class A1, class A2, class A3, class A4&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__2__4.html">_ConstMemberResultCallback_2_4</a><br>
&lt; true, R, T1, P1, P2, A1, A2, <br>
A3, A4 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#0d719699f2454e1e151e864aa2a3e199">NewCallback</a> (const T1 *obj, R(T2::*member)(P1, P2, A1, A2, A3, A4) const, P1 p1, P2 p2)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class A1, class A2, class A3, class A4&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__2__4.html">_ConstMemberResultCallback_2_4</a><br>
&lt; false, R, T1, P1, P2, A1, A2, <br>
A3, A4 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#ce55f3ad7844e3fe6ebb66a3da6a5134">NewPermanentCallback</a> (const T1 *obj, R(T2::*member)(P1, P2, A1, A2, A3, A4) const, P1 p1, P2 p2)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class A1, class A2, class A3, class A4&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__2__4.html">_MemberResultCallback_2_4</a><br>
&lt; true, R, T1, P1, P2, A1, A2, <br>
A3, A4 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#a2ca04bc5200db8fef94dbcfd09b0218">NewCallback</a> (T1 *obj, R(T2::*member)(P1, P2, A1, A2, A3, A4), P1 p1, P2 p2)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class A1, class A2, class A3, class A4&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__2__4.html">_MemberResultCallback_2_4</a><br>
&lt; false, R, T1, P1, P2, A1, A2, <br>
A3, A4 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#88e1e6d6e278a7bd7b147ad7e5afb4b9">NewPermanentCallback</a> (T1 *obj, R(T2::*member)(P1, P2, A1, A2, A3, A4), P1 p1, P2 p2)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class P2, class A1, class A2, class A3, class A4&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__2__4.html">_FunctionResultCallback_2_4</a><br>
&lt; true, R, P1, P2, A1, A2, A3, <br>
A4 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#4a0dd518a6367b2ec1460a479c429184">NewCallback</a> (R(*function)(P1, P2, A1, A2, A3, A4), P1 p1, P2 p2)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class P2, class A1, class A2, class A3, class A4&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__2__4.html">_FunctionResultCallback_2_4</a><br>
&lt; false, R, P1, P2, A1, A2, A3, <br>
A4 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#7f881d0b8c6142477d5f3e853e86e951">NewPermanentCallback</a> (R(*function)(P1, P2, A1, A2, A3, A4), P1 p1, P2 p2)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class A1, class A2, class A3, class A4&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__3__4.html">_ConstMemberResultCallback_3_4</a><br>
&lt; true, R, T1, P1, P2, P3, A1, <br>
A2, A3, A4 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#1cd04920b5e8322d6464c997f5cc3816">NewCallback</a> (const T1 *obj, R(T2::*member)(P1, P2, P3, A1, A2, A3, A4) const, P1 p1, P2 p2, P3 p3)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class A1, class A2, class A3, class A4&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__3__4.html">_ConstMemberResultCallback_3_4</a><br>
&lt; false, R, T1, P1, P2, P3, A1, <br>
A2, A3, A4 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#2f4c603211e51649766b95f89c0644bc">NewPermanentCallback</a> (const T1 *obj, R(T2::*member)(P1, P2, P3, A1, A2, A3, A4) const, P1 p1, P2 p2, P3 p3)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class A1, class A2, class A3, class A4&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__3__4.html">_MemberResultCallback_3_4</a><br>
&lt; true, R, T1, P1, P2, P3, A1, <br>
A2, A3, A4 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#5bf7554d1aee43b47c5eb935b31cc000">NewCallback</a> (T1 *obj, R(T2::*member)(P1, P2, P3, A1, A2, A3, A4), P1 p1, P2 p2, P3 p3)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class A1, class A2, class A3, class A4&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__3__4.html">_MemberResultCallback_3_4</a><br>
&lt; false, R, T1, P1, P2, P3, A1, <br>
A2, A3, A4 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#880b8a4e31e185bed5f9456cc90e5b31">NewPermanentCallback</a> (T1 *obj, R(T2::*member)(P1, P2, P3, A1, A2, A3, A4), P1 p1, P2 p2, P3 p3)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class P2, class P3, class A1, class A2, class A3, class A4&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__3__4.html">_FunctionResultCallback_3_4</a><br>
&lt; true, R, P1, P2, P3, A1, A2, <br>
A3, A4 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#68dd9c36c6401d2d237324cc6b583bca">NewCallback</a> (R(*function)(P1, P2, P3, A1, A2, A3, A4), P1 p1, P2 p2, P3 p3)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class P2, class P3, class A1, class A2, class A3, class A4&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__3__4.html">_FunctionResultCallback_3_4</a><br>
&lt; false, R, P1, P2, P3, A1, A2, <br>
A3, A4 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#1ad94b2697e14d3e8669f255167d5af6">NewPermanentCallback</a> (R(*function)(P1, P2, P3, A1, A2, A3, A4), P1 p1, P2 p2, P3 p3)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class A1, class A2, class A3, class A4&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__4__4.html">_ConstMemberResultCallback_4_4</a><br>
&lt; true, R, T1, P1, P2, P3, P4, <br>
A1, A2, A3, A4 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#10e473c2ea1fe7e853d4d54929546624">NewCallback</a> (const T1 *obj, R(T2::*member)(P1, P2, P3, P4, A1, A2, A3, A4) const, P1 p1, P2 p2, P3 p3, P4 p4)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class A1, class A2, class A3, class A4&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__4__4.html">_ConstMemberResultCallback_4_4</a><br>
&lt; false, R, T1, P1, P2, P3, P4, <br>
A1, A2, A3, A4 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#4fb061ba07367299c4418eafd80231aa">NewPermanentCallback</a> (const T1 *obj, R(T2::*member)(P1, P2, P3, P4, A1, A2, A3, A4) const, P1 p1, P2 p2, P3 p3, P4 p4)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class A1, class A2, class A3, class A4&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__4__4.html">_MemberResultCallback_4_4</a><br>
&lt; true, R, T1, P1, P2, P3, P4, <br>
A1, A2, A3, A4 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#4fd66d217d8efdf05a7499bff78583fd">NewCallback</a> (T1 *obj, R(T2::*member)(P1, P2, P3, P4, A1, A2, A3, A4), P1 p1, P2 p2, P3 p3, P4 p4)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class A1, class A2, class A3, class A4&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__4__4.html">_MemberResultCallback_4_4</a><br>
&lt; false, R, T1, P1, P2, P3, P4, <br>
A1, A2, A3, A4 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#9feb43abbcae4fa2be7efe336034e147">NewPermanentCallback</a> (T1 *obj, R(T2::*member)(P1, P2, P3, P4, A1, A2, A3, A4), P1 p1, P2 p2, P3 p3, P4 p4)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class P2, class P3, class P4, class A1, class A2, class A3, class A4&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__4__4.html">_FunctionResultCallback_4_4</a><br>
&lt; true, R, P1, P2, P3, P4, A1, <br>
A2, A3, A4 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#b18173b23d8888c99b2643697c8cbee1">NewCallback</a> (R(*function)(P1, P2, P3, P4, A1, A2, A3, A4), P1 p1, P2 p2, P3 p3, P4 p4)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class P2, class P3, class P4, class A1, class A2, class A3, class A4&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__4__4.html">_FunctionResultCallback_4_4</a><br>
&lt; false, R, P1, P2, P3, P4, A1, <br>
A2, A3, A4 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#a895032093a8b9481a5fc464026b2bcb">NewPermanentCallback</a> (R(*function)(P1, P2, P3, P4, A1, A2, A3, A4), P1 p1, P2 p2, P3 p3, P4 p4)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class A1, class A2, class A3, class A4&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__5__4.html">_ConstMemberResultCallback_5_4</a><br>
&lt; true, R, T1, P1, P2, P3, P4, <br>
P5, A1, A2, A3, A4 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#35d58533923e6e565413e98fddbb0e2c">NewCallback</a> (const T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, A1, A2, A3, A4) const, P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class A1, class A2, class A3, class A4&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__5__4.html">_ConstMemberResultCallback_5_4</a><br>
&lt; false, R, T1, P1, P2, P3, P4, <br>
P5, A1, A2, A3, A4 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#474d97e1db05f40aeaff13614a888074">NewPermanentCallback</a> (const T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, A1, A2, A3, A4) const, P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class A1, class A2, class A3, class A4&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__5__4.html">_MemberResultCallback_5_4</a><br>
&lt; true, R, T1, P1, P2, P3, P4, <br>
P5, A1, A2, A3, A4 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#70dec0c193d99517e93c83b78dc80aab">NewCallback</a> (T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, A1, A2, A3, A4), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class A1, class A2, class A3, class A4&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__5__4.html">_MemberResultCallback_5_4</a><br>
&lt; false, R, T1, P1, P2, P3, P4, <br>
P5, A1, A2, A3, A4 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#b8013e7ce114e02e6293a28238d64ede">NewPermanentCallback</a> (T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, A1, A2, A3, A4), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class P2, class P3, class P4, class P5, class A1, class A2, class A3, class A4&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__5__4.html">_FunctionResultCallback_5_4</a><br>
&lt; true, R, P1, P2, P3, P4, P5, <br>
A1, A2, A3, A4 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#cdce60935d2fbd7f7757bfc5f876b544">NewCallback</a> (R(*function)(P1, P2, P3, P4, P5, A1, A2, A3, A4), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class P2, class P3, class P4, class P5, class A1, class A2, class A3, class A4&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__5__4.html">_FunctionResultCallback_5_4</a><br>
&lt; false, R, P1, P2, P3, P4, P5, <br>
A1, A2, A3, A4 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#2adde477c0161ef4f85168a01da26f53">NewPermanentCallback</a> (R(*function)(P1, P2, P3, P4, P5, A1, A2, A3, A4), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class P6, class A1, class A2, class A3, class A4&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__6__4.html">_ConstMemberResultCallback_6_4</a><br>
&lt; true, R, T1, P1, P2, P3, P4, <br>
P5, P6, A1, A2, A3, A4 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#b8aba666f01090a388562b416e0b484b">NewCallback</a> (const T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, P6, A1, A2, A3, A4) const, P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class P6, class A1, class A2, class A3, class A4&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__6__4.html">_ConstMemberResultCallback_6_4</a><br>
&lt; false, R, T1, P1, P2, P3, P4, <br>
P5, P6, A1, A2, A3, A4 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#0adca8963f7e9cb407babadb53f1a146">NewPermanentCallback</a> (const T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, P6, A1, A2, A3, A4) const, P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class P6, class A1, class A2, class A3, class A4&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__6__4.html">_MemberResultCallback_6_4</a><br>
&lt; true, R, T1, P1, P2, P3, P4, <br>
P5, P6, A1, A2, A3, A4 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#be0ccd9860d75270ff4b639c4559659f">NewCallback</a> (T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, P6, A1, A2, A3, A4), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class P6, class A1, class A2, class A3, class A4&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__6__4.html">_MemberResultCallback_6_4</a><br>
&lt; false, R, T1, P1, P2, P3, P4, <br>
P5, P6, A1, A2, A3, A4 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#06613d8201d46d233e2508ad2a262980">NewPermanentCallback</a> (T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, P6, A1, A2, A3, A4), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class P2, class P3, class P4, class P5, class P6, class A1, class A2, class A3, class A4&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__6__4.html">_FunctionResultCallback_6_4</a><br>
&lt; true, R, P1, P2, P3, P4, P5, <br>
P6, A1, A2, A3, A4 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#dc9c10a06a62748f697d3b883a07c562">NewCallback</a> (R(*function)(P1, P2, P3, P4, P5, P6, A1, A2, A3, A4), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class P2, class P3, class P4, class P5, class P6, class A1, class A2, class A3, class A4&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__6__4.html">_FunctionResultCallback_6_4</a><br>
&lt; false, R, P1, P2, P3, P4, P5, <br>
P6, A1, A2, A3, A4 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#5a5fb97eca72af50e72a05049778242c">NewPermanentCallback</a> (R(*function)(P1, P2, P3, P4, P5, P6, A1, A2, A3, A4), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class A1, class A2, class A3, class A4, class A5&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__0__5.html">_ConstMemberResultCallback_0_5</a><br>
&lt; true, R, T1, A1, A2, A3, A4, <br>
A5 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#b9e002ee277ac58bfcf333fd6a347164">NewCallback</a> (const T1 *obj, R(T2::*member)(A1, A2, A3, A4, A5) const)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class A1, class A2, class A3, class A4, class A5&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__0__5.html">_ConstMemberResultCallback_0_5</a><br>
&lt; false, R, T1, A1, A2, A3, A4, <br>
A5 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#1c3264965bac736173ab389556fc87f1">NewPermanentCallback</a> (const T1 *obj, R(T2::*member)(A1, A2, A3, A4, A5) const)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class A1, class A2, class A3, class A4, class A5&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__0__5.html">_MemberResultCallback_0_5</a><br>
&lt; true, R, T1, A1, A2, A3, A4, <br>
A5 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#36fee18864990baab63228fc4a658f96">NewCallback</a> (T1 *obj, R(T2::*member)(A1, A2, A3, A4, A5))</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class A1, class A2, class A3, class A4, class A5&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__0__5.html">_MemberResultCallback_0_5</a><br>
&lt; false, R, T1, A1, A2, A3, A4, <br>
A5 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#0b82bdba0a8c8cdb6d30cd7e8bab30f5">NewPermanentCallback</a> (T1 *obj, R(T2::*member)(A1, A2, A3, A4, A5))</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class A1, class A2, class A3, class A4, class A5&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__0__5.html">_FunctionResultCallback_0_5</a><br>
&lt; true, R, A1, A2, A3, A4, A5 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#0de9ba8fda34d46d67a8b6dabf117131">NewCallback</a> (R(*function)(A1, A2, A3, A4, A5))</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class A1, class A2, class A3, class A4, class A5&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__0__5.html">_FunctionResultCallback_0_5</a><br>
&lt; false, R, A1, A2, A3, A4, A5 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#dabf863e553723aae69c66435fa7118e">NewPermanentCallback</a> (R(*function)(A1, A2, A3, A4, A5))</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class A1, class A2, class A3, class A4, class A5&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__1__5.html">_ConstMemberResultCallback_1_5</a><br>
&lt; true, R, T1, P1, A1, A2, A3, <br>
A4, A5 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#d392cc692228a0e74dede7ee984a1366">NewCallback</a> (const T1 *obj, R(T2::*member)(P1, A1, A2, A3, A4, A5) const, P1 p1)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class A1, class A2, class A3, class A4, class A5&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__1__5.html">_ConstMemberResultCallback_1_5</a><br>
&lt; false, R, T1, P1, A1, A2, A3, <br>
A4, A5 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#80bb728a86f4a34b756a6c90b898e617">NewPermanentCallback</a> (const T1 *obj, R(T2::*member)(P1, A1, A2, A3, A4, A5) const, P1 p1)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class A1, class A2, class A3, class A4, class A5&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__1__5.html">_MemberResultCallback_1_5</a><br>
&lt; true, R, T1, P1, A1, A2, A3, <br>
A4, A5 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#6b844cc4d5528b810878aa6c43e3dc1f">NewCallback</a> (T1 *obj, R(T2::*member)(P1, A1, A2, A3, A4, A5), P1 p1)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class A1, class A2, class A3, class A4, class A5&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__1__5.html">_MemberResultCallback_1_5</a><br>
&lt; false, R, T1, P1, A1, A2, A3, <br>
A4, A5 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#f2247d16f22f2eaba4e455c61464f716">NewPermanentCallback</a> (T1 *obj, R(T2::*member)(P1, A1, A2, A3, A4, A5), P1 p1)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class A1, class A2, class A3, class A4, class A5&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__1__5.html">_FunctionResultCallback_1_5</a><br>
&lt; true, R, P1, A1, A2, A3, A4, <br>
A5 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#38b6764089ffffb4d4e5d476b85d589c">NewCallback</a> (R(*function)(P1, A1, A2, A3, A4, A5), P1 p1)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class A1, class A2, class A3, class A4, class A5&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__1__5.html">_FunctionResultCallback_1_5</a><br>
&lt; false, R, P1, A1, A2, A3, A4, <br>
A5 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#65a011480087b10d392fbdf081506808">NewPermanentCallback</a> (R(*function)(P1, A1, A2, A3, A4, A5), P1 p1)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class A1, class A2, class A3, class A4, class A5&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__2__5.html">_ConstMemberResultCallback_2_5</a><br>
&lt; true, R, T1, P1, P2, A1, A2, <br>
A3, A4, A5 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#120cc998fb98faed5abcea65f8028a45">NewCallback</a> (const T1 *obj, R(T2::*member)(P1, P2, A1, A2, A3, A4, A5) const, P1 p1, P2 p2)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class A1, class A2, class A3, class A4, class A5&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__2__5.html">_ConstMemberResultCallback_2_5</a><br>
&lt; false, R, T1, P1, P2, A1, A2, <br>
A3, A4, A5 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#776a27ab81754fd64f524622b9dfab0a">NewPermanentCallback</a> (const T1 *obj, R(T2::*member)(P1, P2, A1, A2, A3, A4, A5) const, P1 p1, P2 p2)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class A1, class A2, class A3, class A4, class A5&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__2__5.html">_MemberResultCallback_2_5</a><br>
&lt; true, R, T1, P1, P2, A1, A2, <br>
A3, A4, A5 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#aa1d277f1ef1bb9904e24023cb32197c">NewCallback</a> (T1 *obj, R(T2::*member)(P1, P2, A1, A2, A3, A4, A5), P1 p1, P2 p2)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class A1, class A2, class A3, class A4, class A5&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__2__5.html">_MemberResultCallback_2_5</a><br>
&lt; false, R, T1, P1, P2, A1, A2, <br>
A3, A4, A5 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#5725ffa4a1203976b25a8c6c2cd62a30">NewPermanentCallback</a> (T1 *obj, R(T2::*member)(P1, P2, A1, A2, A3, A4, A5), P1 p1, P2 p2)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class P2, class A1, class A2, class A3, class A4, class A5&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__2__5.html">_FunctionResultCallback_2_5</a><br>
&lt; true, R, P1, P2, A1, A2, A3, <br>
A4, A5 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#2d9b17e85cd5c7211f808c12617776c8">NewCallback</a> (R(*function)(P1, P2, A1, A2, A3, A4, A5), P1 p1, P2 p2)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class P2, class A1, class A2, class A3, class A4, class A5&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__2__5.html">_FunctionResultCallback_2_5</a><br>
&lt; false, R, P1, P2, A1, A2, A3, <br>
A4, A5 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#b9c44485c7573c9e85c7170cbdd5d9d4">NewPermanentCallback</a> (R(*function)(P1, P2, A1, A2, A3, A4, A5), P1 p1, P2 p2)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class A1, class A2, class A3, class A4, class A5&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__3__5.html">_ConstMemberResultCallback_3_5</a><br>
&lt; true, R, T1, P1, P2, P3, A1, <br>
A2, A3, A4, A5 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#b9201a61f7795a17a5540fa80a9ed3f0">NewCallback</a> (const T1 *obj, R(T2::*member)(P1, P2, P3, A1, A2, A3, A4, A5) const, P1 p1, P2 p2, P3 p3)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class A1, class A2, class A3, class A4, class A5&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__3__5.html">_ConstMemberResultCallback_3_5</a><br>
&lt; false, R, T1, P1, P2, P3, A1, <br>
A2, A3, A4, A5 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#8188ac15bcd1a371a0077983803cc969">NewPermanentCallback</a> (const T1 *obj, R(T2::*member)(P1, P2, P3, A1, A2, A3, A4, A5) const, P1 p1, P2 p2, P3 p3)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class A1, class A2, class A3, class A4, class A5&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__3__5.html">_MemberResultCallback_3_5</a><br>
&lt; true, R, T1, P1, P2, P3, A1, <br>
A2, A3, A4, A5 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#8fdea1e4d157f2e25f3a06f659d41a81">NewCallback</a> (T1 *obj, R(T2::*member)(P1, P2, P3, A1, A2, A3, A4, A5), P1 p1, P2 p2, P3 p3)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class A1, class A2, class A3, class A4, class A5&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__3__5.html">_MemberResultCallback_3_5</a><br>
&lt; false, R, T1, P1, P2, P3, A1, <br>
A2, A3, A4, A5 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#f3cb12c6a3e6358d102b6e3a01d2f054">NewPermanentCallback</a> (T1 *obj, R(T2::*member)(P1, P2, P3, A1, A2, A3, A4, A5), P1 p1, P2 p2, P3 p3)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class P2, class P3, class A1, class A2, class A3, class A4, class A5&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__3__5.html">_FunctionResultCallback_3_5</a><br>
&lt; true, R, P1, P2, P3, A1, A2, <br>
A3, A4, A5 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#582009f38745213ea3a19b4e37ae6d56">NewCallback</a> (R(*function)(P1, P2, P3, A1, A2, A3, A4, A5), P1 p1, P2 p2, P3 p3)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class P2, class P3, class A1, class A2, class A3, class A4, class A5&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__3__5.html">_FunctionResultCallback_3_5</a><br>
&lt; false, R, P1, P2, P3, A1, A2, <br>
A3, A4, A5 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#88e4c3599157f68f03442a9a52e5c5fb">NewPermanentCallback</a> (R(*function)(P1, P2, P3, A1, A2, A3, A4, A5), P1 p1, P2 p2, P3 p3)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class A1, class A2, class A3, class A4, class A5&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__4__5.html">_ConstMemberResultCallback_4_5</a><br>
&lt; true, R, T1, P1, P2, P3, P4, <br>
A1, A2, A3, A4, A5 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#c0dee7fd812704b948a1a4cc657ec1d6">NewCallback</a> (const T1 *obj, R(T2::*member)(P1, P2, P3, P4, A1, A2, A3, A4, A5) const, P1 p1, P2 p2, P3 p3, P4 p4)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class A1, class A2, class A3, class A4, class A5&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__4__5.html">_ConstMemberResultCallback_4_5</a><br>
&lt; false, R, T1, P1, P2, P3, P4, <br>
A1, A2, A3, A4, A5 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#174293f810de4d51b5df98d17b449aaf">NewPermanentCallback</a> (const T1 *obj, R(T2::*member)(P1, P2, P3, P4, A1, A2, A3, A4, A5) const, P1 p1, P2 p2, P3 p3, P4 p4)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class A1, class A2, class A3, class A4, class A5&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__4__5.html">_MemberResultCallback_4_5</a><br>
&lt; true, R, T1, P1, P2, P3, P4, <br>
A1, A2, A3, A4, A5 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#7085b4349fb9202714404161cdf6c42b">NewCallback</a> (T1 *obj, R(T2::*member)(P1, P2, P3, P4, A1, A2, A3, A4, A5), P1 p1, P2 p2, P3 p3, P4 p4)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class A1, class A2, class A3, class A4, class A5&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__4__5.html">_MemberResultCallback_4_5</a><br>
&lt; false, R, T1, P1, P2, P3, P4, <br>
A1, A2, A3, A4, A5 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#769eb76e02a42144d8181e82c3fa9344">NewPermanentCallback</a> (T1 *obj, R(T2::*member)(P1, P2, P3, P4, A1, A2, A3, A4, A5), P1 p1, P2 p2, P3 p3, P4 p4)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class P2, class P3, class P4, class A1, class A2, class A3, class A4, class A5&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__4__5.html">_FunctionResultCallback_4_5</a><br>
&lt; true, R, P1, P2, P3, P4, A1, <br>
A2, A3, A4, A5 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#2dc21a9dac8e44e137affd217e23ad85">NewCallback</a> (R(*function)(P1, P2, P3, P4, A1, A2, A3, A4, A5), P1 p1, P2 p2, P3 p3, P4 p4)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class P2, class P3, class P4, class A1, class A2, class A3, class A4, class A5&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__4__5.html">_FunctionResultCallback_4_5</a><br>
&lt; false, R, P1, P2, P3, P4, A1, <br>
A2, A3, A4, A5 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#881f9c19ee43e0438cce0caa58f05e40">NewPermanentCallback</a> (R(*function)(P1, P2, P3, P4, A1, A2, A3, A4, A5), P1 p1, P2 p2, P3 p3, P4 p4)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class A1, class A2, class A3, class A4, class A5&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__5__5.html">_ConstMemberResultCallback_5_5</a><br>
&lt; true, R, T1, P1, P2, P3, P4, <br>
P5, A1, A2, A3, A4, A5 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#e19d0ff3d9d5c129598adb7f23055175">NewCallback</a> (const T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, A1, A2, A3, A4, A5) const, P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class A1, class A2, class A3, class A4, class A5&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__5__5.html">_ConstMemberResultCallback_5_5</a><br>
&lt; false, R, T1, P1, P2, P3, P4, <br>
P5, A1, A2, A3, A4, A5 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#10c7ccfb65325f4c2283fcf2d8fb773a">NewPermanentCallback</a> (const T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, A1, A2, A3, A4, A5) const, P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class A1, class A2, class A3, class A4, class A5&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__5__5.html">_MemberResultCallback_5_5</a><br>
&lt; true, R, T1, P1, P2, P3, P4, <br>
P5, A1, A2, A3, A4, A5 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#372435c9154af6c702bd608d97509103">NewCallback</a> (T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, A1, A2, A3, A4, A5), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class A1, class A2, class A3, class A4, class A5&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__5__5.html">_MemberResultCallback_5_5</a><br>
&lt; false, R, T1, P1, P2, P3, P4, <br>
P5, A1, A2, A3, A4, A5 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#9fe6f5da5d64973ac24192e3dab3c193">NewPermanentCallback</a> (T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, A1, A2, A3, A4, A5), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class P2, class P3, class P4, class P5, class A1, class A2, class A3, class A4, class A5&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__5__5.html">_FunctionResultCallback_5_5</a><br>
&lt; true, R, P1, P2, P3, P4, P5, <br>
A1, A2, A3, A4, A5 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#72e7ecc0535bf152858a6f82e7104034">NewCallback</a> (R(*function)(P1, P2, P3, P4, P5, A1, A2, A3, A4, A5), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class P2, class P3, class P4, class P5, class A1, class A2, class A3, class A4, class A5&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__5__5.html">_FunctionResultCallback_5_5</a><br>
&lt; false, R, P1, P2, P3, P4, P5, <br>
A1, A2, A3, A4, A5 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#02b84be1a138bbf060873e4f1758470c">NewPermanentCallback</a> (R(*function)(P1, P2, P3, P4, P5, A1, A2, A3, A4, A5), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class P6, class A1, class A2, class A3, class A4, class A5&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__6__5.html">_ConstMemberResultCallback_6_5</a><br>
&lt; true, R, T1, P1, P2, P3, P4, <br>
P5, P6, A1, A2, A3, A4, A5 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#c2f0546c0c54f5f872615636c7c17e5c">NewCallback</a> (const T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, P6, A1, A2, A3, A4, A5) const, P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class P6, class A1, class A2, class A3, class A4, class A5&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__ConstMemberResultCallback__6__5.html">_ConstMemberResultCallback_6_5</a><br>
&lt; false, R, T1, P1, P2, P3, P4, <br>
P5, P6, A1, A2, A3, A4, A5 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#bafdf65efc6e5b86a0c31c22e33659dd">NewPermanentCallback</a> (const T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, P6, A1, A2, A3, A4, A5) const, P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class P6, class A1, class A2, class A3, class A4, class A5&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__6__5.html">_MemberResultCallback_6_5</a><br>
&lt; true, R, T1, P1, P2, P3, P4, <br>
P5, P6, A1, A2, A3, A4, A5 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#528f156eb46cc9646a45f1cc78db26e7">NewCallback</a> (T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, P6, A1, A2, A3, A4, A5), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class P6, class A1, class A2, class A3, class A4, class A5&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__MemberResultCallback__6__5.html">_MemberResultCallback_6_5</a><br>
&lt; false, R, T1, P1, P2, P3, P4, <br>
P5, P6, A1, A2, A3, A4, A5 &gt;<br>
::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#b8168bd314892d9d2b8a06f418070fe1">NewPermanentCallback</a> (T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, P6, A1, A2, A3, A4, A5), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class P2, class P3, class P4, class P5, class P6, class A1, class A2, class A3, class A4, class A5&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__6__5.html">_FunctionResultCallback_6_5</a><br>
&lt; true, R, P1, P2, P3, P4, P5, <br>
P6, A1, A2, A3, A4, A5 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#b0499cb0affce4748978ada33041da5c">NewCallback</a> (R(*function)(P1, P2, P3, P4, P5, P6, A1, A2, A3, A4, A5), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class R, class P1, class P2, class P3, class P4, class P5, class P6, class A1, class A2, class A3, class A4, class A5&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="class__FunctionResultCallback__6__5.html">_FunctionResultCallback_6_5</a><br>
&lt; false, R, P1, P2, P3, P4, P5, <br>
P6, A1, A2, A3, A4, A5 &gt;::base *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="callback_8h.html#46af9e05580348cae423bf798e1e120e">NewPermanentCallback</a> (R(*function)(P1, P2, P3, P4, P5, P6, A1, A2, A3, A4, A5), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">BASE_CALLBACK_H_.  <a href="#46af9e05580348cae423bf798e1e120e"></a><br></td></tr>
</table>
<hr><h2>Function Documentation</h2>
<a class="anchor" name="b0499cb0affce4748978ada33041da5c"></a><!-- doxytag: member="callback.h::NewCallback" ref="b0499cb0affce4748978ada33041da5c" args="(R(*function)(P1, P2, P3, P4, P5, P6, A1, A2, A3, A4, A5), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class P2, class P3, class P4, class P5, class P6, class A1, class A2, class A3, class A4, class A5&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__6__5.html">_FunctionResultCallback_6_5</a>&lt;true,R,P1,P2,P3,P4,P5,P6,A1,A2,A3,A4,A5&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, P2, P3, P4, P5, P6, A1, A2, A3, A4, A5)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P6&nbsp;</td>
          <td class="paramname"> <em>p6</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l11891">11891</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="528f156eb46cc9646a45f1cc78db26e7"></a><!-- doxytag: member="callback.h::NewCallback" ref="528f156eb46cc9646a45f1cc78db26e7" args="(T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, P6, A1, A2, A3, A4, A5), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class P6, class A1, class A2, class A3, class A4, class A5&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__6__5.html">_MemberResultCallback_6_5</a>&lt;true,R,T1,P1,P2,P3,P4,P5,P6,A1,A2,A3,A4,A5&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, P5, P6, A1, A2, A3, A4, A5)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P6&nbsp;</td>
          <td class="paramname"> <em>p6</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l11794">11794</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="c2f0546c0c54f5f872615636c7c17e5c"></a><!-- doxytag: member="callback.h::NewCallback" ref="c2f0546c0c54f5f872615636c7c17e5c" args="(const T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, P6, A1, A2, A3, A4, A5) const, P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class P6, class A1, class A2, class A3, class A4, class A5&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__6__5.html">_ConstMemberResultCallback_6_5</a>&lt;true,R,T1,P1,P2,P3,P4,P5,P6,A1,A2,A3,A4,A5&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, P5, P6, A1, A2, A3, A4, A5) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P6&nbsp;</td>
          <td class="paramname"> <em>p6</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l11692">11692</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="72e7ecc0535bf152858a6f82e7104034"></a><!-- doxytag: member="callback.h::NewCallback" ref="72e7ecc0535bf152858a6f82e7104034" args="(R(*function)(P1, P2, P3, P4, P5, A1, A2, A3, A4, A5), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class P2, class P3, class P4, class P5, class A1, class A2, class A3, class A4, class A5&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__5__5.html">_FunctionResultCallback_5_5</a>&lt;true,R,P1,P2,P3,P4,P5,A1,A2,A3,A4,A5&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, P2, P3, P4, P5, A1, A2, A3, A4, A5)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l11593">11593</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="372435c9154af6c702bd608d97509103"></a><!-- doxytag: member="callback.h::NewCallback" ref="372435c9154af6c702bd608d97509103" args="(T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, A1, A2, A3, A4, A5), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class A1, class A2, class A3, class A4, class A5&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__5__5.html">_MemberResultCallback_5_5</a>&lt;true,R,T1,P1,P2,P3,P4,P5,A1,A2,A3,A4,A5&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, P5, A1, A2, A3, A4, A5)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l11498">11498</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="e19d0ff3d9d5c129598adb7f23055175"></a><!-- doxytag: member="callback.h::NewCallback" ref="e19d0ff3d9d5c129598adb7f23055175" args="(const T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, A1, A2, A3, A4, A5) const, P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class A1, class A2, class A3, class A4, class A5&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__5__5.html">_ConstMemberResultCallback_5_5</a>&lt;true,R,T1,P1,P2,P3,P4,P5,A1,A2,A3,A4,A5&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, P5, A1, A2, A3, A4, A5) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l11398">11398</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="2dc21a9dac8e44e137affd217e23ad85"></a><!-- doxytag: member="callback.h::NewCallback" ref="2dc21a9dac8e44e137affd217e23ad85" args="(R(*function)(P1, P2, P3, P4, A1, A2, A3, A4, A5), P1 p1, P2 p2, P3 p3, P4 p4)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class P2, class P3, class P4, class A1, class A2, class A3, class A4, class A5&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__4__5.html">_FunctionResultCallback_4_5</a>&lt;true,R,P1,P2,P3,P4,A1,A2,A3,A4,A5&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, P2, P3, P4, A1, A2, A3, A4, A5)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l11301">11301</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="7085b4349fb9202714404161cdf6c42b"></a><!-- doxytag: member="callback.h::NewCallback" ref="7085b4349fb9202714404161cdf6c42b" args="(T1 *obj, R(T2::*member)(P1, P2, P3, P4, A1, A2, A3, A4, A5), P1 p1, P2 p2, P3 p3, P4 p4)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class A1, class A2, class A3, class A4, class A5&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__4__5.html">_MemberResultCallback_4_5</a>&lt;true,R,T1,P1,P2,P3,P4,A1,A2,A3,A4,A5&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, A1, A2, A3, A4, A5)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l11208">11208</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="c0dee7fd812704b948a1a4cc657ec1d6"></a><!-- doxytag: member="callback.h::NewCallback" ref="c0dee7fd812704b948a1a4cc657ec1d6" args="(const T1 *obj, R(T2::*member)(P1, P2, P3, P4, A1, A2, A3, A4, A5) const, P1 p1, P2 p2, P3 p3, P4 p4)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class A1, class A2, class A3, class A4, class A5&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__4__5.html">_ConstMemberResultCallback_4_5</a>&lt;true,R,T1,P1,P2,P3,P4,A1,A2,A3,A4,A5&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, A1, A2, A3, A4, A5) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l11110">11110</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="582009f38745213ea3a19b4e37ae6d56"></a><!-- doxytag: member="callback.h::NewCallback" ref="582009f38745213ea3a19b4e37ae6d56" args="(R(*function)(P1, P2, P3, A1, A2, A3, A4, A5), P1 p1, P2 p2, P3 p3)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class P2, class P3, class A1, class A2, class A3, class A4, class A5&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__3__5.html">_FunctionResultCallback_3_5</a>&lt;true,R,P1,P2,P3,A1,A2,A3,A4,A5&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, P2, P3, A1, A2, A3, A4, A5)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l11015">11015</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="8fdea1e4d157f2e25f3a06f659d41a81"></a><!-- doxytag: member="callback.h::NewCallback" ref="8fdea1e4d157f2e25f3a06f659d41a81" args="(T1 *obj, R(T2::*member)(P1, P2, P3, A1, A2, A3, A4, A5), P1 p1, P2 p2, P3 p3)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class A1, class A2, class A3, class A4, class A5&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__3__5.html">_MemberResultCallback_3_5</a>&lt;true,R,T1,P1,P2,P3,A1,A2,A3,A4,A5&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, A1, A2, A3, A4, A5)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l10924">10924</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="b9201a61f7795a17a5540fa80a9ed3f0"></a><!-- doxytag: member="callback.h::NewCallback" ref="b9201a61f7795a17a5540fa80a9ed3f0" args="(const T1 *obj, R(T2::*member)(P1, P2, P3, A1, A2, A3, A4, A5) const, P1 p1, P2 p2, P3 p3)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class A1, class A2, class A3, class A4, class A5&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__3__5.html">_ConstMemberResultCallback_3_5</a>&lt;true,R,T1,P1,P2,P3,A1,A2,A3,A4,A5&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, A1, A2, A3, A4, A5) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l10828">10828</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="2d9b17e85cd5c7211f808c12617776c8"></a><!-- doxytag: member="callback.h::NewCallback" ref="2d9b17e85cd5c7211f808c12617776c8" args="(R(*function)(P1, P2, A1, A2, A3, A4, A5), P1 p1, P2 p2)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class P2, class A1, class A2, class A3, class A4, class A5&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__2__5.html">_FunctionResultCallback_2_5</a>&lt;true,R,P1,P2,A1,A2,A3,A4,A5&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, P2, A1, A2, A3, A4, A5)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l10735">10735</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="aa1d277f1ef1bb9904e24023cb32197c"></a><!-- doxytag: member="callback.h::NewCallback" ref="aa1d277f1ef1bb9904e24023cb32197c" args="(T1 *obj, R(T2::*member)(P1, P2, A1, A2, A3, A4, A5), P1 p1, P2 p2)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class A1, class A2, class A3, class A4, class A5&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__2__5.html">_MemberResultCallback_2_5</a>&lt;true,R,T1,P1,P2,A1,A2,A3,A4,A5&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, A1, A2, A3, A4, A5)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l10646">10646</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="120cc998fb98faed5abcea65f8028a45"></a><!-- doxytag: member="callback.h::NewCallback" ref="120cc998fb98faed5abcea65f8028a45" args="(const T1 *obj, R(T2::*member)(P1, P2, A1, A2, A3, A4, A5) const, P1 p1, P2 p2)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class A1, class A2, class A3, class A4, class A5&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__2__5.html">_ConstMemberResultCallback_2_5</a>&lt;true,R,T1,P1,P2,A1,A2,A3,A4,A5&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, A1, A2, A3, A4, A5) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l10552">10552</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="38b6764089ffffb4d4e5d476b85d589c"></a><!-- doxytag: member="callback.h::NewCallback" ref="38b6764089ffffb4d4e5d476b85d589c" args="(R(*function)(P1, A1, A2, A3, A4, A5), P1 p1)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class A1, class A2, class A3, class A4, class A5&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__1__5.html">_FunctionResultCallback_1_5</a>&lt;true,R,P1,A1,A2,A3,A4,A5&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, A1, A2, A3, A4, A5)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l10461">10461</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="6b844cc4d5528b810878aa6c43e3dc1f"></a><!-- doxytag: member="callback.h::NewCallback" ref="6b844cc4d5528b810878aa6c43e3dc1f" args="(T1 *obj, R(T2::*member)(P1, A1, A2, A3, A4, A5), P1 p1)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class A1, class A2, class A3, class A4, class A5&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__1__5.html">_MemberResultCallback_1_5</a>&lt;true,R,T1,P1,A1,A2,A3,A4,A5&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, A1, A2, A3, A4, A5)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l10374">10374</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="d392cc692228a0e74dede7ee984a1366"></a><!-- doxytag: member="callback.h::NewCallback" ref="d392cc692228a0e74dede7ee984a1366" args="(const T1 *obj, R(T2::*member)(P1, A1, A2, A3, A4, A5) const, P1 p1)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class A1, class A2, class A3, class A4, class A5&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__1__5.html">_ConstMemberResultCallback_1_5</a>&lt;true,R,T1,P1,A1,A2,A3,A4,A5&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, A1, A2, A3, A4, A5) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l10282">10282</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="0de9ba8fda34d46d67a8b6dabf117131"></a><!-- doxytag: member="callback.h::NewCallback" ref="0de9ba8fda34d46d67a8b6dabf117131" args="(R(*function)(A1, A2, A3, A4, A5))" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class A1, class A2, class A3, class A4, class A5&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__0__5.html">_FunctionResultCallback_0_5</a>&lt;true,R,A1,A2,A3,A4,A5&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(A1, A2, A3, A4, A5)&nbsp;</td>
          <td class="paramname"> <em>function</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l10193">10193</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="36fee18864990baab63228fc4a658f96"></a><!-- doxytag: member="callback.h::NewCallback" ref="36fee18864990baab63228fc4a658f96" args="(T1 *obj, R(T2::*member)(A1, A2, A3, A4, A5))" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class A1, class A2, class A3, class A4, class A5&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__0__5.html">_MemberResultCallback_0_5</a>&lt;true,R,T1,A1,A2,A3,A4,A5&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(A1, A2, A3, A4, A5)&nbsp;</td>
          <td class="paramname"> <em>member</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l10108">10108</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="b9e002ee277ac58bfcf333fd6a347164"></a><!-- doxytag: member="callback.h::NewCallback" ref="b9e002ee277ac58bfcf333fd6a347164" args="(const T1 *obj, R(T2::*member)(A1, A2, A3, A4, A5) const)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class A1, class A2, class A3, class A4, class A5&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__0__5.html">_ConstMemberResultCallback_0_5</a>&lt;true,R,T1,A1,A2,A3,A4,A5&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(A1, A2, A3, A4, A5) const &nbsp;</td>
          <td class="paramname"> <em>member</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l10018">10018</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="dc9c10a06a62748f697d3b883a07c562"></a><!-- doxytag: member="callback.h::NewCallback" ref="dc9c10a06a62748f697d3b883a07c562" args="(R(*function)(P1, P2, P3, P4, P5, P6, A1, A2, A3, A4), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class P2, class P3, class P4, class P5, class P6, class A1, class A2, class A3, class A4&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__6__4.html">_FunctionResultCallback_6_4</a>&lt;true,R,P1,P2,P3,P4,P5,P6,A1,A2,A3,A4&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, P2, P3, P4, P5, P6, A1, A2, A3, A4)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P6&nbsp;</td>
          <td class="paramname"> <em>p6</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l09931">9931</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="be0ccd9860d75270ff4b639c4559659f"></a><!-- doxytag: member="callback.h::NewCallback" ref="be0ccd9860d75270ff4b639c4559659f" args="(T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, P6, A1, A2, A3, A4), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class P6, class A1, class A2, class A3, class A4&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__6__4.html">_MemberResultCallback_6_4</a>&lt;true,R,T1,P1,P2,P3,P4,P5,P6,A1,A2,A3,A4&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, P5, P6, A1, A2, A3, A4)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P6&nbsp;</td>
          <td class="paramname"> <em>p6</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l09834">9834</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="b8aba666f01090a388562b416e0b484b"></a><!-- doxytag: member="callback.h::NewCallback" ref="b8aba666f01090a388562b416e0b484b" args="(const T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, P6, A1, A2, A3, A4) const, P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class P6, class A1, class A2, class A3, class A4&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__6__4.html">_ConstMemberResultCallback_6_4</a>&lt;true,R,T1,P1,P2,P3,P4,P5,P6,A1,A2,A3,A4&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, P5, P6, A1, A2, A3, A4) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P6&nbsp;</td>
          <td class="paramname"> <em>p6</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l09732">9732</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="cdce60935d2fbd7f7757bfc5f876b544"></a><!-- doxytag: member="callback.h::NewCallback" ref="cdce60935d2fbd7f7757bfc5f876b544" args="(R(*function)(P1, P2, P3, P4, P5, A1, A2, A3, A4), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class P2, class P3, class P4, class P5, class A1, class A2, class A3, class A4&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__5__4.html">_FunctionResultCallback_5_4</a>&lt;true,R,P1,P2,P3,P4,P5,A1,A2,A3,A4&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, P2, P3, P4, P5, A1, A2, A3, A4)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l09633">9633</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="70dec0c193d99517e93c83b78dc80aab"></a><!-- doxytag: member="callback.h::NewCallback" ref="70dec0c193d99517e93c83b78dc80aab" args="(T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, A1, A2, A3, A4), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class A1, class A2, class A3, class A4&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__5__4.html">_MemberResultCallback_5_4</a>&lt;true,R,T1,P1,P2,P3,P4,P5,A1,A2,A3,A4&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, P5, A1, A2, A3, A4)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l09538">9538</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="35d58533923e6e565413e98fddbb0e2c"></a><!-- doxytag: member="callback.h::NewCallback" ref="35d58533923e6e565413e98fddbb0e2c" args="(const T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, A1, A2, A3, A4) const, P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class A1, class A2, class A3, class A4&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__5__4.html">_ConstMemberResultCallback_5_4</a>&lt;true,R,T1,P1,P2,P3,P4,P5,A1,A2,A3,A4&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, P5, A1, A2, A3, A4) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l09438">9438</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="b18173b23d8888c99b2643697c8cbee1"></a><!-- doxytag: member="callback.h::NewCallback" ref="b18173b23d8888c99b2643697c8cbee1" args="(R(*function)(P1, P2, P3, P4, A1, A2, A3, A4), P1 p1, P2 p2, P3 p3, P4 p4)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class P2, class P3, class P4, class A1, class A2, class A3, class A4&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__4__4.html">_FunctionResultCallback_4_4</a>&lt;true,R,P1,P2,P3,P4,A1,A2,A3,A4&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, P2, P3, P4, A1, A2, A3, A4)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l09341">9341</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="4fd66d217d8efdf05a7499bff78583fd"></a><!-- doxytag: member="callback.h::NewCallback" ref="4fd66d217d8efdf05a7499bff78583fd" args="(T1 *obj, R(T2::*member)(P1, P2, P3, P4, A1, A2, A3, A4), P1 p1, P2 p2, P3 p3, P4 p4)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class A1, class A2, class A3, class A4&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__4__4.html">_MemberResultCallback_4_4</a>&lt;true,R,T1,P1,P2,P3,P4,A1,A2,A3,A4&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, A1, A2, A3, A4)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l09248">9248</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="10e473c2ea1fe7e853d4d54929546624"></a><!-- doxytag: member="callback.h::NewCallback" ref="10e473c2ea1fe7e853d4d54929546624" args="(const T1 *obj, R(T2::*member)(P1, P2, P3, P4, A1, A2, A3, A4) const, P1 p1, P2 p2, P3 p3, P4 p4)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class A1, class A2, class A3, class A4&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__4__4.html">_ConstMemberResultCallback_4_4</a>&lt;true,R,T1,P1,P2,P3,P4,A1,A2,A3,A4&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, A1, A2, A3, A4) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l09150">9150</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="68dd9c36c6401d2d237324cc6b583bca"></a><!-- doxytag: member="callback.h::NewCallback" ref="68dd9c36c6401d2d237324cc6b583bca" args="(R(*function)(P1, P2, P3, A1, A2, A3, A4), P1 p1, P2 p2, P3 p3)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class P2, class P3, class A1, class A2, class A3, class A4&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__3__4.html">_FunctionResultCallback_3_4</a>&lt;true,R,P1,P2,P3,A1,A2,A3,A4&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, P2, P3, A1, A2, A3, A4)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l09055">9055</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="5bf7554d1aee43b47c5eb935b31cc000"></a><!-- doxytag: member="callback.h::NewCallback" ref="5bf7554d1aee43b47c5eb935b31cc000" args="(T1 *obj, R(T2::*member)(P1, P2, P3, A1, A2, A3, A4), P1 p1, P2 p2, P3 p3)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class A1, class A2, class A3, class A4&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__3__4.html">_MemberResultCallback_3_4</a>&lt;true,R,T1,P1,P2,P3,A1,A2,A3,A4&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, A1, A2, A3, A4)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l08964">8964</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="1cd04920b5e8322d6464c997f5cc3816"></a><!-- doxytag: member="callback.h::NewCallback" ref="1cd04920b5e8322d6464c997f5cc3816" args="(const T1 *obj, R(T2::*member)(P1, P2, P3, A1, A2, A3, A4) const, P1 p1, P2 p2, P3 p3)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class A1, class A2, class A3, class A4&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__3__4.html">_ConstMemberResultCallback_3_4</a>&lt;true,R,T1,P1,P2,P3,A1,A2,A3,A4&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, A1, A2, A3, A4) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l08868">8868</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="4a0dd518a6367b2ec1460a479c429184"></a><!-- doxytag: member="callback.h::NewCallback" ref="4a0dd518a6367b2ec1460a479c429184" args="(R(*function)(P1, P2, A1, A2, A3, A4), P1 p1, P2 p2)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class P2, class A1, class A2, class A3, class A4&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__2__4.html">_FunctionResultCallback_2_4</a>&lt;true,R,P1,P2,A1,A2,A3,A4&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, P2, A1, A2, A3, A4)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l08775">8775</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="a2ca04bc5200db8fef94dbcfd09b0218"></a><!-- doxytag: member="callback.h::NewCallback" ref="a2ca04bc5200db8fef94dbcfd09b0218" args="(T1 *obj, R(T2::*member)(P1, P2, A1, A2, A3, A4), P1 p1, P2 p2)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class A1, class A2, class A3, class A4&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__2__4.html">_MemberResultCallback_2_4</a>&lt;true,R,T1,P1,P2,A1,A2,A3,A4&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, A1, A2, A3, A4)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l08686">8686</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="0d719699f2454e1e151e864aa2a3e199"></a><!-- doxytag: member="callback.h::NewCallback" ref="0d719699f2454e1e151e864aa2a3e199" args="(const T1 *obj, R(T2::*member)(P1, P2, A1, A2, A3, A4) const, P1 p1, P2 p2)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class A1, class A2, class A3, class A4&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__2__4.html">_ConstMemberResultCallback_2_4</a>&lt;true,R,T1,P1,P2,A1,A2,A3,A4&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, A1, A2, A3, A4) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l08592">8592</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="ecd9f1963d0fc9cebd077d5654110695"></a><!-- doxytag: member="callback.h::NewCallback" ref="ecd9f1963d0fc9cebd077d5654110695" args="(R(*function)(P1, A1, A2, A3, A4), P1 p1)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class A1, class A2, class A3, class A4&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__1__4.html">_FunctionResultCallback_1_4</a>&lt;true,R,P1,A1,A2,A3,A4&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, A1, A2, A3, A4)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l08501">8501</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="597a99b06147b5009f96a5bcb163b4ef"></a><!-- doxytag: member="callback.h::NewCallback" ref="597a99b06147b5009f96a5bcb163b4ef" args="(T1 *obj, R(T2::*member)(P1, A1, A2, A3, A4), P1 p1)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class A1, class A2, class A3, class A4&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__1__4.html">_MemberResultCallback_1_4</a>&lt;true,R,T1,P1,A1,A2,A3,A4&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, A1, A2, A3, A4)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l08414">8414</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="c0c249cc1fbfa82423c7b759d25e3060"></a><!-- doxytag: member="callback.h::NewCallback" ref="c0c249cc1fbfa82423c7b759d25e3060" args="(const T1 *obj, R(T2::*member)(P1, A1, A2, A3, A4) const, P1 p1)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class A1, class A2, class A3, class A4&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__1__4.html">_ConstMemberResultCallback_1_4</a>&lt;true,R,T1,P1,A1,A2,A3,A4&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, A1, A2, A3, A4) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l08322">8322</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="beb0a92a9ace362a81332d214b7c4b68"></a><!-- doxytag: member="callback.h::NewCallback" ref="beb0a92a9ace362a81332d214b7c4b68" args="(R(*function)(A1, A2, A3, A4))" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class A1, class A2, class A3, class A4&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__0__4.html">_FunctionResultCallback_0_4</a>&lt;true,R,A1,A2,A3,A4&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(A1, A2, A3, A4)&nbsp;</td>
          <td class="paramname"> <em>function</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l08233">8233</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="d6087b8fa630b86c41a3e146eff5ca8c"></a><!-- doxytag: member="callback.h::NewCallback" ref="d6087b8fa630b86c41a3e146eff5ca8c" args="(T1 *obj, R(T2::*member)(A1, A2, A3, A4))" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class A1, class A2, class A3, class A4&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__0__4.html">_MemberResultCallback_0_4</a>&lt;true,R,T1,A1,A2,A3,A4&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(A1, A2, A3, A4)&nbsp;</td>
          <td class="paramname"> <em>member</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l08148">8148</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="38164be8415c6c627cf06b87995612f8"></a><!-- doxytag: member="callback.h::NewCallback" ref="38164be8415c6c627cf06b87995612f8" args="(const T1 *obj, R(T2::*member)(A1, A2, A3, A4) const)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class A1, class A2, class A3, class A4&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__0__4.html">_ConstMemberResultCallback_0_4</a>&lt;true,R,T1,A1,A2,A3,A4&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(A1, A2, A3, A4) const &nbsp;</td>
          <td class="paramname"> <em>member</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l08058">8058</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="8333c6df3a1f553f430fa0b08de0acc3"></a><!-- doxytag: member="callback.h::NewCallback" ref="8333c6df3a1f553f430fa0b08de0acc3" args="(R(*function)(P1, P2, P3, P4, P5, P6, A1, A2, A3), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class P2, class P3, class P4, class P5, class P6, class A1, class A2, class A3&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__6__3.html">_FunctionResultCallback_6_3</a>&lt;true,R,P1,P2,P3,P4,P5,P6,A1,A2,A3&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, P2, P3, P4, P5, P6, A1, A2, A3)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P6&nbsp;</td>
          <td class="paramname"> <em>p6</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l07971">7971</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="8c9de8f460f7082d006406a9a8e1ff23"></a><!-- doxytag: member="callback.h::NewCallback" ref="8c9de8f460f7082d006406a9a8e1ff23" args="(T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, P6, A1, A2, A3), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class P6, class A1, class A2, class A3&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__6__3.html">_MemberResultCallback_6_3</a>&lt;true,R,T1,P1,P2,P3,P4,P5,P6,A1,A2,A3&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, P5, P6, A1, A2, A3)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P6&nbsp;</td>
          <td class="paramname"> <em>p6</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l07874">7874</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="5b31282476a7354906e7af8072d640d2"></a><!-- doxytag: member="callback.h::NewCallback" ref="5b31282476a7354906e7af8072d640d2" args="(const T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, P6, A1, A2, A3) const, P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class P6, class A1, class A2, class A3&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__6__3.html">_ConstMemberResultCallback_6_3</a>&lt;true,R,T1,P1,P2,P3,P4,P5,P6,A1,A2,A3&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, P5, P6, A1, A2, A3) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P6&nbsp;</td>
          <td class="paramname"> <em>p6</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l07772">7772</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="29129d88f0c7657dfd7744cc1eb0e6a9"></a><!-- doxytag: member="callback.h::NewCallback" ref="29129d88f0c7657dfd7744cc1eb0e6a9" args="(R(*function)(P1, P2, P3, P4, P5, A1, A2, A3), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class P2, class P3, class P4, class P5, class A1, class A2, class A3&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__5__3.html">_FunctionResultCallback_5_3</a>&lt;true,R,P1,P2,P3,P4,P5,A1,A2,A3&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, P2, P3, P4, P5, A1, A2, A3)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l07673">7673</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="fd3887aad4e218697b5b9f9fba02f2ab"></a><!-- doxytag: member="callback.h::NewCallback" ref="fd3887aad4e218697b5b9f9fba02f2ab" args="(T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, A1, A2, A3), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class A1, class A2, class A3&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__5__3.html">_MemberResultCallback_5_3</a>&lt;true,R,T1,P1,P2,P3,P4,P5,A1,A2,A3&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, P5, A1, A2, A3)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l07578">7578</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="a43f5eb9079d8b472bdd6c5592d848c7"></a><!-- doxytag: member="callback.h::NewCallback" ref="a43f5eb9079d8b472bdd6c5592d848c7" args="(const T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, A1, A2, A3) const, P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class A1, class A2, class A3&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__5__3.html">_ConstMemberResultCallback_5_3</a>&lt;true,R,T1,P1,P2,P3,P4,P5,A1,A2,A3&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, P5, A1, A2, A3) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l07478">7478</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="41c179de1911cdfd0c14f93a64313d25"></a><!-- doxytag: member="callback.h::NewCallback" ref="41c179de1911cdfd0c14f93a64313d25" args="(R(*function)(P1, P2, P3, P4, A1, A2, A3), P1 p1, P2 p2, P3 p3, P4 p4)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class P2, class P3, class P4, class A1, class A2, class A3&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__4__3.html">_FunctionResultCallback_4_3</a>&lt;true,R,P1,P2,P3,P4,A1,A2,A3&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, P2, P3, P4, A1, A2, A3)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l07381">7381</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="d3442f9728158f4cd40f005c7d8fe0d7"></a><!-- doxytag: member="callback.h::NewCallback" ref="d3442f9728158f4cd40f005c7d8fe0d7" args="(T1 *obj, R(T2::*member)(P1, P2, P3, P4, A1, A2, A3), P1 p1, P2 p2, P3 p3, P4 p4)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class A1, class A2, class A3&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__4__3.html">_MemberResultCallback_4_3</a>&lt;true,R,T1,P1,P2,P3,P4,A1,A2,A3&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, A1, A2, A3)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l07288">7288</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="f63d0abcadd13cd52a8d2621df4d66c6"></a><!-- doxytag: member="callback.h::NewCallback" ref="f63d0abcadd13cd52a8d2621df4d66c6" args="(const T1 *obj, R(T2::*member)(P1, P2, P3, P4, A1, A2, A3) const, P1 p1, P2 p2, P3 p3, P4 p4)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class A1, class A2, class A3&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__4__3.html">_ConstMemberResultCallback_4_3</a>&lt;true,R,T1,P1,P2,P3,P4,A1,A2,A3&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, A1, A2, A3) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l07190">7190</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="c658fce0affbb609bc30781603375f28"></a><!-- doxytag: member="callback.h::NewCallback" ref="c658fce0affbb609bc30781603375f28" args="(R(*function)(P1, P2, P3, A1, A2, A3), P1 p1, P2 p2, P3 p3)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class P2, class P3, class A1, class A2, class A3&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__3__3.html">_FunctionResultCallback_3_3</a>&lt;true,R,P1,P2,P3,A1,A2,A3&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, P2, P3, A1, A2, A3)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l07095">7095</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="79e58dd5d58a3248361f063a8604e2ce"></a><!-- doxytag: member="callback.h::NewCallback" ref="79e58dd5d58a3248361f063a8604e2ce" args="(T1 *obj, R(T2::*member)(P1, P2, P3, A1, A2, A3), P1 p1, P2 p2, P3 p3)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class A1, class A2, class A3&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__3__3.html">_MemberResultCallback_3_3</a>&lt;true,R,T1,P1,P2,P3,A1,A2,A3&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, A1, A2, A3)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l07004">7004</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="b21d1fcf5181e33637cdb5393935694e"></a><!-- doxytag: member="callback.h::NewCallback" ref="b21d1fcf5181e33637cdb5393935694e" args="(const T1 *obj, R(T2::*member)(P1, P2, P3, A1, A2, A3) const, P1 p1, P2 p2, P3 p3)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class A1, class A2, class A3&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__3__3.html">_ConstMemberResultCallback_3_3</a>&lt;true,R,T1,P1,P2,P3,A1,A2,A3&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, A1, A2, A3) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l06908">6908</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="705eeb7b9e4a8e7514e9b3d1331cf469"></a><!-- doxytag: member="callback.h::NewCallback" ref="705eeb7b9e4a8e7514e9b3d1331cf469" args="(R(*function)(P1, P2, A1, A2, A3), P1 p1, P2 p2)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class P2, class A1, class A2, class A3&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__2__3.html">_FunctionResultCallback_2_3</a>&lt;true,R,P1,P2,A1,A2,A3&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, P2, A1, A2, A3)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l06815">6815</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="678a3a490f69eb205cc438c50d466bfd"></a><!-- doxytag: member="callback.h::NewCallback" ref="678a3a490f69eb205cc438c50d466bfd" args="(T1 *obj, R(T2::*member)(P1, P2, A1, A2, A3), P1 p1, P2 p2)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class A1, class A2, class A3&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__2__3.html">_MemberResultCallback_2_3</a>&lt;true,R,T1,P1,P2,A1,A2,A3&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, A1, A2, A3)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l06726">6726</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="85811c3dbce87f227d55b4b1c2095904"></a><!-- doxytag: member="callback.h::NewCallback" ref="85811c3dbce87f227d55b4b1c2095904" args="(const T1 *obj, R(T2::*member)(P1, P2, A1, A2, A3) const, P1 p1, P2 p2)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class A1, class A2, class A3&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__2__3.html">_ConstMemberResultCallback_2_3</a>&lt;true,R,T1,P1,P2,A1,A2,A3&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, A1, A2, A3) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l06632">6632</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="7936348fa763ac9f5f1877734549909d"></a><!-- doxytag: member="callback.h::NewCallback" ref="7936348fa763ac9f5f1877734549909d" args="(R(*function)(P1, A1, A2, A3), P1 p1)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class A1, class A2, class A3&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__1__3.html">_FunctionResultCallback_1_3</a>&lt;true,R,P1,A1,A2,A3&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, A1, A2, A3)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l06541">6541</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="678d39583c902d920acd0b8c86371bcf"></a><!-- doxytag: member="callback.h::NewCallback" ref="678d39583c902d920acd0b8c86371bcf" args="(T1 *obj, R(T2::*member)(P1, A1, A2, A3), P1 p1)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class A1, class A2, class A3&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__1__3.html">_MemberResultCallback_1_3</a>&lt;true,R,T1,P1,A1,A2,A3&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, A1, A2, A3)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l06454">6454</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="471a9cb646befd492058a23a48aba495"></a><!-- doxytag: member="callback.h::NewCallback" ref="471a9cb646befd492058a23a48aba495" args="(const T1 *obj, R(T2::*member)(P1, A1, A2, A3) const, P1 p1)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class A1, class A2, class A3&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__1__3.html">_ConstMemberResultCallback_1_3</a>&lt;true,R,T1,P1,A1,A2,A3&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, A1, A2, A3) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l06362">6362</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="ab267ae37ded9abe5c88db1beeced616"></a><!-- doxytag: member="callback.h::NewCallback" ref="ab267ae37ded9abe5c88db1beeced616" args="(R(*function)(A1, A2, A3))" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class A1, class A2, class A3&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__0__3.html">_FunctionResultCallback_0_3</a>&lt;true,R,A1,A2,A3&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(A1, A2, A3)&nbsp;</td>
          <td class="paramname"> <em>function</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l06273">6273</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="e94c329fd62b36ddbf95641549fd608d"></a><!-- doxytag: member="callback.h::NewCallback" ref="e94c329fd62b36ddbf95641549fd608d" args="(T1 *obj, R(T2::*member)(A1, A2, A3))" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class A1, class A2, class A3&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__0__3.html">_MemberResultCallback_0_3</a>&lt;true,R,T1,A1,A2,A3&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(A1, A2, A3)&nbsp;</td>
          <td class="paramname"> <em>member</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l06188">6188</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="50b1996dd4dbb0b017d1f93919c81829"></a><!-- doxytag: member="callback.h::NewCallback" ref="50b1996dd4dbb0b017d1f93919c81829" args="(const T1 *obj, R(T2::*member)(A1, A2, A3) const)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class A1, class A2, class A3&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__0__3.html">_ConstMemberResultCallback_0_3</a>&lt;true,R,T1,A1,A2,A3&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(A1, A2, A3) const &nbsp;</td>
          <td class="paramname"> <em>member</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l06098">6098</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="6908d45572b5f351e163512cbabe3dfd"></a><!-- doxytag: member="callback.h::NewCallback" ref="6908d45572b5f351e163512cbabe3dfd" args="(R(*function)(P1, P2, P3, P4, P5, P6, A1, A2), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class P2, class P3, class P4, class P5, class P6, class A1, class A2&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__6__2.html">_FunctionResultCallback_6_2</a>&lt;true,R,P1,P2,P3,P4,P5,P6,A1,A2&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, P2, P3, P4, P5, P6, A1, A2)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P6&nbsp;</td>
          <td class="paramname"> <em>p6</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l06011">6011</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="c3460c2374ecb2babff20224ff25b88d"></a><!-- doxytag: member="callback.h::NewCallback" ref="c3460c2374ecb2babff20224ff25b88d" args="(T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, P6, A1, A2), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class P6, class A1, class A2&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__6__2.html">_MemberResultCallback_6_2</a>&lt;true,R,T1,P1,P2,P3,P4,P5,P6,A1,A2&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, P5, P6, A1, A2)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P6&nbsp;</td>
          <td class="paramname"> <em>p6</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l05914">5914</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="bddbaa6eea120f60c247478183b1cc38"></a><!-- doxytag: member="callback.h::NewCallback" ref="bddbaa6eea120f60c247478183b1cc38" args="(const T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, P6, A1, A2) const, P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class P6, class A1, class A2&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__6__2.html">_ConstMemberResultCallback_6_2</a>&lt;true,R,T1,P1,P2,P3,P4,P5,P6,A1,A2&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, P5, P6, A1, A2) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P6&nbsp;</td>
          <td class="paramname"> <em>p6</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l05812">5812</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="9b38ca616a575959117f9c8ee16d2472"></a><!-- doxytag: member="callback.h::NewCallback" ref="9b38ca616a575959117f9c8ee16d2472" args="(R(*function)(P1, P2, P3, P4, P5, A1, A2), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class P2, class P3, class P4, class P5, class A1, class A2&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__5__2.html">_FunctionResultCallback_5_2</a>&lt;true,R,P1,P2,P3,P4,P5,A1,A2&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, P2, P3, P4, P5, A1, A2)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l05713">5713</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="e3586a372a094a44ed40b9e9d04110a9"></a><!-- doxytag: member="callback.h::NewCallback" ref="e3586a372a094a44ed40b9e9d04110a9" args="(T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, A1, A2), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class A1, class A2&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__5__2.html">_MemberResultCallback_5_2</a>&lt;true,R,T1,P1,P2,P3,P4,P5,A1,A2&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, P5, A1, A2)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l05618">5618</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="fef5132855b95ceae5f3f7cf2ecc0b63"></a><!-- doxytag: member="callback.h::NewCallback" ref="fef5132855b95ceae5f3f7cf2ecc0b63" args="(const T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, A1, A2) const, P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class A1, class A2&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__5__2.html">_ConstMemberResultCallback_5_2</a>&lt;true,R,T1,P1,P2,P3,P4,P5,A1,A2&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, P5, A1, A2) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l05518">5518</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="112e7f4dd7d2d6e6df42df9d0216fdc7"></a><!-- doxytag: member="callback.h::NewCallback" ref="112e7f4dd7d2d6e6df42df9d0216fdc7" args="(R(*function)(P1, P2, P3, P4, A1, A2), P1 p1, P2 p2, P3 p3, P4 p4)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class P2, class P3, class P4, class A1, class A2&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__4__2.html">_FunctionResultCallback_4_2</a>&lt;true,R,P1,P2,P3,P4,A1,A2&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, P2, P3, P4, A1, A2)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l05421">5421</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="af8b48eeaf0fc88f2f0c73d8884f2e0d"></a><!-- doxytag: member="callback.h::NewCallback" ref="af8b48eeaf0fc88f2f0c73d8884f2e0d" args="(T1 *obj, R(T2::*member)(P1, P2, P3, P4, A1, A2), P1 p1, P2 p2, P3 p3, P4 p4)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class A1, class A2&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__4__2.html">_MemberResultCallback_4_2</a>&lt;true,R,T1,P1,P2,P3,P4,A1,A2&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, A1, A2)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l05328">5328</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="34583137c3c62905b298a63400340abf"></a><!-- doxytag: member="callback.h::NewCallback" ref="34583137c3c62905b298a63400340abf" args="(const T1 *obj, R(T2::*member)(P1, P2, P3, P4, A1, A2) const, P1 p1, P2 p2, P3 p3, P4 p4)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class A1, class A2&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__4__2.html">_ConstMemberResultCallback_4_2</a>&lt;true,R,T1,P1,P2,P3,P4,A1,A2&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, A1, A2) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l05230">5230</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="fa788b6351c3327c4273d9b2cde06de9"></a><!-- doxytag: member="callback.h::NewCallback" ref="fa788b6351c3327c4273d9b2cde06de9" args="(R(*function)(P1, P2, P3, A1, A2), P1 p1, P2 p2, P3 p3)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class P2, class P3, class A1, class A2&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__3__2.html">_FunctionResultCallback_3_2</a>&lt;true,R,P1,P2,P3,A1,A2&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, P2, P3, A1, A2)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l05135">5135</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="fd44b8911f6870d7d8d3ce5a5225018f"></a><!-- doxytag: member="callback.h::NewCallback" ref="fd44b8911f6870d7d8d3ce5a5225018f" args="(T1 *obj, R(T2::*member)(P1, P2, P3, A1, A2), P1 p1, P2 p2, P3 p3)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class A1, class A2&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__3__2.html">_MemberResultCallback_3_2</a>&lt;true,R,T1,P1,P2,P3,A1,A2&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, A1, A2)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l05044">5044</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="558b4eb3073a58e18c0844c06d5867bc"></a><!-- doxytag: member="callback.h::NewCallback" ref="558b4eb3073a58e18c0844c06d5867bc" args="(const T1 *obj, R(T2::*member)(P1, P2, P3, A1, A2) const, P1 p1, P2 p2, P3 p3)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class A1, class A2&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__3__2.html">_ConstMemberResultCallback_3_2</a>&lt;true,R,T1,P1,P2,P3,A1,A2&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, A1, A2) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l04948">4948</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="1b30204f23c4062946c699e377455079"></a><!-- doxytag: member="callback.h::NewCallback" ref="1b30204f23c4062946c699e377455079" args="(R(*function)(P1, P2, A1, A2), P1 p1, P2 p2)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class P2, class A1, class A2&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__2__2.html">_FunctionResultCallback_2_2</a>&lt;true,R,P1,P2,A1,A2&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, P2, A1, A2)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l04855">4855</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="6e193532dd8674c5946c9fb3a325f4cb"></a><!-- doxytag: member="callback.h::NewCallback" ref="6e193532dd8674c5946c9fb3a325f4cb" args="(T1 *obj, R(T2::*member)(P1, P2, A1, A2), P1 p1, P2 p2)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class A1, class A2&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__2__2.html">_MemberResultCallback_2_2</a>&lt;true,R,T1,P1,P2,A1,A2&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, A1, A2)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l04766">4766</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="98a7e9b89eac5abcb67a4779854eee4d"></a><!-- doxytag: member="callback.h::NewCallback" ref="98a7e9b89eac5abcb67a4779854eee4d" args="(const T1 *obj, R(T2::*member)(P1, P2, A1, A2) const, P1 p1, P2 p2)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class A1, class A2&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__2__2.html">_ConstMemberResultCallback_2_2</a>&lt;true,R,T1,P1,P2,A1,A2&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, A1, A2) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l04672">4672</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="05677c69b5eb504a0ad6f577fda45161"></a><!-- doxytag: member="callback.h::NewCallback" ref="05677c69b5eb504a0ad6f577fda45161" args="(R(*function)(P1, A1, A2), P1 p1)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class A1, class A2&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__1__2.html">_FunctionResultCallback_1_2</a>&lt;true,R,P1,A1,A2&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, A1, A2)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l04581">4581</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="3a09b30f84b250bfcecfe4c79c0cb589"></a><!-- doxytag: member="callback.h::NewCallback" ref="3a09b30f84b250bfcecfe4c79c0cb589" args="(T1 *obj, R(T2::*member)(P1, A1, A2), P1 p1)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class A1, class A2&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__1__2.html">_MemberResultCallback_1_2</a>&lt;true,R,T1,P1,A1,A2&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, A1, A2)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l04494">4494</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="0686fe1db09a184465cd0d75af5bfe8c"></a><!-- doxytag: member="callback.h::NewCallback" ref="0686fe1db09a184465cd0d75af5bfe8c" args="(const T1 *obj, R(T2::*member)(P1, A1, A2) const, P1 p1)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class A1, class A2&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__1__2.html">_ConstMemberResultCallback_1_2</a>&lt;true,R,T1,P1,A1,A2&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, A1, A2) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l04402">4402</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="ca9f7f72b88dd4196a3df3ce71eab529"></a><!-- doxytag: member="callback.h::NewCallback" ref="ca9f7f72b88dd4196a3df3ce71eab529" args="(R(*function)(A1, A2))" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class A1, class A2&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__0__2.html">_FunctionResultCallback_0_2</a>&lt;true,R,A1,A2&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(A1, A2)&nbsp;</td>
          <td class="paramname"> <em>function</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l04313">4313</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="6e4926fcd3f05138631518c83ee68318"></a><!-- doxytag: member="callback.h::NewCallback" ref="6e4926fcd3f05138631518c83ee68318" args="(T1 *obj, R(T2::*member)(A1, A2))" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class A1, class A2&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__0__2.html">_MemberResultCallback_0_2</a>&lt;true,R,T1,A1,A2&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(A1, A2)&nbsp;</td>
          <td class="paramname"> <em>member</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l04228">4228</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="5aab21d326a86fdc3384cd81c63d3809"></a><!-- doxytag: member="callback.h::NewCallback" ref="5aab21d326a86fdc3384cd81c63d3809" args="(const T1 *obj, R(T2::*member)(A1, A2) const)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class A1, class A2&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__0__2.html">_ConstMemberResultCallback_0_2</a>&lt;true,R,T1,A1,A2&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(A1, A2) const &nbsp;</td>
          <td class="paramname"> <em>member</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l04138">4138</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="cbaecfd02161d397ecfcb7054c701915"></a><!-- doxytag: member="callback.h::NewCallback" ref="cbaecfd02161d397ecfcb7054c701915" args="(R(*function)(P1, P2, P3, P4, P5, P6, A1), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class P2, class P3, class P4, class P5, class P6, class A1&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__6__1.html">_FunctionResultCallback_6_1</a>&lt;true,R,P1,P2,P3,P4,P5,P6,A1&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, P2, P3, P4, P5, P6, A1)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P6&nbsp;</td>
          <td class="paramname"> <em>p6</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l04051">4051</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="ba908c8b40cba6258c15d25314dc6ce4"></a><!-- doxytag: member="callback.h::NewCallback" ref="ba908c8b40cba6258c15d25314dc6ce4" args="(T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, P6, A1), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class P6, class A1&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__6__1.html">_MemberResultCallback_6_1</a>&lt;true,R,T1,P1,P2,P3,P4,P5,P6,A1&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, P5, P6, A1)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P6&nbsp;</td>
          <td class="paramname"> <em>p6</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l03954">3954</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="9941a61574a0a0fbefaf780d63c8435a"></a><!-- doxytag: member="callback.h::NewCallback" ref="9941a61574a0a0fbefaf780d63c8435a" args="(const T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, P6, A1) const, P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class P6, class A1&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__6__1.html">_ConstMemberResultCallback_6_1</a>&lt;true,R,T1,P1,P2,P3,P4,P5,P6,A1&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, P5, P6, A1) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P6&nbsp;</td>
          <td class="paramname"> <em>p6</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l03852">3852</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="12f418f8e7080c39832a7dcaca8e05eb"></a><!-- doxytag: member="callback.h::NewCallback" ref="12f418f8e7080c39832a7dcaca8e05eb" args="(R(*function)(P1, P2, P3, P4, P5, A1), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class P2, class P3, class P4, class P5, class A1&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__5__1.html">_FunctionResultCallback_5_1</a>&lt;true,R,P1,P2,P3,P4,P5,A1&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, P2, P3, P4, P5, A1)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l03753">3753</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="7cff12d2e43c3b9ab7ba0b1715b4f003"></a><!-- doxytag: member="callback.h::NewCallback" ref="7cff12d2e43c3b9ab7ba0b1715b4f003" args="(T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, A1), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class A1&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__5__1.html">_MemberResultCallback_5_1</a>&lt;true,R,T1,P1,P2,P3,P4,P5,A1&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, P5, A1)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l03658">3658</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="02e505f30966b037d49a9406b70565c9"></a><!-- doxytag: member="callback.h::NewCallback" ref="02e505f30966b037d49a9406b70565c9" args="(const T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, A1) const, P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class A1&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__5__1.html">_ConstMemberResultCallback_5_1</a>&lt;true,R,T1,P1,P2,P3,P4,P5,A1&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, P5, A1) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l03558">3558</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="077661fb29e1e0fe06a64d3d6daa5551"></a><!-- doxytag: member="callback.h::NewCallback" ref="077661fb29e1e0fe06a64d3d6daa5551" args="(R(*function)(P1, P2, P3, P4, A1), P1 p1, P2 p2, P3 p3, P4 p4)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class P2, class P3, class P4, class A1&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__4__1.html">_FunctionResultCallback_4_1</a>&lt;true,R,P1,P2,P3,P4,A1&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, P2, P3, P4, A1)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l03461">3461</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="3662c1fe25a73036f328ea9acfa5168a"></a><!-- doxytag: member="callback.h::NewCallback" ref="3662c1fe25a73036f328ea9acfa5168a" args="(T1 *obj, R(T2::*member)(P1, P2, P3, P4, A1), P1 p1, P2 p2, P3 p3, P4 p4)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class A1&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__4__1.html">_MemberResultCallback_4_1</a>&lt;true,R,T1,P1,P2,P3,P4,A1&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, A1)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l03368">3368</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="20f69f1d7b57efd99e155fcae331ba14"></a><!-- doxytag: member="callback.h::NewCallback" ref="20f69f1d7b57efd99e155fcae331ba14" args="(const T1 *obj, R(T2::*member)(P1, P2, P3, P4, A1) const, P1 p1, P2 p2, P3 p3, P4 p4)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class A1&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__4__1.html">_ConstMemberResultCallback_4_1</a>&lt;true,R,T1,P1,P2,P3,P4,A1&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, A1) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l03270">3270</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="abd3c9d31522d4a8a793b763fe04e494"></a><!-- doxytag: member="callback.h::NewCallback" ref="abd3c9d31522d4a8a793b763fe04e494" args="(R(*function)(P1, P2, P3, A1), P1 p1, P2 p2, P3 p3)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class P2, class P3, class A1&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__3__1.html">_FunctionResultCallback_3_1</a>&lt;true,R,P1,P2,P3,A1&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, P2, P3, A1)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l03175">3175</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="2179fb81bb273a1f9b4ab1a1a4af0cb7"></a><!-- doxytag: member="callback.h::NewCallback" ref="2179fb81bb273a1f9b4ab1a1a4af0cb7" args="(T1 *obj, R(T2::*member)(P1, P2, P3, A1), P1 p1, P2 p2, P3 p3)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class A1&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__3__1.html">_MemberResultCallback_3_1</a>&lt;true,R,T1,P1,P2,P3,A1&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, A1)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l03084">3084</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="8f505ba07827f2e8ac7127997bad1c70"></a><!-- doxytag: member="callback.h::NewCallback" ref="8f505ba07827f2e8ac7127997bad1c70" args="(const T1 *obj, R(T2::*member)(P1, P2, P3, A1) const, P1 p1, P2 p2, P3 p3)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class A1&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__3__1.html">_ConstMemberResultCallback_3_1</a>&lt;true,R,T1,P1,P2,P3,A1&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, A1) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l02988">2988</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="8434bb5b9d2c42c43304e8fbb50c9e25"></a><!-- doxytag: member="callback.h::NewCallback" ref="8434bb5b9d2c42c43304e8fbb50c9e25" args="(R(*function)(P1, P2, A1), P1 p1, P2 p2)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class P2, class A1&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__2__1.html">_FunctionResultCallback_2_1</a>&lt;true,R,P1,P2,A1&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, P2, A1)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l02895">2895</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="0d02f25f64761e14c9fbb7286683430d"></a><!-- doxytag: member="callback.h::NewCallback" ref="0d02f25f64761e14c9fbb7286683430d" args="(T1 *obj, R(T2::*member)(P1, P2, A1), P1 p1, P2 p2)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class A1&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__2__1.html">_MemberResultCallback_2_1</a>&lt;true,R,T1,P1,P2,A1&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, A1)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l02806">2806</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="c92e33160c65a321a4df102a4eca507d"></a><!-- doxytag: member="callback.h::NewCallback" ref="c92e33160c65a321a4df102a4eca507d" args="(const T1 *obj, R(T2::*member)(P1, P2, A1) const, P1 p1, P2 p2)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class A1&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__2__1.html">_ConstMemberResultCallback_2_1</a>&lt;true,R,T1,P1,P2,A1&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, A1) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l02712">2712</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="2e9e7efc8da531d02a71a06fd0e836f2"></a><!-- doxytag: member="callback.h::NewCallback" ref="2e9e7efc8da531d02a71a06fd0e836f2" args="(R(*function)(P1, A1), P1 p1)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class A1&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__1__1.html">_FunctionResultCallback_1_1</a>&lt;true,R,P1,A1&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, A1)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l02621">2621</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="9e10debeafaf7b37540da5de82999294"></a><!-- doxytag: member="callback.h::NewCallback" ref="9e10debeafaf7b37540da5de82999294" args="(T1 *obj, R(T2::*member)(P1, A1), P1 p1)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class A1&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__1__1.html">_MemberResultCallback_1_1</a>&lt;true,R,T1,P1,A1&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, A1)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l02534">2534</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="cd17baf2bc20418d05c6d2ce0190c2bb"></a><!-- doxytag: member="callback.h::NewCallback" ref="cd17baf2bc20418d05c6d2ce0190c2bb" args="(const T1 *obj, R(T2::*member)(P1, A1) const, P1 p1)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class A1&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__1__1.html">_ConstMemberResultCallback_1_1</a>&lt;true,R,T1,P1,A1&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, A1) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l02442">2442</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="b9446c5b0c386af0ef37a91700f54789"></a><!-- doxytag: member="callback.h::NewCallback" ref="b9446c5b0c386af0ef37a91700f54789" args="(R(*function)(A1))" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class A1&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__0__1.html">_FunctionResultCallback_0_1</a>&lt;true,R,A1&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(A1)&nbsp;</td>
          <td class="paramname"> <em>function</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l02353">2353</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="c43ec9ef0fdec307a252cb46d877b31c"></a><!-- doxytag: member="callback.h::NewCallback" ref="c43ec9ef0fdec307a252cb46d877b31c" args="(T1 *obj, R(T2::*member)(A1))" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class A1&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__0__1.html">_MemberResultCallback_0_1</a>&lt;true,R,T1,A1&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(A1)&nbsp;</td>
          <td class="paramname"> <em>member</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l02268">2268</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="4f5942d0ad402cee3fac239fafc844a5"></a><!-- doxytag: member="callback.h::NewCallback" ref="4f5942d0ad402cee3fac239fafc844a5" args="(const T1 *obj, R(T2::*member)(A1) const)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class A1&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__0__1.html">_ConstMemberResultCallback_0_1</a>&lt;true,R,T1,A1&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(A1) const &nbsp;</td>
          <td class="paramname"> <em>member</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l02178">2178</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="58a7b6157f43dbf16351e0aa8fc20133"></a><!-- doxytag: member="callback.h::NewCallback" ref="58a7b6157f43dbf16351e0aa8fc20133" args="(R(*function)(P1, P2, P3, P4, P5, P6), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class P2, class P3, class P4, class P5, class P6&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__6__0.html">_FunctionResultCallback_6_0</a>&lt;true,R,P1,P2,P3,P4,P5,P6&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, P2, P3, P4, P5, P6)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P6&nbsp;</td>
          <td class="paramname"> <em>p6</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l02091">2091</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="52d78e42c2ea263eeff1bfe2a6813b37"></a><!-- doxytag: member="callback.h::NewCallback" ref="52d78e42c2ea263eeff1bfe2a6813b37" args="(T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, P6), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class P6&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__6__0.html">_MemberResultCallback_6_0</a>&lt;true,R,T1,P1,P2,P3,P4,P5,P6&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, P5, P6)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P6&nbsp;</td>
          <td class="paramname"> <em>p6</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l01994">1994</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="36efdc7f55572101ad6cb53677107836"></a><!-- doxytag: member="callback.h::NewCallback" ref="36efdc7f55572101ad6cb53677107836" args="(const T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, P6) const, P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class P6&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__6__0.html">_ConstMemberResultCallback_6_0</a>&lt;true,R,T1,P1,P2,P3,P4,P5,P6&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, P5, P6) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P6&nbsp;</td>
          <td class="paramname"> <em>p6</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l01892">1892</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="2de9e850b6dcacd07dc40c9433b69fad"></a><!-- doxytag: member="callback.h::NewCallback" ref="2de9e850b6dcacd07dc40c9433b69fad" args="(R(*function)(P1, P2, P3, P4, P5), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class P2, class P3, class P4, class P5&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__5__0.html">_FunctionResultCallback_5_0</a>&lt;true,R,P1,P2,P3,P4,P5&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, P2, P3, P4, P5)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l01793">1793</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="0869e2845d4b346048f225021546ced3"></a><!-- doxytag: member="callback.h::NewCallback" ref="0869e2845d4b346048f225021546ced3" args="(T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__5__0.html">_MemberResultCallback_5_0</a>&lt;true,R,T1,P1,P2,P3,P4,P5&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, P5)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l01698">1698</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="b8cdab07e9839c558958c3485358ae35"></a><!-- doxytag: member="callback.h::NewCallback" ref="b8cdab07e9839c558958c3485358ae35" args="(const T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5) const, P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__5__0.html">_ConstMemberResultCallback_5_0</a>&lt;true,R,T1,P1,P2,P3,P4,P5&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, P5) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l01598">1598</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="cce9c944fca2b1c7fad9966cf289983a"></a><!-- doxytag: member="callback.h::NewCallback" ref="cce9c944fca2b1c7fad9966cf289983a" args="(R(*function)(P1, P2, P3, P4), P1 p1, P2 p2, P3 p3, P4 p4)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class P2, class P3, class P4&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__4__0.html">_FunctionResultCallback_4_0</a>&lt;true,R,P1,P2,P3,P4&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, P2, P3, P4)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l01501">1501</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="9f16a0f671be5ad6642110819d9bd39b"></a><!-- doxytag: member="callback.h::NewCallback" ref="9f16a0f671be5ad6642110819d9bd39b" args="(T1 *obj, R(T2::*member)(P1, P2, P3, P4), P1 p1, P2 p2, P3 p3, P4 p4)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__4__0.html">_MemberResultCallback_4_0</a>&lt;true,R,T1,P1,P2,P3,P4&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l01408">1408</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="db0fb1ff690468271e9fc0b27300fea2"></a><!-- doxytag: member="callback.h::NewCallback" ref="db0fb1ff690468271e9fc0b27300fea2" args="(const T1 *obj, R(T2::*member)(P1, P2, P3, P4) const, P1 p1, P2 p2, P3 p3, P4 p4)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__4__0.html">_ConstMemberResultCallback_4_0</a>&lt;true,R,T1,P1,P2,P3,P4&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l01310">1310</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="8a286ebd6c228d28250d29d34f1ce44a"></a><!-- doxytag: member="callback.h::NewCallback" ref="8a286ebd6c228d28250d29d34f1ce44a" args="(R(*function)(P1, P2, P3), P1 p1, P2 p2, P3 p3)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class P2, class P3&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__3__0.html">_FunctionResultCallback_3_0</a>&lt;true,R,P1,P2,P3&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, P2, P3)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l01215">1215</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="ffccbb57d0f5ec47c558c35903fbf1d8"></a><!-- doxytag: member="callback.h::NewCallback" ref="ffccbb57d0f5ec47c558c35903fbf1d8" args="(T1 *obj, R(T2::*member)(P1, P2, P3), P1 p1, P2 p2, P3 p3)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__3__0.html">_MemberResultCallback_3_0</a>&lt;true,R,T1,P1,P2,P3&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l01124">1124</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="bafcf9910761047cde7ba0a0a31e834c"></a><!-- doxytag: member="callback.h::NewCallback" ref="bafcf9910761047cde7ba0a0a31e834c" args="(const T1 *obj, R(T2::*member)(P1, P2, P3) const, P1 p1, P2 p2, P3 p3)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__3__0.html">_ConstMemberResultCallback_3_0</a>&lt;true,R,T1,P1,P2,P3&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l01028">1028</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="ecbb4036bf7a6f926ded6ad54bcb616a"></a><!-- doxytag: member="callback.h::NewCallback" ref="ecbb4036bf7a6f926ded6ad54bcb616a" args="(R(*function)(P1, P2), P1 p1, P2 p2)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class P2&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__2__0.html">_FunctionResultCallback_2_0</a>&lt;true,R,P1,P2&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, P2)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l00935">935</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="5514b889c48c63218423d516f2d4b8e6"></a><!-- doxytag: member="callback.h::NewCallback" ref="5514b889c48c63218423d516f2d4b8e6" args="(T1 *obj, R(T2::*member)(P1, P2), P1 p1, P2 p2)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__2__0.html">_MemberResultCallback_2_0</a>&lt;true,R,T1,P1,P2&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l00846">846</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="9a350d7d13aca9aa4e77d9176438897a"></a><!-- doxytag: member="callback.h::NewCallback" ref="9a350d7d13aca9aa4e77d9176438897a" args="(const T1 *obj, R(T2::*member)(P1, P2) const, P1 p1, P2 p2)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__2__0.html">_ConstMemberResultCallback_2_0</a>&lt;true,R,T1,P1,P2&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l00752">752</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="c67017ca9c1aea987880dfbcdc7a240f"></a><!-- doxytag: member="callback.h::NewCallback" ref="c67017ca9c1aea987880dfbcdc7a240f" args="(R(*function)(P1), P1 p1)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__1__0.html">_FunctionResultCallback_1_0</a>&lt;true,R,P1&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l00661">661</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="363b07c51a0ad0280c9dd35b7c8d80a5"></a><!-- doxytag: member="callback.h::NewCallback" ref="363b07c51a0ad0280c9dd35b7c8d80a5" args="(T1 *obj, R(T2::*member)(P1), P1 p1)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__1__0.html">_MemberResultCallback_1_0</a>&lt;true,R,T1,P1&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l00574">574</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="4cef76127175c3cc90e05e61ed196dc8"></a><!-- doxytag: member="callback.h::NewCallback" ref="4cef76127175c3cc90e05e61ed196dc8" args="(const T1 *obj, R(T2::*member)(P1) const, P1 p1)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__1__0.html">_ConstMemberResultCallback_1_0</a>&lt;true,R,T1,P1&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l00482">482</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="578328280bfc6bfece7b552b9b5341c3"></a><!-- doxytag: member="callback.h::NewCallback" ref="578328280bfc6bfece7b552b9b5341c3" args="(R(*function)())" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__0__0.html">_FunctionResultCallback_0_0</a>&lt;true,R&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)()&nbsp;</td>
          <td class="paramname"> <em>function</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l00393">393</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="f469d23e75fd01c550904dfd0953aad8"></a><!-- doxytag: member="callback.h::NewCallback" ref="f469d23e75fd01c550904dfd0953aad8" args="(T1 *obj, R(T2::*member)())" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__0__0.html">_MemberResultCallback_0_0</a>&lt;true,R,T1&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)()&nbsp;</td>
          <td class="paramname"> <em>member</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l00308">308</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="799bc4c709b203c1e50ee52a854df8c7"></a><!-- doxytag: member="callback.h::NewCallback" ref="799bc4c709b203c1e50ee52a854df8c7" args="(const T1 *obj, R(T2::*member)() const)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__0__0.html">_ConstMemberResultCallback_0_0</a>&lt;true,R,T1&gt;::base* NewCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)() const &nbsp;</td>
          <td class="paramname"> <em>member</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l00218">218</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="46af9e05580348cae423bf798e1e120e"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="46af9e05580348cae423bf798e1e120e" args="(R(*function)(P1, P2, P3, P4, P5, P6, A1, A2, A3, A4, A5), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class P2, class P3, class P4, class P5, class P6, class A1, class A2, class A3, class A4, class A5&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__6__5.html">_FunctionResultCallback_6_5</a>&lt;false,R,P1,P2,P3,P4,P5,P6,A1,A2,A3,A4,A5&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, P2, P3, P4, P5, P6, A1, A2, A3, A4, A5)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P6&nbsp;</td>
          <td class="paramname"> <em>p6</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
BASE_CALLBACK_H_. 
<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l11897">11897</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="b8168bd314892d9d2b8a06f418070fe1"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="b8168bd314892d9d2b8a06f418070fe1" args="(T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, P6, A1, A2, A3, A4, A5), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class P6, class A1, class A2, class A3, class A4, class A5&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__6__5.html">_MemberResultCallback_6_5</a>&lt;false,R,T1,P1,P2,P3,P4,P5,P6,A1,A2,A3,A4,A5&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, P5, P6, A1, A2, A3, A4, A5)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P6&nbsp;</td>
          <td class="paramname"> <em>p6</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l11802">11802</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="bafdf65efc6e5b86a0c31c22e33659dd"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="bafdf65efc6e5b86a0c31c22e33659dd" args="(const T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, P6, A1, A2, A3, A4, A5) const, P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class P6, class A1, class A2, class A3, class A4, class A5&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__6__5.html">_ConstMemberResultCallback_6_5</a>&lt;false,R,T1,P1,P2,P3,P4,P5,P6,A1,A2,A3,A4,A5&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, P5, P6, A1, A2, A3, A4, A5) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P6&nbsp;</td>
          <td class="paramname"> <em>p6</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l11700">11700</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="02b84be1a138bbf060873e4f1758470c"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="02b84be1a138bbf060873e4f1758470c" args="(R(*function)(P1, P2, P3, P4, P5, A1, A2, A3, A4, A5), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class P2, class P3, class P4, class P5, class A1, class A2, class A3, class A4, class A5&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__5__5.html">_FunctionResultCallback_5_5</a>&lt;false,R,P1,P2,P3,P4,P5,A1,A2,A3,A4,A5&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, P2, P3, P4, P5, A1, A2, A3, A4, A5)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l11599">11599</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="9fe6f5da5d64973ac24192e3dab3c193"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="9fe6f5da5d64973ac24192e3dab3c193" args="(T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, A1, A2, A3, A4, A5), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class A1, class A2, class A3, class A4, class A5&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__5__5.html">_MemberResultCallback_5_5</a>&lt;false,R,T1,P1,P2,P3,P4,P5,A1,A2,A3,A4,A5&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, P5, A1, A2, A3, A4, A5)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l11506">11506</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="10c7ccfb65325f4c2283fcf2d8fb773a"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="10c7ccfb65325f4c2283fcf2d8fb773a" args="(const T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, A1, A2, A3, A4, A5) const, P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class A1, class A2, class A3, class A4, class A5&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__5__5.html">_ConstMemberResultCallback_5_5</a>&lt;false,R,T1,P1,P2,P3,P4,P5,A1,A2,A3,A4,A5&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, P5, A1, A2, A3, A4, A5) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l11406">11406</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="881f9c19ee43e0438cce0caa58f05e40"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="881f9c19ee43e0438cce0caa58f05e40" args="(R(*function)(P1, P2, P3, P4, A1, A2, A3, A4, A5), P1 p1, P2 p2, P3 p3, P4 p4)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class P2, class P3, class P4, class A1, class A2, class A3, class A4, class A5&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__4__5.html">_FunctionResultCallback_4_5</a>&lt;false,R,P1,P2,P3,P4,A1,A2,A3,A4,A5&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, P2, P3, P4, A1, A2, A3, A4, A5)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l11307">11307</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="769eb76e02a42144d8181e82c3fa9344"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="769eb76e02a42144d8181e82c3fa9344" args="(T1 *obj, R(T2::*member)(P1, P2, P3, P4, A1, A2, A3, A4, A5), P1 p1, P2 p2, P3 p3, P4 p4)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class A1, class A2, class A3, class A4, class A5&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__4__5.html">_MemberResultCallback_4_5</a>&lt;false,R,T1,P1,P2,P3,P4,A1,A2,A3,A4,A5&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, A1, A2, A3, A4, A5)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l11216">11216</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="174293f810de4d51b5df98d17b449aaf"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="174293f810de4d51b5df98d17b449aaf" args="(const T1 *obj, R(T2::*member)(P1, P2, P3, P4, A1, A2, A3, A4, A5) const, P1 p1, P2 p2, P3 p3, P4 p4)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class A1, class A2, class A3, class A4, class A5&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__4__5.html">_ConstMemberResultCallback_4_5</a>&lt;false,R,T1,P1,P2,P3,P4,A1,A2,A3,A4,A5&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, A1, A2, A3, A4, A5) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l11118">11118</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="88e4c3599157f68f03442a9a52e5c5fb"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="88e4c3599157f68f03442a9a52e5c5fb" args="(R(*function)(P1, P2, P3, A1, A2, A3, A4, A5), P1 p1, P2 p2, P3 p3)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class P2, class P3, class A1, class A2, class A3, class A4, class A5&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__3__5.html">_FunctionResultCallback_3_5</a>&lt;false,R,P1,P2,P3,A1,A2,A3,A4,A5&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, P2, P3, A1, A2, A3, A4, A5)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l11021">11021</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="f3cb12c6a3e6358d102b6e3a01d2f054"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="f3cb12c6a3e6358d102b6e3a01d2f054" args="(T1 *obj, R(T2::*member)(P1, P2, P3, A1, A2, A3, A4, A5), P1 p1, P2 p2, P3 p3)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class A1, class A2, class A3, class A4, class A5&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__3__5.html">_MemberResultCallback_3_5</a>&lt;false,R,T1,P1,P2,P3,A1,A2,A3,A4,A5&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, A1, A2, A3, A4, A5)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l10932">10932</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="8188ac15bcd1a371a0077983803cc969"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="8188ac15bcd1a371a0077983803cc969" args="(const T1 *obj, R(T2::*member)(P1, P2, P3, A1, A2, A3, A4, A5) const, P1 p1, P2 p2, P3 p3)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class A1, class A2, class A3, class A4, class A5&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__3__5.html">_ConstMemberResultCallback_3_5</a>&lt;false,R,T1,P1,P2,P3,A1,A2,A3,A4,A5&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, A1, A2, A3, A4, A5) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l10836">10836</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="b9c44485c7573c9e85c7170cbdd5d9d4"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="b9c44485c7573c9e85c7170cbdd5d9d4" args="(R(*function)(P1, P2, A1, A2, A3, A4, A5), P1 p1, P2 p2)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class P2, class A1, class A2, class A3, class A4, class A5&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__2__5.html">_FunctionResultCallback_2_5</a>&lt;false,R,P1,P2,A1,A2,A3,A4,A5&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, P2, A1, A2, A3, A4, A5)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l10741">10741</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="5725ffa4a1203976b25a8c6c2cd62a30"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="5725ffa4a1203976b25a8c6c2cd62a30" args="(T1 *obj, R(T2::*member)(P1, P2, A1, A2, A3, A4, A5), P1 p1, P2 p2)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class A1, class A2, class A3, class A4, class A5&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__2__5.html">_MemberResultCallback_2_5</a>&lt;false,R,T1,P1,P2,A1,A2,A3,A4,A5&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, A1, A2, A3, A4, A5)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l10654">10654</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="776a27ab81754fd64f524622b9dfab0a"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="776a27ab81754fd64f524622b9dfab0a" args="(const T1 *obj, R(T2::*member)(P1, P2, A1, A2, A3, A4, A5) const, P1 p1, P2 p2)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class A1, class A2, class A3, class A4, class A5&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__2__5.html">_ConstMemberResultCallback_2_5</a>&lt;false,R,T1,P1,P2,A1,A2,A3,A4,A5&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, A1, A2, A3, A4, A5) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l10560">10560</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="65a011480087b10d392fbdf081506808"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="65a011480087b10d392fbdf081506808" args="(R(*function)(P1, A1, A2, A3, A4, A5), P1 p1)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class A1, class A2, class A3, class A4, class A5&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__1__5.html">_FunctionResultCallback_1_5</a>&lt;false,R,P1,A1,A2,A3,A4,A5&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, A1, A2, A3, A4, A5)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l10467">10467</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="f2247d16f22f2eaba4e455c61464f716"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="f2247d16f22f2eaba4e455c61464f716" args="(T1 *obj, R(T2::*member)(P1, A1, A2, A3, A4, A5), P1 p1)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class A1, class A2, class A3, class A4, class A5&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__1__5.html">_MemberResultCallback_1_5</a>&lt;false,R,T1,P1,A1,A2,A3,A4,A5&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, A1, A2, A3, A4, A5)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l10382">10382</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="80bb728a86f4a34b756a6c90b898e617"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="80bb728a86f4a34b756a6c90b898e617" args="(const T1 *obj, R(T2::*member)(P1, A1, A2, A3, A4, A5) const, P1 p1)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class A1, class A2, class A3, class A4, class A5&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__1__5.html">_ConstMemberResultCallback_1_5</a>&lt;false,R,T1,P1,A1,A2,A3,A4,A5&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, A1, A2, A3, A4, A5) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l10290">10290</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="dabf863e553723aae69c66435fa7118e"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="dabf863e553723aae69c66435fa7118e" args="(R(*function)(A1, A2, A3, A4, A5))" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class A1, class A2, class A3, class A4, class A5&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__0__5.html">_FunctionResultCallback_0_5</a>&lt;false,R,A1,A2,A3,A4,A5&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(A1, A2, A3, A4, A5)&nbsp;</td>
          <td class="paramname"> <em>function</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l10199">10199</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="0b82bdba0a8c8cdb6d30cd7e8bab30f5"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="0b82bdba0a8c8cdb6d30cd7e8bab30f5" args="(T1 *obj, R(T2::*member)(A1, A2, A3, A4, A5))" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class A1, class A2, class A3, class A4, class A5&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__0__5.html">_MemberResultCallback_0_5</a>&lt;false,R,T1,A1,A2,A3,A4,A5&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(A1, A2, A3, A4, A5)&nbsp;</td>
          <td class="paramname"> <em>member</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l10116">10116</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="1c3264965bac736173ab389556fc87f1"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="1c3264965bac736173ab389556fc87f1" args="(const T1 *obj, R(T2::*member)(A1, A2, A3, A4, A5) const)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class A1, class A2, class A3, class A4, class A5&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__0__5.html">_ConstMemberResultCallback_0_5</a>&lt;false,R,T1,A1,A2,A3,A4,A5&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(A1, A2, A3, A4, A5) const &nbsp;</td>
          <td class="paramname"> <em>member</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l10026">10026</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="5a5fb97eca72af50e72a05049778242c"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="5a5fb97eca72af50e72a05049778242c" args="(R(*function)(P1, P2, P3, P4, P5, P6, A1, A2, A3, A4), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class P2, class P3, class P4, class P5, class P6, class A1, class A2, class A3, class A4&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__6__4.html">_FunctionResultCallback_6_4</a>&lt;false,R,P1,P2,P3,P4,P5,P6,A1,A2,A3,A4&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, P2, P3, P4, P5, P6, A1, A2, A3, A4)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P6&nbsp;</td>
          <td class="paramname"> <em>p6</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l09937">9937</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="06613d8201d46d233e2508ad2a262980"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="06613d8201d46d233e2508ad2a262980" args="(T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, P6, A1, A2, A3, A4), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class P6, class A1, class A2, class A3, class A4&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__6__4.html">_MemberResultCallback_6_4</a>&lt;false,R,T1,P1,P2,P3,P4,P5,P6,A1,A2,A3,A4&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, P5, P6, A1, A2, A3, A4)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P6&nbsp;</td>
          <td class="paramname"> <em>p6</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l09842">9842</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="0adca8963f7e9cb407babadb53f1a146"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="0adca8963f7e9cb407babadb53f1a146" args="(const T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, P6, A1, A2, A3, A4) const, P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class P6, class A1, class A2, class A3, class A4&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__6__4.html">_ConstMemberResultCallback_6_4</a>&lt;false,R,T1,P1,P2,P3,P4,P5,P6,A1,A2,A3,A4&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, P5, P6, A1, A2, A3, A4) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P6&nbsp;</td>
          <td class="paramname"> <em>p6</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l09740">9740</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="2adde477c0161ef4f85168a01da26f53"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="2adde477c0161ef4f85168a01da26f53" args="(R(*function)(P1, P2, P3, P4, P5, A1, A2, A3, A4), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class P2, class P3, class P4, class P5, class A1, class A2, class A3, class A4&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__5__4.html">_FunctionResultCallback_5_4</a>&lt;false,R,P1,P2,P3,P4,P5,A1,A2,A3,A4&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, P2, P3, P4, P5, A1, A2, A3, A4)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l09639">9639</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="b8013e7ce114e02e6293a28238d64ede"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="b8013e7ce114e02e6293a28238d64ede" args="(T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, A1, A2, A3, A4), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class A1, class A2, class A3, class A4&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__5__4.html">_MemberResultCallback_5_4</a>&lt;false,R,T1,P1,P2,P3,P4,P5,A1,A2,A3,A4&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, P5, A1, A2, A3, A4)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l09546">9546</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="474d97e1db05f40aeaff13614a888074"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="474d97e1db05f40aeaff13614a888074" args="(const T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, A1, A2, A3, A4) const, P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class A1, class A2, class A3, class A4&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__5__4.html">_ConstMemberResultCallback_5_4</a>&lt;false,R,T1,P1,P2,P3,P4,P5,A1,A2,A3,A4&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, P5, A1, A2, A3, A4) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l09446">9446</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="a895032093a8b9481a5fc464026b2bcb"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="a895032093a8b9481a5fc464026b2bcb" args="(R(*function)(P1, P2, P3, P4, A1, A2, A3, A4), P1 p1, P2 p2, P3 p3, P4 p4)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class P2, class P3, class P4, class A1, class A2, class A3, class A4&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__4__4.html">_FunctionResultCallback_4_4</a>&lt;false,R,P1,P2,P3,P4,A1,A2,A3,A4&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, P2, P3, P4, A1, A2, A3, A4)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l09347">9347</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="9feb43abbcae4fa2be7efe336034e147"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="9feb43abbcae4fa2be7efe336034e147" args="(T1 *obj, R(T2::*member)(P1, P2, P3, P4, A1, A2, A3, A4), P1 p1, P2 p2, P3 p3, P4 p4)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class A1, class A2, class A3, class A4&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__4__4.html">_MemberResultCallback_4_4</a>&lt;false,R,T1,P1,P2,P3,P4,A1,A2,A3,A4&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, A1, A2, A3, A4)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l09256">9256</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="4fb061ba07367299c4418eafd80231aa"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="4fb061ba07367299c4418eafd80231aa" args="(const T1 *obj, R(T2::*member)(P1, P2, P3, P4, A1, A2, A3, A4) const, P1 p1, P2 p2, P3 p3, P4 p4)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class A1, class A2, class A3, class A4&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__4__4.html">_ConstMemberResultCallback_4_4</a>&lt;false,R,T1,P1,P2,P3,P4,A1,A2,A3,A4&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, A1, A2, A3, A4) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l09158">9158</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="1ad94b2697e14d3e8669f255167d5af6"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="1ad94b2697e14d3e8669f255167d5af6" args="(R(*function)(P1, P2, P3, A1, A2, A3, A4), P1 p1, P2 p2, P3 p3)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class P2, class P3, class A1, class A2, class A3, class A4&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__3__4.html">_FunctionResultCallback_3_4</a>&lt;false,R,P1,P2,P3,A1,A2,A3,A4&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, P2, P3, A1, A2, A3, A4)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l09061">9061</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="880b8a4e31e185bed5f9456cc90e5b31"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="880b8a4e31e185bed5f9456cc90e5b31" args="(T1 *obj, R(T2::*member)(P1, P2, P3, A1, A2, A3, A4), P1 p1, P2 p2, P3 p3)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class A1, class A2, class A3, class A4&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__3__4.html">_MemberResultCallback_3_4</a>&lt;false,R,T1,P1,P2,P3,A1,A2,A3,A4&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, A1, A2, A3, A4)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l08972">8972</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="2f4c603211e51649766b95f89c0644bc"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="2f4c603211e51649766b95f89c0644bc" args="(const T1 *obj, R(T2::*member)(P1, P2, P3, A1, A2, A3, A4) const, P1 p1, P2 p2, P3 p3)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class A1, class A2, class A3, class A4&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__3__4.html">_ConstMemberResultCallback_3_4</a>&lt;false,R,T1,P1,P2,P3,A1,A2,A3,A4&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, A1, A2, A3, A4) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l08876">8876</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="7f881d0b8c6142477d5f3e853e86e951"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="7f881d0b8c6142477d5f3e853e86e951" args="(R(*function)(P1, P2, A1, A2, A3, A4), P1 p1, P2 p2)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class P2, class A1, class A2, class A3, class A4&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__2__4.html">_FunctionResultCallback_2_4</a>&lt;false,R,P1,P2,A1,A2,A3,A4&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, P2, A1, A2, A3, A4)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l08781">8781</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="88e1e6d6e278a7bd7b147ad7e5afb4b9"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="88e1e6d6e278a7bd7b147ad7e5afb4b9" args="(T1 *obj, R(T2::*member)(P1, P2, A1, A2, A3, A4), P1 p1, P2 p2)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class A1, class A2, class A3, class A4&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__2__4.html">_MemberResultCallback_2_4</a>&lt;false,R,T1,P1,P2,A1,A2,A3,A4&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, A1, A2, A3, A4)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l08694">8694</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="ce55f3ad7844e3fe6ebb66a3da6a5134"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="ce55f3ad7844e3fe6ebb66a3da6a5134" args="(const T1 *obj, R(T2::*member)(P1, P2, A1, A2, A3, A4) const, P1 p1, P2 p2)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class A1, class A2, class A3, class A4&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__2__4.html">_ConstMemberResultCallback_2_4</a>&lt;false,R,T1,P1,P2,A1,A2,A3,A4&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, A1, A2, A3, A4) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l08600">8600</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="ea59712123f641862092b0cef77383a6"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="ea59712123f641862092b0cef77383a6" args="(R(*function)(P1, A1, A2, A3, A4), P1 p1)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class A1, class A2, class A3, class A4&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__1__4.html">_FunctionResultCallback_1_4</a>&lt;false,R,P1,A1,A2,A3,A4&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, A1, A2, A3, A4)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l08507">8507</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="bd3028f0747b7245eb132521cd603334"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="bd3028f0747b7245eb132521cd603334" args="(T1 *obj, R(T2::*member)(P1, A1, A2, A3, A4), P1 p1)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class A1, class A2, class A3, class A4&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__1__4.html">_MemberResultCallback_1_4</a>&lt;false,R,T1,P1,A1,A2,A3,A4&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, A1, A2, A3, A4)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l08422">8422</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="bf07ad985b2c30a2bd53edf2e8bbea84"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="bf07ad985b2c30a2bd53edf2e8bbea84" args="(const T1 *obj, R(T2::*member)(P1, A1, A2, A3, A4) const, P1 p1)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class A1, class A2, class A3, class A4&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__1__4.html">_ConstMemberResultCallback_1_4</a>&lt;false,R,T1,P1,A1,A2,A3,A4&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, A1, A2, A3, A4) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l08330">8330</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="4c30b5d7385fa252f3c601f7b8082135"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="4c30b5d7385fa252f3c601f7b8082135" args="(R(*function)(A1, A2, A3, A4))" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class A1, class A2, class A3, class A4&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__0__4.html">_FunctionResultCallback_0_4</a>&lt;false,R,A1,A2,A3,A4&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(A1, A2, A3, A4)&nbsp;</td>
          <td class="paramname"> <em>function</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l08239">8239</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="dc841d5ae55b6da983177b95e377d5ee"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="dc841d5ae55b6da983177b95e377d5ee" args="(T1 *obj, R(T2::*member)(A1, A2, A3, A4))" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class A1, class A2, class A3, class A4&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__0__4.html">_MemberResultCallback_0_4</a>&lt;false,R,T1,A1,A2,A3,A4&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(A1, A2, A3, A4)&nbsp;</td>
          <td class="paramname"> <em>member</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l08156">8156</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="0c41f4e5518ce9025fb624d401e5c67c"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="0c41f4e5518ce9025fb624d401e5c67c" args="(const T1 *obj, R(T2::*member)(A1, A2, A3, A4) const)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class A1, class A2, class A3, class A4&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__0__4.html">_ConstMemberResultCallback_0_4</a>&lt;false,R,T1,A1,A2,A3,A4&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(A1, A2, A3, A4) const &nbsp;</td>
          <td class="paramname"> <em>member</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l08066">8066</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="8b7aee3041d458badd2506070de616c9"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="8b7aee3041d458badd2506070de616c9" args="(R(*function)(P1, P2, P3, P4, P5, P6, A1, A2, A3), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class P2, class P3, class P4, class P5, class P6, class A1, class A2, class A3&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__6__3.html">_FunctionResultCallback_6_3</a>&lt;false,R,P1,P2,P3,P4,P5,P6,A1,A2,A3&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, P2, P3, P4, P5, P6, A1, A2, A3)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P6&nbsp;</td>
          <td class="paramname"> <em>p6</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l07977">7977</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="391af2d130090c784e39a5021c77747f"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="391af2d130090c784e39a5021c77747f" args="(T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, P6, A1, A2, A3), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class P6, class A1, class A2, class A3&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__6__3.html">_MemberResultCallback_6_3</a>&lt;false,R,T1,P1,P2,P3,P4,P5,P6,A1,A2,A3&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, P5, P6, A1, A2, A3)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P6&nbsp;</td>
          <td class="paramname"> <em>p6</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l07882">7882</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="ba4baf7fc5f5dd476e870ce7171a040a"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="ba4baf7fc5f5dd476e870ce7171a040a" args="(const T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, P6, A1, A2, A3) const, P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class P6, class A1, class A2, class A3&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__6__3.html">_ConstMemberResultCallback_6_3</a>&lt;false,R,T1,P1,P2,P3,P4,P5,P6,A1,A2,A3&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, P5, P6, A1, A2, A3) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P6&nbsp;</td>
          <td class="paramname"> <em>p6</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l07780">7780</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="edab4dbbf608b3ef12d02205fc8eb236"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="edab4dbbf608b3ef12d02205fc8eb236" args="(R(*function)(P1, P2, P3, P4, P5, A1, A2, A3), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class P2, class P3, class P4, class P5, class A1, class A2, class A3&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__5__3.html">_FunctionResultCallback_5_3</a>&lt;false,R,P1,P2,P3,P4,P5,A1,A2,A3&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, P2, P3, P4, P5, A1, A2, A3)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l07679">7679</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="b3adf079fcc4e7a067a82d24a7c248b3"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="b3adf079fcc4e7a067a82d24a7c248b3" args="(T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, A1, A2, A3), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class A1, class A2, class A3&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__5__3.html">_MemberResultCallback_5_3</a>&lt;false,R,T1,P1,P2,P3,P4,P5,A1,A2,A3&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, P5, A1, A2, A3)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l07586">7586</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="8f5cc1df0575f193bea637ad84e0357d"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="8f5cc1df0575f193bea637ad84e0357d" args="(const T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, A1, A2, A3) const, P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class A1, class A2, class A3&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__5__3.html">_ConstMemberResultCallback_5_3</a>&lt;false,R,T1,P1,P2,P3,P4,P5,A1,A2,A3&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, P5, A1, A2, A3) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l07486">7486</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="4a11679a145909531babd905f3c8748f"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="4a11679a145909531babd905f3c8748f" args="(R(*function)(P1, P2, P3, P4, A1, A2, A3), P1 p1, P2 p2, P3 p3, P4 p4)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class P2, class P3, class P4, class A1, class A2, class A3&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__4__3.html">_FunctionResultCallback_4_3</a>&lt;false,R,P1,P2,P3,P4,A1,A2,A3&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, P2, P3, P4, A1, A2, A3)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l07387">7387</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="e5476ebd002489dd3bde155373dd22b0"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="e5476ebd002489dd3bde155373dd22b0" args="(T1 *obj, R(T2::*member)(P1, P2, P3, P4, A1, A2, A3), P1 p1, P2 p2, P3 p3, P4 p4)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class A1, class A2, class A3&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__4__3.html">_MemberResultCallback_4_3</a>&lt;false,R,T1,P1,P2,P3,P4,A1,A2,A3&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, A1, A2, A3)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l07296">7296</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="8aeab468f44aec70e7ca2f84f793f0fa"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="8aeab468f44aec70e7ca2f84f793f0fa" args="(const T1 *obj, R(T2::*member)(P1, P2, P3, P4, A1, A2, A3) const, P1 p1, P2 p2, P3 p3, P4 p4)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class A1, class A2, class A3&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__4__3.html">_ConstMemberResultCallback_4_3</a>&lt;false,R,T1,P1,P2,P3,P4,A1,A2,A3&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, A1, A2, A3) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l07198">7198</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="c67919d9994b56a7c293d0cf52fbf156"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="c67919d9994b56a7c293d0cf52fbf156" args="(R(*function)(P1, P2, P3, A1, A2, A3), P1 p1, P2 p2, P3 p3)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class P2, class P3, class A1, class A2, class A3&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__3__3.html">_FunctionResultCallback_3_3</a>&lt;false,R,P1,P2,P3,A1,A2,A3&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, P2, P3, A1, A2, A3)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l07101">7101</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="cd6e88d25c281cca9218037a93467fe2"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="cd6e88d25c281cca9218037a93467fe2" args="(T1 *obj, R(T2::*member)(P1, P2, P3, A1, A2, A3), P1 p1, P2 p2, P3 p3)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class A1, class A2, class A3&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__3__3.html">_MemberResultCallback_3_3</a>&lt;false,R,T1,P1,P2,P3,A1,A2,A3&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, A1, A2, A3)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l07012">7012</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="0c1009cfd7660accb1d88f3632d2ad27"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="0c1009cfd7660accb1d88f3632d2ad27" args="(const T1 *obj, R(T2::*member)(P1, P2, P3, A1, A2, A3) const, P1 p1, P2 p2, P3 p3)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class A1, class A2, class A3&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__3__3.html">_ConstMemberResultCallback_3_3</a>&lt;false,R,T1,P1,P2,P3,A1,A2,A3&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, A1, A2, A3) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l06916">6916</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="9b329bf1d96c87665d1a2fa7fede9c33"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="9b329bf1d96c87665d1a2fa7fede9c33" args="(R(*function)(P1, P2, A1, A2, A3), P1 p1, P2 p2)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class P2, class A1, class A2, class A3&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__2__3.html">_FunctionResultCallback_2_3</a>&lt;false,R,P1,P2,A1,A2,A3&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, P2, A1, A2, A3)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l06821">6821</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="8c77947f457a51664a739fa5fea2c0a3"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="8c77947f457a51664a739fa5fea2c0a3" args="(T1 *obj, R(T2::*member)(P1, P2, A1, A2, A3), P1 p1, P2 p2)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class A1, class A2, class A3&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__2__3.html">_MemberResultCallback_2_3</a>&lt;false,R,T1,P1,P2,A1,A2,A3&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, A1, A2, A3)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l06734">6734</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="7dff0d2e5ba6aa7149c2dce06b1b9c6a"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="7dff0d2e5ba6aa7149c2dce06b1b9c6a" args="(const T1 *obj, R(T2::*member)(P1, P2, A1, A2, A3) const, P1 p1, P2 p2)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class A1, class A2, class A3&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__2__3.html">_ConstMemberResultCallback_2_3</a>&lt;false,R,T1,P1,P2,A1,A2,A3&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, A1, A2, A3) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l06640">6640</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="4caea93c99cd6e101047b6d540bda8c8"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="4caea93c99cd6e101047b6d540bda8c8" args="(R(*function)(P1, A1, A2, A3), P1 p1)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class A1, class A2, class A3&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__1__3.html">_FunctionResultCallback_1_3</a>&lt;false,R,P1,A1,A2,A3&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, A1, A2, A3)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l06547">6547</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="ae3bdd4b949416e84e1ae85ceb3c0a79"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="ae3bdd4b949416e84e1ae85ceb3c0a79" args="(T1 *obj, R(T2::*member)(P1, A1, A2, A3), P1 p1)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class A1, class A2, class A3&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__1__3.html">_MemberResultCallback_1_3</a>&lt;false,R,T1,P1,A1,A2,A3&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, A1, A2, A3)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l06462">6462</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="632e640cd28e2c1470a47ee3591d2706"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="632e640cd28e2c1470a47ee3591d2706" args="(const T1 *obj, R(T2::*member)(P1, A1, A2, A3) const, P1 p1)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class A1, class A2, class A3&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__1__3.html">_ConstMemberResultCallback_1_3</a>&lt;false,R,T1,P1,A1,A2,A3&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, A1, A2, A3) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l06370">6370</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="f8450bcae52dc3ae8287fa5c02833937"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="f8450bcae52dc3ae8287fa5c02833937" args="(R(*function)(A1, A2, A3))" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class A1, class A2, class A3&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__0__3.html">_FunctionResultCallback_0_3</a>&lt;false,R,A1,A2,A3&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(A1, A2, A3)&nbsp;</td>
          <td class="paramname"> <em>function</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l06279">6279</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="b1efc893056d9dd2a125694328ed9e2b"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="b1efc893056d9dd2a125694328ed9e2b" args="(T1 *obj, R(T2::*member)(A1, A2, A3))" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class A1, class A2, class A3&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__0__3.html">_MemberResultCallback_0_3</a>&lt;false,R,T1,A1,A2,A3&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(A1, A2, A3)&nbsp;</td>
          <td class="paramname"> <em>member</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l06196">6196</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="5293d4c84e914ca4c3a0485179570469"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="5293d4c84e914ca4c3a0485179570469" args="(const T1 *obj, R(T2::*member)(A1, A2, A3) const)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class A1, class A2, class A3&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__0__3.html">_ConstMemberResultCallback_0_3</a>&lt;false,R,T1,A1,A2,A3&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(A1, A2, A3) const &nbsp;</td>
          <td class="paramname"> <em>member</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l06106">6106</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="f0cd334c25e6865f5c6f7fc5c17b7075"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="f0cd334c25e6865f5c6f7fc5c17b7075" args="(R(*function)(P1, P2, P3, P4, P5, P6, A1, A2), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class P2, class P3, class P4, class P5, class P6, class A1, class A2&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__6__2.html">_FunctionResultCallback_6_2</a>&lt;false,R,P1,P2,P3,P4,P5,P6,A1,A2&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, P2, P3, P4, P5, P6, A1, A2)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P6&nbsp;</td>
          <td class="paramname"> <em>p6</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l06017">6017</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="31ec1fc340c3a4d22327096c2526d6de"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="31ec1fc340c3a4d22327096c2526d6de" args="(T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, P6, A1, A2), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class P6, class A1, class A2&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__6__2.html">_MemberResultCallback_6_2</a>&lt;false,R,T1,P1,P2,P3,P4,P5,P6,A1,A2&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, P5, P6, A1, A2)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P6&nbsp;</td>
          <td class="paramname"> <em>p6</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l05922">5922</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="a281bfbf4d2824376f56b62cc5123d2d"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="a281bfbf4d2824376f56b62cc5123d2d" args="(const T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, P6, A1, A2) const, P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class P6, class A1, class A2&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__6__2.html">_ConstMemberResultCallback_6_2</a>&lt;false,R,T1,P1,P2,P3,P4,P5,P6,A1,A2&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, P5, P6, A1, A2) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P6&nbsp;</td>
          <td class="paramname"> <em>p6</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l05820">5820</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="30b7b2cc6ae33b680ff65bbf3d99d854"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="30b7b2cc6ae33b680ff65bbf3d99d854" args="(R(*function)(P1, P2, P3, P4, P5, A1, A2), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class P2, class P3, class P4, class P5, class A1, class A2&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__5__2.html">_FunctionResultCallback_5_2</a>&lt;false,R,P1,P2,P3,P4,P5,A1,A2&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, P2, P3, P4, P5, A1, A2)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l05719">5719</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="ef69208c0f45912278a5313da29ba9bb"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="ef69208c0f45912278a5313da29ba9bb" args="(T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, A1, A2), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class A1, class A2&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__5__2.html">_MemberResultCallback_5_2</a>&lt;false,R,T1,P1,P2,P3,P4,P5,A1,A2&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, P5, A1, A2)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l05626">5626</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="325f0134bc3b9581edc8e8fcf347c5d8"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="325f0134bc3b9581edc8e8fcf347c5d8" args="(const T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, A1, A2) const, P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class A1, class A2&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__5__2.html">_ConstMemberResultCallback_5_2</a>&lt;false,R,T1,P1,P2,P3,P4,P5,A1,A2&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, P5, A1, A2) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l05526">5526</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="dc770504015df05d4218ced85d29f3fe"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="dc770504015df05d4218ced85d29f3fe" args="(R(*function)(P1, P2, P3, P4, A1, A2), P1 p1, P2 p2, P3 p3, P4 p4)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class P2, class P3, class P4, class A1, class A2&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__4__2.html">_FunctionResultCallback_4_2</a>&lt;false,R,P1,P2,P3,P4,A1,A2&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, P2, P3, P4, A1, A2)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l05427">5427</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="047d069e13110cd5880ad8dcd8c3520b"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="047d069e13110cd5880ad8dcd8c3520b" args="(T1 *obj, R(T2::*member)(P1, P2, P3, P4, A1, A2), P1 p1, P2 p2, P3 p3, P4 p4)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class A1, class A2&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__4__2.html">_MemberResultCallback_4_2</a>&lt;false,R,T1,P1,P2,P3,P4,A1,A2&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, A1, A2)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l05336">5336</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="b843315e15bac494ea941eae7e6925df"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="b843315e15bac494ea941eae7e6925df" args="(const T1 *obj, R(T2::*member)(P1, P2, P3, P4, A1, A2) const, P1 p1, P2 p2, P3 p3, P4 p4)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class A1, class A2&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__4__2.html">_ConstMemberResultCallback_4_2</a>&lt;false,R,T1,P1,P2,P3,P4,A1,A2&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, A1, A2) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l05238">5238</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="0528ab89a40fdf7986aca3ebdd624dab"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="0528ab89a40fdf7986aca3ebdd624dab" args="(R(*function)(P1, P2, P3, A1, A2), P1 p1, P2 p2, P3 p3)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class P2, class P3, class A1, class A2&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__3__2.html">_FunctionResultCallback_3_2</a>&lt;false,R,P1,P2,P3,A1,A2&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, P2, P3, A1, A2)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l05141">5141</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="d6a2d577fa544154075a535240b2ffa6"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="d6a2d577fa544154075a535240b2ffa6" args="(T1 *obj, R(T2::*member)(P1, P2, P3, A1, A2), P1 p1, P2 p2, P3 p3)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class A1, class A2&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__3__2.html">_MemberResultCallback_3_2</a>&lt;false,R,T1,P1,P2,P3,A1,A2&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, A1, A2)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l05052">5052</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="438741e9127ed35d25d3a308d17d60ae"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="438741e9127ed35d25d3a308d17d60ae" args="(const T1 *obj, R(T2::*member)(P1, P2, P3, A1, A2) const, P1 p1, P2 p2, P3 p3)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class A1, class A2&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__3__2.html">_ConstMemberResultCallback_3_2</a>&lt;false,R,T1,P1,P2,P3,A1,A2&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, A1, A2) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l04956">4956</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="0f0471dd898ebde0caa8b4244de292bc"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="0f0471dd898ebde0caa8b4244de292bc" args="(R(*function)(P1, P2, A1, A2), P1 p1, P2 p2)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class P2, class A1, class A2&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__2__2.html">_FunctionResultCallback_2_2</a>&lt;false,R,P1,P2,A1,A2&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, P2, A1, A2)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l04861">4861</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="94696c7c9b61b37ee828ee1566b57acc"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="94696c7c9b61b37ee828ee1566b57acc" args="(T1 *obj, R(T2::*member)(P1, P2, A1, A2), P1 p1, P2 p2)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class A1, class A2&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__2__2.html">_MemberResultCallback_2_2</a>&lt;false,R,T1,P1,P2,A1,A2&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, A1, A2)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l04774">4774</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="9bbfe7588532dbe105d617ab7d5545fa"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="9bbfe7588532dbe105d617ab7d5545fa" args="(const T1 *obj, R(T2::*member)(P1, P2, A1, A2) const, P1 p1, P2 p2)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class A1, class A2&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__2__2.html">_ConstMemberResultCallback_2_2</a>&lt;false,R,T1,P1,P2,A1,A2&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, A1, A2) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l04680">4680</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="9c92b266aff75fcce29302880bccc732"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="9c92b266aff75fcce29302880bccc732" args="(R(*function)(P1, A1, A2), P1 p1)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class A1, class A2&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__1__2.html">_FunctionResultCallback_1_2</a>&lt;false,R,P1,A1,A2&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, A1, A2)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l04587">4587</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="0bba46c8d2dca66ef556093bafdfd23d"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="0bba46c8d2dca66ef556093bafdfd23d" args="(T1 *obj, R(T2::*member)(P1, A1, A2), P1 p1)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class A1, class A2&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__1__2.html">_MemberResultCallback_1_2</a>&lt;false,R,T1,P1,A1,A2&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, A1, A2)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l04502">4502</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="9ebe019211d715542e1b94b40b83b713"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="9ebe019211d715542e1b94b40b83b713" args="(const T1 *obj, R(T2::*member)(P1, A1, A2) const, P1 p1)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class A1, class A2&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__1__2.html">_ConstMemberResultCallback_1_2</a>&lt;false,R,T1,P1,A1,A2&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, A1, A2) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l04410">4410</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="091b34ea1b50010eb8cb58d6e080556d"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="091b34ea1b50010eb8cb58d6e080556d" args="(R(*function)(A1, A2))" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class A1, class A2&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__0__2.html">_FunctionResultCallback_0_2</a>&lt;false,R,A1,A2&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(A1, A2)&nbsp;</td>
          <td class="paramname"> <em>function</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l04319">4319</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="f58ce42b71c05e35abafa75d8a357a14"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="f58ce42b71c05e35abafa75d8a357a14" args="(T1 *obj, R(T2::*member)(A1, A2))" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class A1, class A2&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__0__2.html">_MemberResultCallback_0_2</a>&lt;false,R,T1,A1,A2&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(A1, A2)&nbsp;</td>
          <td class="paramname"> <em>member</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l04236">4236</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="58d97c400387097fc7c6956797be56f5"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="58d97c400387097fc7c6956797be56f5" args="(const T1 *obj, R(T2::*member)(A1, A2) const)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class A1, class A2&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__0__2.html">_ConstMemberResultCallback_0_2</a>&lt;false,R,T1,A1,A2&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(A1, A2) const &nbsp;</td>
          <td class="paramname"> <em>member</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l04146">4146</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="4b0582a201d1bb87faece02891bcb20a"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="4b0582a201d1bb87faece02891bcb20a" args="(R(*function)(P1, P2, P3, P4, P5, P6, A1), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class P2, class P3, class P4, class P5, class P6, class A1&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__6__1.html">_FunctionResultCallback_6_1</a>&lt;false,R,P1,P2,P3,P4,P5,P6,A1&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, P2, P3, P4, P5, P6, A1)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P6&nbsp;</td>
          <td class="paramname"> <em>p6</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l04057">4057</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="4ff1313f719c28a474cc32af597ed41a"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="4ff1313f719c28a474cc32af597ed41a" args="(T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, P6, A1), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class P6, class A1&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__6__1.html">_MemberResultCallback_6_1</a>&lt;false,R,T1,P1,P2,P3,P4,P5,P6,A1&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, P5, P6, A1)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P6&nbsp;</td>
          <td class="paramname"> <em>p6</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l03962">3962</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="ade322e050406dafb3592ddb0c7a62dc"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="ade322e050406dafb3592ddb0c7a62dc" args="(const T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, P6, A1) const, P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class P6, class A1&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__6__1.html">_ConstMemberResultCallback_6_1</a>&lt;false,R,T1,P1,P2,P3,P4,P5,P6,A1&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, P5, P6, A1) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P6&nbsp;</td>
          <td class="paramname"> <em>p6</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l03860">3860</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="69a09d604e58e3e02c35b4cb3fdd51e5"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="69a09d604e58e3e02c35b4cb3fdd51e5" args="(R(*function)(P1, P2, P3, P4, P5, A1), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class P2, class P3, class P4, class P5, class A1&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__5__1.html">_FunctionResultCallback_5_1</a>&lt;false,R,P1,P2,P3,P4,P5,A1&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, P2, P3, P4, P5, A1)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l03759">3759</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="cc890fe6ea40b264b9376677cd02e4ef"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="cc890fe6ea40b264b9376677cd02e4ef" args="(T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, A1), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class A1&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__5__1.html">_MemberResultCallback_5_1</a>&lt;false,R,T1,P1,P2,P3,P4,P5,A1&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, P5, A1)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l03666">3666</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="5a49399885488beff06c8ff12c33ce39"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="5a49399885488beff06c8ff12c33ce39" args="(const T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, A1) const, P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class A1&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__5__1.html">_ConstMemberResultCallback_5_1</a>&lt;false,R,T1,P1,P2,P3,P4,P5,A1&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, P5, A1) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l03566">3566</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="5e944ee1e6ebffa77c6b819efb0ee20d"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="5e944ee1e6ebffa77c6b819efb0ee20d" args="(R(*function)(P1, P2, P3, P4, A1), P1 p1, P2 p2, P3 p3, P4 p4)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class P2, class P3, class P4, class A1&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__4__1.html">_FunctionResultCallback_4_1</a>&lt;false,R,P1,P2,P3,P4,A1&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, P2, P3, P4, A1)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l03467">3467</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="3db37b78c95139cfbb3fcae75a2efc14"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="3db37b78c95139cfbb3fcae75a2efc14" args="(T1 *obj, R(T2::*member)(P1, P2, P3, P4, A1), P1 p1, P2 p2, P3 p3, P4 p4)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class A1&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__4__1.html">_MemberResultCallback_4_1</a>&lt;false,R,T1,P1,P2,P3,P4,A1&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, A1)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l03376">3376</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="bcb00ebacc3d31978ff47ffcd07e6c63"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="bcb00ebacc3d31978ff47ffcd07e6c63" args="(const T1 *obj, R(T2::*member)(P1, P2, P3, P4, A1) const, P1 p1, P2 p2, P3 p3, P4 p4)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class A1&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__4__1.html">_ConstMemberResultCallback_4_1</a>&lt;false,R,T1,P1,P2,P3,P4,A1&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, A1) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l03278">3278</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="45aaa919a222ae9bfcd75a264c1e6ecc"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="45aaa919a222ae9bfcd75a264c1e6ecc" args="(R(*function)(P1, P2, P3, A1), P1 p1, P2 p2, P3 p3)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class P2, class P3, class A1&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__3__1.html">_FunctionResultCallback_3_1</a>&lt;false,R,P1,P2,P3,A1&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, P2, P3, A1)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l03181">3181</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="1fc39f19d1155035deb87b8c279fdb7b"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="1fc39f19d1155035deb87b8c279fdb7b" args="(T1 *obj, R(T2::*member)(P1, P2, P3, A1), P1 p1, P2 p2, P3 p3)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class A1&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__3__1.html">_MemberResultCallback_3_1</a>&lt;false,R,T1,P1,P2,P3,A1&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, A1)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l03092">3092</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="e63f6ad906886534beec9cb4a65830ab"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="e63f6ad906886534beec9cb4a65830ab" args="(const T1 *obj, R(T2::*member)(P1, P2, P3, A1) const, P1 p1, P2 p2, P3 p3)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class A1&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__3__1.html">_ConstMemberResultCallback_3_1</a>&lt;false,R,T1,P1,P2,P3,A1&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, A1) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l02996">2996</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="ab641ceba179174d191cdc5fe926c313"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="ab641ceba179174d191cdc5fe926c313" args="(R(*function)(P1, P2, A1), P1 p1, P2 p2)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class P2, class A1&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__2__1.html">_FunctionResultCallback_2_1</a>&lt;false,R,P1,P2,A1&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, P2, A1)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l02901">2901</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="1ccb84cc9c1b278126ffaaf86b3db1e9"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="1ccb84cc9c1b278126ffaaf86b3db1e9" args="(T1 *obj, R(T2::*member)(P1, P2, A1), P1 p1, P2 p2)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class A1&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__2__1.html">_MemberResultCallback_2_1</a>&lt;false,R,T1,P1,P2,A1&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, A1)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l02814">2814</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="7d6ddc01eaa89c7806e482019fdc8135"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="7d6ddc01eaa89c7806e482019fdc8135" args="(const T1 *obj, R(T2::*member)(P1, P2, A1) const, P1 p1, P2 p2)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class A1&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__2__1.html">_ConstMemberResultCallback_2_1</a>&lt;false,R,T1,P1,P2,A1&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, A1) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l02720">2720</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="15920ee8fe37fc3b0a033c9a30991526"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="15920ee8fe37fc3b0a033c9a30991526" args="(R(*function)(P1, A1), P1 p1)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class A1&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__1__1.html">_FunctionResultCallback_1_1</a>&lt;false,R,P1,A1&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, A1)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l02627">2627</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="0102a96e6995528aacde0b4d16e4bb5f"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="0102a96e6995528aacde0b4d16e4bb5f" args="(T1 *obj, R(T2::*member)(P1, A1), P1 p1)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class A1&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__1__1.html">_MemberResultCallback_1_1</a>&lt;false,R,T1,P1,A1&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, A1)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l02542">2542</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="6675aa74facb2277266c725c9757bad0"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="6675aa74facb2277266c725c9757bad0" args="(const T1 *obj, R(T2::*member)(P1, A1) const, P1 p1)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class A1&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__1__1.html">_ConstMemberResultCallback_1_1</a>&lt;false,R,T1,P1,A1&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, A1) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l02450">2450</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="56a7d39d5ff3d372d1acbd1d82b8891d"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="56a7d39d5ff3d372d1acbd1d82b8891d" args="(R(*function)(A1))" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class A1&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__0__1.html">_FunctionResultCallback_0_1</a>&lt;false,R,A1&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(A1)&nbsp;</td>
          <td class="paramname"> <em>function</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l02359">2359</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="ce494826428b97c5d91dfb0a5dbd586c"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="ce494826428b97c5d91dfb0a5dbd586c" args="(T1 *obj, R(T2::*member)(A1))" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class A1&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__0__1.html">_MemberResultCallback_0_1</a>&lt;false,R,T1,A1&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(A1)&nbsp;</td>
          <td class="paramname"> <em>member</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l02276">2276</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="f1d0c78d9b0f85234e6275e5e0d801cc"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="f1d0c78d9b0f85234e6275e5e0d801cc" args="(const T1 *obj, R(T2::*member)(A1) const)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class A1&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__0__1.html">_ConstMemberResultCallback_0_1</a>&lt;false,R,T1,A1&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(A1) const &nbsp;</td>
          <td class="paramname"> <em>member</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l02186">2186</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="5e368ae6868e814af3d61362f7fbfdfc"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="5e368ae6868e814af3d61362f7fbfdfc" args="(R(*function)(P1, P2, P3, P4, P5, P6), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class P2, class P3, class P4, class P5, class P6&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__6__0.html">_FunctionResultCallback_6_0</a>&lt;false,R,P1,P2,P3,P4,P5,P6&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, P2, P3, P4, P5, P6)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P6&nbsp;</td>
          <td class="paramname"> <em>p6</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l02097">2097</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="f0e0e6a6028ce8eb57d48c65f96cdfeb"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="f0e0e6a6028ce8eb57d48c65f96cdfeb" args="(T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, P6), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class P6&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__6__0.html">_MemberResultCallback_6_0</a>&lt;false,R,T1,P1,P2,P3,P4,P5,P6&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, P5, P6)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P6&nbsp;</td>
          <td class="paramname"> <em>p6</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l02002">2002</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="df85d392be54a7583872d4d87fcfa59a"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="df85d392be54a7583872d4d87fcfa59a" args="(const T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5, P6) const, P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5, class P6&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__6__0.html">_ConstMemberResultCallback_6_0</a>&lt;false,R,T1,P1,P2,P3,P4,P5,P6&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, P5, P6) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P6&nbsp;</td>
          <td class="paramname"> <em>p6</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l01900">1900</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="0e93c9a8643e884df82151e19e4b6ff6"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="0e93c9a8643e884df82151e19e4b6ff6" args="(R(*function)(P1, P2, P3, P4, P5), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class P2, class P3, class P4, class P5&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__5__0.html">_FunctionResultCallback_5_0</a>&lt;false,R,P1,P2,P3,P4,P5&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, P2, P3, P4, P5)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l01799">1799</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="713aff4a5507bae9b03fe11171f439d5"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="713aff4a5507bae9b03fe11171f439d5" args="(T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__5__0.html">_MemberResultCallback_5_0</a>&lt;false,R,T1,P1,P2,P3,P4,P5&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, P5)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l01706">1706</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="2e8444a1dff667f12f5ff648d81de48a"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="2e8444a1dff667f12f5ff648d81de48a" args="(const T1 *obj, R(T2::*member)(P1, P2, P3, P4, P5) const, P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4, class P5&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__5__0.html">_ConstMemberResultCallback_5_0</a>&lt;false,R,T1,P1,P2,P3,P4,P5&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4, P5) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P5&nbsp;</td>
          <td class="paramname"> <em>p5</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l01606">1606</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="8df7fcdb426439614630d544e1593024"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="8df7fcdb426439614630d544e1593024" args="(R(*function)(P1, P2, P3, P4), P1 p1, P2 p2, P3 p3, P4 p4)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class P2, class P3, class P4&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__4__0.html">_FunctionResultCallback_4_0</a>&lt;false,R,P1,P2,P3,P4&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, P2, P3, P4)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l01507">1507</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="c66051939798bf3f9867116e8e9eca63"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="c66051939798bf3f9867116e8e9eca63" args="(T1 *obj, R(T2::*member)(P1, P2, P3, P4), P1 p1, P2 p2, P3 p3, P4 p4)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__4__0.html">_MemberResultCallback_4_0</a>&lt;false,R,T1,P1,P2,P3,P4&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l01416">1416</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="f5fe50d7ab11c7c730ee40ebf612faf5"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="f5fe50d7ab11c7c730ee40ebf612faf5" args="(const T1 *obj, R(T2::*member)(P1, P2, P3, P4) const, P1 p1, P2 p2, P3 p3, P4 p4)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3, class P4&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__4__0.html">_ConstMemberResultCallback_4_0</a>&lt;false,R,T1,P1,P2,P3,P4&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3, P4) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P4&nbsp;</td>
          <td class="paramname"> <em>p4</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l01318">1318</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="d562b5c86f6b2c505f885a7e8e4bcf5c"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="d562b5c86f6b2c505f885a7e8e4bcf5c" args="(R(*function)(P1, P2, P3), P1 p1, P2 p2, P3 p3)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class P2, class P3&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__3__0.html">_FunctionResultCallback_3_0</a>&lt;false,R,P1,P2,P3&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, P2, P3)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l01221">1221</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="e2f4393c935f1b1d6595e101cafbed8e"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="e2f4393c935f1b1d6595e101cafbed8e" args="(T1 *obj, R(T2::*member)(P1, P2, P3), P1 p1, P2 p2, P3 p3)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__3__0.html">_MemberResultCallback_3_0</a>&lt;false,R,T1,P1,P2,P3&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l01132">1132</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="cf2bc41676c439ade33758f94f4cf4a4"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="cf2bc41676c439ade33758f94f4cf4a4" args="(const T1 *obj, R(T2::*member)(P1, P2, P3) const, P1 p1, P2 p2, P3 p3)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2, class P3&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__3__0.html">_ConstMemberResultCallback_3_0</a>&lt;false,R,T1,P1,P2,P3&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2, P3) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P3&nbsp;</td>
          <td class="paramname"> <em>p3</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l01036">1036</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="c5d010f5e64df84ad625aec24a4a2e1f"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="c5d010f5e64df84ad625aec24a4a2e1f" args="(R(*function)(P1, P2), P1 p1, P2 p2)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1, class P2&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__2__0.html">_FunctionResultCallback_2_0</a>&lt;false,R,P1,P2&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1, P2)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l00941">941</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="b58dc0fb0f8beec8af03e35fd872562a"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="b58dc0fb0f8beec8af03e35fd872562a" args="(T1 *obj, R(T2::*member)(P1, P2), P1 p1, P2 p2)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__2__0.html">_MemberResultCallback_2_0</a>&lt;false,R,T1,P1,P2&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l00854">854</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="05f0694b6b0913808f4986ed176d9982"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="05f0694b6b0913808f4986ed176d9982" args="(const T1 *obj, R(T2::*member)(P1, P2) const, P1 p1, P2 p2)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1, class P2&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__2__0.html">_ConstMemberResultCallback_2_0</a>&lt;false,R,T1,P1,P2&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1, P2) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P2&nbsp;</td>
          <td class="paramname"> <em>p2</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l00760">760</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="92c23e9d262cdad78370cc55541ad2c7"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="92c23e9d262cdad78370cc55541ad2c7" args="(R(*function)(P1), P1 p1)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R, class P1&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__1__0.html">_FunctionResultCallback_1_0</a>&lt;false,R,P1&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)(P1)&nbsp;</td>
          <td class="paramname"> <em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l00667">667</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="96721a7027798fcf45889cec5cba31be"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="96721a7027798fcf45889cec5cba31be" args="(T1 *obj, R(T2::*member)(P1), P1 p1)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__1__0.html">_MemberResultCallback_1_0</a>&lt;false,R,T1,P1&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1)&nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l00582">582</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="066ce1dbaa7ded0db5261cff149ccf56"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="066ce1dbaa7ded0db5261cff149ccf56" args="(const T1 *obj, R(T2::*member)(P1) const, P1 p1)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R, class P1&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__1__0.html">_ConstMemberResultCallback_1_0</a>&lt;false,R,T1,P1&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)(P1) const &nbsp;</td>
          <td class="paramname"> <em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">P1&nbsp;</td>
          <td class="paramname"> <em>p1</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l00490">490</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="527f715d44903e5d0cb0fc094eada8af"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="527f715d44903e5d0cb0fc094eada8af" args="(R(*function)())" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__FunctionResultCallback__0__0.html">_FunctionResultCallback_0_0</a>&lt;false,R&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">R(*)()&nbsp;</td>
          <td class="paramname"> <em>function</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l00399">399</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="9e4f78639ee766ba94105c8600a7cb40"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="9e4f78639ee766ba94105c8600a7cb40" args="(T1 *obj, R(T2::*member)())" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__MemberResultCallback__0__0.html">_MemberResultCallback_0_0</a>&lt;false,R,T1&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)()&nbsp;</td>
          <td class="paramname"> <em>member</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l00316">316</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="51b33b1a31be64e79fe4ccd48b5d5b53"></a><!-- doxytag: member="callback.h::NewPermanentCallback" ref="51b33b1a31be64e79fe4ccd48b5d5b53" args="(const T1 *obj, R(T2::*member)() const)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T1, class T2, class R&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class__ConstMemberResultCallback__0__0.html">_ConstMemberResultCallback_0_0</a>&lt;false,R,T1&gt;::base* NewPermanentCallback           </td>
          <td>(</td>
          <td class="paramtype">const T1 *&nbsp;</td>
          <td class="paramname"> <em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">R(T2::*)() const &nbsp;</td>
          <td class="paramname"> <em>member</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="callback_8h-source.html#l00226">226</a> of file <a class="el" href="callback_8h-source.html">callback.h</a>.</p>

</div>
</div><p>
</div>

  <!-- Start of footer. -->
  <table width=100% cellpadding=0 cellspacing=0 border=0>
    <tr valign=top>
      <td colspan=2 height=10></td>
    </tr>
    <tr valign=top>
      <td colspan=2 bgcolor=#389613 height=3></td>
    </tr>
  </table>

  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br />

  
  </body>
</html>
