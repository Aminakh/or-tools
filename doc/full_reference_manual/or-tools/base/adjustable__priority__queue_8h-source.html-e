<!-- Good morning, Mr. Phelps. -->
<html>
  <head>
    <meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
    <title>google3/base/adjustable_priority_queue.h Source File - Doxy</title>
    <link rel="shortcut icon" href="../../favicon.ico">
    <!-- Both stylesheets are supplied by Doxygen, with maybe minor tweaks from Google. -->
    <link href="../../doxygen.css" rel="stylesheet" type="text/css">
    <link href="../../tabs.css" rel="stylesheet" type="text/css">
  </head>

  <body topmargin=0 leftmargin=20 bottommargin=0 rightmargin=20 marginwidth=20 marginheight=0>
  <!-- Second part of the secret behind Doxy logo always having the word "Doxy" with the color of the day. -->
  <style>
    a.doxy_logo:hover {
      background-color: #389613
    }
  </style>

  <table width=100% cellpadding=0 cellspacing=0 border=0>
    <!-- Top horizontal line with the color of the day. -->
    <tr valign=top>
      <td colspan=3 bgcolor=#389613 height=3></td>
    </tr>

    <!-- Header row with the links at the right. -->
    <tr valign=top>
      <td colspan=3 align=right>
        <font size=-1>
          Generated on: <font color=#389613><b>Fri Apr  1 14:13:18 PDT 2011</b></font>
            for <b>custom file set</b>
        </font>
      </td>
    </tr>

    <!-- Header row with the logo and the search form. -->
    <tr valign=top>
      <!-- Logo. -->
      <td align=left width=150>
        <table width=150 height=54 cellpadding=0 cellspacing=0 border=0>
          <tr valign=top>
            <!-- First part of the secret behind Doxy logo always having the word "Doxy" with the color of the day. -->
            <td bgcolor=#389613>
              <a class="doxy_logo" href="../../index.html"><img src="../../doxy_logo.png" alt="Doxy" border=0></a>
            </td>
          </tr>
        </table>
      </td>
    </tr>

    <!-- Tiny vertical space below the form. -->
    <tr valign=top>
      <td colspan=3 height=3></td>
    </tr>
  </table>

  <!-- Header navigation row. -->
  <div class="memproto">
    <table width=100% cellpadding=0 cellspacing=0 border=0>
      <tr>
        <td align=left style="padding-left: 20px"><font size=+1><b><tt><font color=#333333>//
            <a href="../../index.html"><font color=#389613>doxy</font></a>/</font>
            <a href="../../google3/index.html">google3</a>/
            <a href="../../google3/base/index.html">base</a>/
            </tt></b></font>
        </td>
      </tr>
    </table>
  </div>
  <br />
    <!-- No subdirs found. -->
  <!-- End of header. -->
<!-- Generated by Doxygen 1.5.6 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.html"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.html"><span>Namespaces</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
<h1>google3/base/adjustable_priority_queue.h</h1><a href="adjustable__priority__queue_8h.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">// Copyright 2010 Google</span>
<a name="l00002"></a>00002 <span class="comment">// Licensed under the Apache License, Version 2.0 (the "License");</span>
<a name="l00003"></a>00003 <span class="comment">// you may not use this file except in compliance with the License.</span>
<a name="l00004"></a>00004 <span class="comment">// You may obtain a copy of the License at</span>
<a name="l00005"></a>00005 <span class="comment">//</span>
<a name="l00006"></a>00006 <span class="comment">//     http://www.apache.org/licenses/LICENSE-2.0</span>
<a name="l00007"></a>00007 <span class="comment">//</span>
<a name="l00008"></a>00008 <span class="comment">// Unless required by applicable law or agreed to in writing, software</span>
<a name="l00009"></a>00009 <span class="comment">// distributed under the License is distributed on an "AS IS" BASIS,</span>
<a name="l00010"></a>00010 <span class="comment">// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span>
<a name="l00011"></a>00011 <span class="comment">// See the License for the specific language governing permissions and</span>
<a name="l00012"></a>00012 <span class="comment">// limitations under the License.</span>
<a name="l00013"></a>00013 
<a name="l00014"></a>00014 <span class="preprocessor">#include &lt;functional&gt;</span>
<a name="l00015"></a>00015 <span class="preprocessor">#include &lt;list&gt;</span>
<a name="l00016"></a>00016 <span class="preprocessor">#include &lt;vector&gt;</span>
<a name="l00017"></a>00017 <span class="preprocessor">#include "<a class="code" href="basictypes_8h.html">base/basictypes.h</a>"</span>
<a name="l00018"></a>00018 <span class="preprocessor">#include "<a class="code" href="logging_8h.html">base/logging.h</a>"</span>
<a name="l00019"></a>00019 <span class="preprocessor">#include "<a class="code" href="macros_8h.html">base/macros.h</a>"</span>
<a name="l00020"></a>00020 
<a name="l00021"></a>00021 <span class="preprocessor">#ifndef BASE_ADJUSTABLE_PRIORITY_QUEUE_H_</span>
<a name="l00022"></a>00022 <span class="preprocessor"></span><span class="preprocessor">#define BASE_ADJUSTABLE_PRIORITY_QUEUE_H_</span>
<a name="l00023"></a>00023 <span class="preprocessor"></span>
<a name="l00024"></a><a class="code" href="namespaceoperations__research.html">00024</a> <span class="keyword">namespace </span>operations_research {
<a name="l00025"></a>00025 
<a name="l00026"></a><a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html">00026</a> <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; <span class="keyword">class </span><a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html">AdjustablePriorityQueue</a> {
<a name="l00027"></a>00027  <span class="keyword">public</span>:
<a name="l00028"></a>00028 
<a name="l00029"></a><a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#45ef5d5fa97d178f655682b62b994b8b">00029</a>   <a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#45ef5d5fa97d178f655682b62b994b8b">AdjustablePriorityQueue</a>() {}
<a name="l00030"></a>00030 
<a name="l00031"></a><a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#18e3128541643530eff524c88c650d00">00031</a>   <span class="keywordtype">void</span> <a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#18e3128541643530eff524c88c650d00">Add</a>(T* <span class="keyword">const</span> val) {
<a name="l00032"></a>00032     <a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#d2d8d3a31e86afc59b8ee49df156a3ce">elems_</a>.push_back(val);
<a name="l00033"></a>00033     <a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#f70377a191775eca10ed96838026eeee">AdjustUpwards</a>(<a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#d2d8d3a31e86afc59b8ee49df156a3ce">elems_</a>.size() - 1);
<a name="l00034"></a>00034   }
<a name="l00035"></a>00035 
<a name="l00036"></a><a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#d54f079d1263caadce99a2fd88d7bf92">00036</a>   <span class="keywordtype">void</span> <a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#d54f079d1263caadce99a2fd88d7bf92">Remove</a>(T* <span class="keyword">const</span> val) {
<a name="l00037"></a>00037     <span class="keyword">const</span> <span class="keywordtype">int</span> i = val-&gt;GetHeapIndex();
<a name="l00038"></a>00038     <span class="keywordflow">if</span> (i == <a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#d2d8d3a31e86afc59b8ee49df156a3ce">elems_</a>.size() - 1) {
<a name="l00039"></a>00039       <a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#d2d8d3a31e86afc59b8ee49df156a3ce">elems_</a>.pop_back();
<a name="l00040"></a>00040       <span class="keywordflow">return</span>;
<a name="l00041"></a>00041     }
<a name="l00042"></a>00042     <a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#d2d8d3a31e86afc59b8ee49df156a3ce">elems_</a>[i] = <a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#d2d8d3a31e86afc59b8ee49df156a3ce">elems_</a>.back();
<a name="l00043"></a>00043     <a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#d2d8d3a31e86afc59b8ee49df156a3ce">elems_</a>[i]-&gt;SetHeapIndex(i);
<a name="l00044"></a>00044     <a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#d2d8d3a31e86afc59b8ee49df156a3ce">elems_</a>.pop_back();
<a name="l00045"></a>00045     <a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#f224a05010d79cb35fb79404c20f2e46">NoteChangedPriority</a>(<a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#d2d8d3a31e86afc59b8ee49df156a3ce">elems_</a>[i]);
<a name="l00046"></a>00046   }
<a name="l00047"></a>00047 
<a name="l00048"></a><a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#ade7cd8e1b96f39a3d16cf5ccf2782bb">00048</a>   <span class="keywordtype">bool</span> <a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#ade7cd8e1b96f39a3d16cf5ccf2782bb">Contains</a>(<span class="keyword">const</span> T* <span class="keyword">const</span> val)<span class="keyword"> const </span>{
<a name="l00049"></a>00049     <span class="keyword">const</span> <span class="keywordtype">int</span> i = val-&gt;GetHeapIndex();
<a name="l00050"></a>00050     <span class="keywordflow">if</span> (i &lt; 0 || i &gt;= <a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#d2d8d3a31e86afc59b8ee49df156a3ce">elems_</a>.size() || <a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#d2d8d3a31e86afc59b8ee49df156a3ce">elems_</a>[i] != val) {
<a name="l00051"></a>00051       <span class="keywordflow">return</span> <span class="keyword">false</span>;
<a name="l00052"></a>00052     }
<a name="l00053"></a>00053     <span class="keywordflow">return</span> <span class="keyword">true</span>;
<a name="l00054"></a>00054   }
<a name="l00055"></a>00055 
<a name="l00056"></a><a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#f224a05010d79cb35fb79404c20f2e46">00056</a>   <span class="keywordtype">void</span> <a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#f224a05010d79cb35fb79404c20f2e46">NoteChangedPriority</a>(T* val) {
<a name="l00057"></a>00057     <span class="keyword">const</span> <span class="keywordtype">int</span> i = val-&gt;GetHeapIndex();
<a name="l00058"></a>00058     <span class="keyword">const</span> <span class="keywordtype">int</span> parent = (i - 1) / 2;
<a name="l00059"></a>00059     <span class="keywordflow">if</span> (*<a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#d2d8d3a31e86afc59b8ee49df156a3ce">elems_</a>[parent] &lt; *val) {
<a name="l00060"></a>00060       <a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#f70377a191775eca10ed96838026eeee">AdjustUpwards</a>(i);
<a name="l00061"></a>00061     } <span class="keywordflow">else</span> {
<a name="l00062"></a>00062       <a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#71ca5141365f527885284e412fb4ff77">AdjustDownwards</a>(i);
<a name="l00063"></a>00063     }
<a name="l00064"></a>00064   }
<a name="l00065"></a>00065 
<a name="l00066"></a><a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#65fad126501636ff0b95b8e8b057fb5c">00066</a>   T* <a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#65fad126501636ff0b95b8e8b057fb5c">Top</a>() { <span class="keywordflow">return</span> <a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#d2d8d3a31e86afc59b8ee49df156a3ce">elems_</a>[0]; }
<a name="l00067"></a>00067 
<a name="l00068"></a><a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#08dc8bcf98c1c596b356076b6e174d8d">00068</a>   <span class="keyword">const</span> T* <a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#65fad126501636ff0b95b8e8b057fb5c">Top</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#d2d8d3a31e86afc59b8ee49df156a3ce">elems_</a>[0]; }
<a name="l00069"></a>00069 
<a name="l00070"></a><a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#20df2e9d266aa5c9c82423d45815862c">00070</a>   <span class="keywordtype">void</span> <a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#20df2e9d266aa5c9c82423d45815862c">Pop</a>() { <a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#d54f079d1263caadce99a2fd88d7bf92">Remove</a>(<a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#65fad126501636ff0b95b8e8b057fb5c">Top</a>()); }
<a name="l00071"></a>00071 
<a name="l00072"></a><a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#d862597281c72e0c47a378a1fdd64cce">00072</a>   <span class="keywordtype">int</span> <a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#d862597281c72e0c47a378a1fdd64cce">Size</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#d2d8d3a31e86afc59b8ee49df156a3ce">elems_</a>.size(); }
<a name="l00073"></a>00073 
<a name="l00074"></a><a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#0cdf3610d25b70f9687dac5b5ac7423b">00074</a>   <span class="keywordtype">bool</span> <a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#0cdf3610d25b70f9687dac5b5ac7423b">IsEmpty</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#d2d8d3a31e86afc59b8ee49df156a3ce">elems_</a>.empty(); }
<a name="l00075"></a>00075 
<a name="l00076"></a><a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#03ba32716ecf4b25506753d9e313d0bb">00076</a>   <span class="keywordtype">void</span> <a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#03ba32716ecf4b25506753d9e313d0bb">Clear</a>() { <a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#d2d8d3a31e86afc59b8ee49df156a3ce">elems_</a>.clear(); }
<a name="l00077"></a>00077 
<a name="l00078"></a><a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#3299e5cbe55ff5d3df8e841672671b8f">00078</a>   <span class="keywordtype">void</span> <a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#3299e5cbe55ff5d3df8e841672671b8f">CheckValid</a>()<span class="keyword"> const </span>{
<a name="l00079"></a>00079     <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; <a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#d2d8d3a31e86afc59b8ee49df156a3ce">elems_</a>.size(); ++i) {
<a name="l00080"></a>00080       <span class="keyword">const</span> <span class="keywordtype">int</span> left_child = 1 + 2 * i;
<a name="l00081"></a>00081       <span class="keywordflow">if</span> (left_child &lt; <a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#d2d8d3a31e86afc59b8ee49df156a3ce">elems_</a>.size()) {
<a name="l00082"></a>00082         <a class="code" href="logging_8h.html#8468e943c7f8eb267dd967db3adc6e56">CHECK_GE</a>(<a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#d2d8d3a31e86afc59b8ee49df156a3ce">elems_</a>[i], <a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#d2d8d3a31e86afc59b8ee49df156a3ce">elems_</a>[left_child]);
<a name="l00083"></a>00083       }
<a name="l00084"></a>00084       <span class="keyword">const</span> <span class="keywordtype">int</span> right_child = left_child + 1;
<a name="l00085"></a>00085       <span class="keywordflow">if</span> (right_child &lt; <a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#d2d8d3a31e86afc59b8ee49df156a3ce">elems_</a>.size()) {
<a name="l00086"></a>00086         <a class="code" href="logging_8h.html#8468e943c7f8eb267dd967db3adc6e56">CHECK_GE</a>(<a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#d2d8d3a31e86afc59b8ee49df156a3ce">elems_</a>[i], <a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#d2d8d3a31e86afc59b8ee49df156a3ce">elems_</a>[right_child]);
<a name="l00087"></a>00087       }
<a name="l00088"></a>00088     }
<a name="l00089"></a>00089   }
<a name="l00090"></a>00090  <span class="keyword">private</span>:
<a name="l00091"></a><a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#f70377a191775eca10ed96838026eeee">00091</a>   <span class="keywordtype">void</span> <a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#f70377a191775eca10ed96838026eeee">AdjustUpwards</a>(<span class="keywordtype">int</span> i) {
<a name="l00092"></a>00092     T* <span class="keyword">const</span> t = <a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#d2d8d3a31e86afc59b8ee49df156a3ce">elems_</a>[i];
<a name="l00093"></a>00093     <span class="keywordflow">while</span> (i &gt; 0) {
<a name="l00094"></a>00094       <span class="keyword">const</span> <span class="keywordtype">int</span> parent = (i - 1) / 2;
<a name="l00095"></a>00095       <span class="keywordflow">if</span> (!(*<a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#d2d8d3a31e86afc59b8ee49df156a3ce">elems_</a>[parent] &lt; *t)) {
<a name="l00096"></a>00096         <span class="keywordflow">break</span>;
<a name="l00097"></a>00097       }
<a name="l00098"></a>00098       <a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#d2d8d3a31e86afc59b8ee49df156a3ce">elems_</a>[i] = <a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#d2d8d3a31e86afc59b8ee49df156a3ce">elems_</a>[parent];
<a name="l00099"></a>00099       <a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#d2d8d3a31e86afc59b8ee49df156a3ce">elems_</a>[i]-&gt;SetHeapIndex(i);
<a name="l00100"></a>00100       i = parent;
<a name="l00101"></a>00101     }
<a name="l00102"></a>00102     <a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#d2d8d3a31e86afc59b8ee49df156a3ce">elems_</a>[i] = t;
<a name="l00103"></a>00103     t-&gt;SetHeapIndex(i);
<a name="l00104"></a>00104   }
<a name="l00105"></a>00105 
<a name="l00106"></a><a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#71ca5141365f527885284e412fb4ff77">00106</a>   <span class="keywordtype">void</span> <a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#71ca5141365f527885284e412fb4ff77">AdjustDownwards</a>(<span class="keywordtype">int</span> i) {
<a name="l00107"></a>00107     T* <span class="keyword">const</span> t = <a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#d2d8d3a31e86afc59b8ee49df156a3ce">elems_</a>[i];
<a name="l00108"></a>00108     <span class="keywordflow">while</span> (<span class="keyword">true</span>) {
<a name="l00109"></a>00109       <span class="keyword">const</span> <span class="keywordtype">int</span> left_child = 1 + 2 * i;
<a name="l00110"></a>00110       <span class="keywordflow">if</span> (left_child &gt;= <a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#d2d8d3a31e86afc59b8ee49df156a3ce">elems_</a>.size()) {
<a name="l00111"></a>00111         <span class="keywordflow">break</span>;
<a name="l00112"></a>00112       }
<a name="l00113"></a>00113       <span class="keyword">const</span> <span class="keywordtype">int</span> right_child = left_child + 1;
<a name="l00114"></a>00114       <span class="keyword">const</span> <span class="keywordtype">int</span> next_i = (right_child &lt; <a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#d2d8d3a31e86afc59b8ee49df156a3ce">elems_</a>.size() &amp;&amp;
<a name="l00115"></a>00115                           *<a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#d2d8d3a31e86afc59b8ee49df156a3ce">elems_</a>[left_child] &lt; *<a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#d2d8d3a31e86afc59b8ee49df156a3ce">elems_</a>[right_child]) ?
<a name="l00116"></a>00116           right_child :
<a name="l00117"></a>00117           left_child;
<a name="l00118"></a>00118       <span class="keywordflow">if</span> (!(*t &lt; *<a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#d2d8d3a31e86afc59b8ee49df156a3ce">elems_</a>[next_i])) {
<a name="l00119"></a>00119         <span class="keywordflow">break</span>;
<a name="l00120"></a>00120       }
<a name="l00121"></a>00121       <a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#d2d8d3a31e86afc59b8ee49df156a3ce">elems_</a>[i] = <a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#d2d8d3a31e86afc59b8ee49df156a3ce">elems_</a>[next_i];
<a name="l00122"></a>00122       <a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#d2d8d3a31e86afc59b8ee49df156a3ce">elems_</a>[i]-&gt;SetHeapIndex(i);
<a name="l00123"></a>00123       i = next_i;
<a name="l00124"></a>00124     }
<a name="l00125"></a>00125     <a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#d2d8d3a31e86afc59b8ee49df156a3ce">elems_</a>[i] = t;
<a name="l00126"></a>00126     t-&gt;SetHeapIndex(i);
<a name="l00127"></a>00127   }
<a name="l00128"></a>00128 
<a name="l00129"></a><a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#d2d8d3a31e86afc59b8ee49df156a3ce">00129</a>   vector&lt;T*&gt; <a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#d2d8d3a31e86afc59b8ee49df156a3ce">elems_</a>;
<a name="l00130"></a>00130   <a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html#b96e494c91fb9dbf4f1f9657c9a39b2d">DISALLOW_COPY_AND_ASSIGN</a>(<a class="code" href="classoperations__research_1_1AdjustablePriorityQueue.html">AdjustablePriorityQueue</a>);
<a name="l00131"></a>00131 };
<a name="l00132"></a>00132 }  <span class="comment">// namespace operations_research</span>
<a name="l00133"></a>00133 
<a name="l00134"></a>00134 <span class="preprocessor">#endif  // BASE_ADJUSTABLE_PRIORITY_QUEUE_H_</span>
</pre></div></div>

  <!-- Start of footer. -->
  <table width=100% cellpadding=0 cellspacing=0 border=0>
    <tr valign=top>
      <td colspan=2 height=10></td>
    </tr>
    <tr valign=top>
      <td colspan=2 bgcolor=#389613 height=3></td>
    </tr>
  </table>

  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
  <br /><br />

  
  </body>
</html>
